HIDEM
sauve_palette
ON ERROR GOSUB fin
ON BREAK GOSUB fin
ecran
charge_degas("fire.pi1")
GOSUB load
larg%=3
h%=56
d4%=&X1111
FOR i%=0 TO 3
  IF BTST(d4%,i%)
    INC nbplan%
  ENDIF
NEXT i%
bloc$=SPACE$(h%*(larg%*2*nbplan%)+30)
bloc%=VARPTR(bloc$)
VOID C:fget%(L:e1%,L:0,L:0,L:larg%,L:h%,L:bloc%,L:d4%)
VOID XBIOS(5,L:e2%,L:-1,W:-1)
charge_degas("1.pi1")
y%=117
DO
  MOUSE xx%,yy%,dum%
  IF xx%>270
    xx%=270
  ENDIF
  x%=xx%
  BMOVE e1%,e2%,32000
  VOID C:fput%(L:x%,L:y%,L:bloc%,L:e2%)
  VOID XBIOS(5,L:e3%,L:e2%,W:-1)
  VSYNC
  SWAP e2%,e3%
  EXIT IF MOUSEK OR LEN(INKEY$)
LOOP
fin
END
> PROCEDURE ecran
  RESERVE FRE(0)-110000
  e1%=GEMDOS(72,L:32000)
  e21%=GEMDOS(72,L:32260)
  e31%=GEMDOS(72,L:32260)
  e2%=(e21% AND &HFFFF00)+256
  e3%=(e31% AND &HFFFF00)+256
RETURN
> PROCEDURE fin
  SHOWM
  VOID XBIOS(6,L:VARPTR(palette$))
  VOID XBIOS(5,L:XBIOS(3),L:XBIOS(3),W:-1)
  VOID GEMDOS(73,L:e1%)
  VOID GEMDOS(73,L:e21%)
  VOID GEMDOS(73,L:e31%)
  VOID GEMDOS(73,L:fget%)
  VOID GEMDOS(73,L:fput%)
  RESERVE
  END
RETURN
> PROCEDURE charge_degas(nom$)
  couleur$=STRING$(32," ")
  OPEN "i",#1,nom$
  SEEK #1,2
  BGET #1,VARPTR(couleur$),32
  VOID XBIOS(6,L:VARPTR(couleur$))
  SEEK #1,34
  BGET #1,e1%,32000
  CLOSE #1
RETURN
> PROCEDURE load
  fget%=GEMDOS(72,L:152)
  RESTORE fget
  i%=0
  DO
    READ code$
    EXIT IF code$="fin"
    code$="&H"+code$
    code%=VAL(code$)
    fget$=fget$+MKI$(code%)
    INC i%
  LOOP
  BMOVE VARPTR(fget$),fget%,152
fget:
  DATA 206F,0004,202F,0008,222F,000C,242F,0010,262F,0014,246F
  DATA 0018,282F,001C,49D2,45EA,001E,28C4,E888,E788,C2FC,00A0
  DATA D280,D1C1,3E02,E78F,2C07,4487,0687,0000,00A0,5187,28C7
  DATA 5087,5382,5383,28C2,28C3,70FF,7C03,0D04,6700,000E,5280
  DATA 2206,E389,4481,5C81,38C1,51CE,FFEC,2C00,5286,E38E,99C6
  DATA D9FC,0000,0008,2880,3203,2002,7C03,0D04,6700,0004,34D0
  DATA 41E8,0002,51CE,FFF2,51C8,FFEC,D1C7,51C9,FFE4,4E75
  DATA fin
  fput%=GEMDOS(72,L:936)
  RESTORE fput
  i%=0
  DO
    READ code$
    EXIT IF code$="fin"
    code$="&H"+code$
    code%=VAL(code$)
    fput$=fput$+MKI$(code%)
    INC i%
  LOOP
  BMOVE VARPTR(fput$),fput%,936
fput:
  DATA 202F,0004,222F,0008,206F,000C,286F,0010,0C40,0140,6500
  DATA 0004,4E75,4A40,6C00,0004,4E75,0C41,00C8,6500,0004,4E75
  '
  DATA 4A41,6C00,0004,4E75,45E8,001E,23E8,0004,0005,C64A,23E8
  DATA 0008,0005,C652,23FC,0000,0000,0005,C64E,2C00,0286,0000
  DATA 000F,4486,0686,0000,0010,13FC,0000,0005,C644,E888,2800
  DATA 2A00,DAA8,0008,0C05,0013,6500,0036,4484,06B4,0000,0013
  DATA 23C4,0005,C652,4484,D8A8,0008,2A28,0018,5285,E38D,CAC4
  DATA 23C5,0005,C64E,E78C,D9B9,0005,C64A,13FC,0001,0005,C644
  DATA E788,2E28,000C,2801,2A01,DAA8,000C,0C45,00C8,6500,000C
  DATA 4484,0684,0000,00C8,2E04,C2FC,00A0,D280,D9C1,2828,0018
  DATA 0C04,0002,6700,00BC,0C04,0001,6700,0184,4A04,6700,0226
  DATA 23C7,0005,C646,2039,0005,C652,7200,7400,7600,7800,4241
  DATA 4242,4243,4244,7A00,4247,3A1A,EDAD,8E85,8285,4841,7A00
  DATA 3A1A,EDAD,8E85,8485,4842,7A00,3A1A,EDAD,8E85,8685,4843
  DATA 7A00,3A1A,EDAD,8E85,8885,4844,7A00,4847,4647,CF54,835C
  DATA CF54,855C,CF54,875C,CF54,895C,51C8,FFAE,D5F9,0005,C64E
  DATA 4A39,0005,C644,6600,0022,4847,4841,4842,4843,4844,4647
  DATA CF54,835C,CF54,855C,CF54,875C,CF54,895C,49EC,FFF8,508C
  DATA D9F9,0005,C64A,2E39,0005,C646,51CF,FF58,4E75,43D4,4BD4
  DATA 4DD4,7800,3828,0010,D9C4,3828,0012,DBC4,3828,0014,DDC4
  DATA 23C7,0005,C646,2039,0005,C652,7200,7400,7600,4241,4242
  DATA 4243,7A00,4247,3A1A,EDAD,8E85,8285,4841,7A00,3A1A,EDAD
  DATA 8E85,8485,4842,7A00,3A1A,EDAD,8E85,8685,4843,7A00,4847
  DATA 4647,CF59,CF59,CF59,CF59,8354,8555,8756,508C,508D,508E
  DATA 51C8,FFB8,D5F9,0005,C64E,4A39,0005,C644,6600,0020,4847
  DATA 4841,4842,4843,4647,CF51,CF69,0002,CF69,0004,CF69,0006
  DATA 8354,8555,8756,5089,508C,508D,508E,D3F9,0005,C64A,D9F9
  DATA 0005,C64A,DBF9,0005,C64A,DDF9,0005,C64A,2E39,0005,C646
  DATA 51CF,FF4E,4E75,43DA,4BD4,7800,3828,0010,D9C4,3828,0012
  DATA DBC4,23C7,0005,C646,2039,0005,C652,7200,7400,4241,4242
  DATA 7A00,4247,3A1A,EDAD,8E85,8285,4841,7A00,3A1A,EDAD,8E85
  DATA 8485,4842,7A00,4847,4647,CF59,CF59,CF59,CF59,8354,8555
  DATA 508C,508D,51C8,FFCA,D5F9,0005,C64E,4A39,0005,C644,6600
  DATA 001C,4847,4841,4842,4647,CF51,CF69,0002,CF69,0004,CF69
  DATA 0006,8354,8555,508C,508D,5089,D3F9,0005,C64A,D9F9,0005
  DATA C64A,DBF9,0005,C64A,2E39,0005,C646,51CF,FF6E,4E75,43D4
  DATA 7800,3828,0010,D9C4,23C7,0005,C646,2039,0005,C652,7200
  DATA 4241,7A00,4247,3A1A,EDAD,8E85,8285,4841,7A00,4847,4647
  DATA CF59,CF59,CF59,CF59,8354,508C,51C8,FFDC,D5F9,0005,C64E
  DATA 4A39,0005,C644,6600,0018,4847,4841,4647,CF51,CF69,0002
  DATA CF69,0004,CF69,0006,8354,508C,5089,D9F9,0005,C64A,D3F9
  DATA 0005,C64A,2E39,0005,C646,51CF,FF8E,4E75,0000,0000,0000
  DATA 0000,0000,0000,0000,0000,0000
  DATA fin
RETURN
> PROCEDURE sauve_palette
  palette$=SPACE$(32)
  FOR i%=0 TO 30 STEP 2
    DPOKE VARPTR(palette$)+i%,DPEEK(&HFF8240+i%)
  NEXT i%
RETURN
