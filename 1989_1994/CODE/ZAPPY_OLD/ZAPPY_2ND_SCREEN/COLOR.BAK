IERA	EQU	$FFFA07		* INTERUPTION ENABLE A
IERB	EQU	$FFFA09		* INTERUPTION ENABLE B
ISRA	EQU	$FFFA0F		* INTERUPTION IN-SERVICE A
IMRA	EQU	$FFFA13		* INTERUPTION MASQUE A
TBCR	EQU	$FFFA1B		* TIMER B CONTROL REGISTER
TBDR	EQU	$FFFA21		* TIMER B DONNEE REGISTER
SYNCRO	EQU	$FF820A		* REGISTRE SYNCRO SHIFTER
COUL_0	EQU	$FF8240
COUL_1	EQU	$FF8242		* ADRESSES DES REGISTRES
COUL_2	EQU	$FF8244		* DE LA PALETTE DU SHIFTER
COUL_3	EQU	$FF8246
COUL_4	EQU	$FF8248
COUL_5	EQU	$FF824A
COUL_6	EQU	$FF824C
COUL_7	EQU	$FF824E
COUL_8	EQU	$FF8250
COUL_9	EQU	$FF8252
COUL_10	EQU	$FF8254
COUL_11	EQU	$FF8256
COUL_12	EQU	$FF8258
COUL_13	EQU	$FF825A
COUL_14	EQU	$FF825C
COUL_15	EQU	$FF825E
ACIA	EQU	$FFFC02		* LECTURE DE L'ACIA CLAVIER
PSG	EQU	$FF8800	        * pour le son...


	*OPT	X-			* SUPRIME LA TABLE SYMBOLIQUE
 	SECTION TEXT
DEBUT:	MOVE.L  A7,A5
	LEA.L 	D_PILE,A7
	MOVE.L 	4(A5),A5
	MOVE.L 	$C(A5),D0
	ADD.L 	$14(A5),D0
	ADD.L 	$1C(A5),D0
	ADD.L 	#$100,D0		* LE TRADITIONELLE MSSHRINK
	MOVE.L 	D0,-(SP)		* PAS INDISPENSABLE ICI
        MOVE.L 	A5,-(SP)
	MOVE.W 	#0,-(SP)
	MOVE.W 	#$4A,-(SP)
	TRAP 	#1
	LEA 	12(SP),SP
	
	CLR.L 	-(SP)			* PASSAGE EN SUPERVISEUR
	MOVE.W 	#$20,-(SP)		*
	TRAP 	#1			*
	ADDQ.L 	#6,SP			*
	MOVE.L 	D0,SAUVE		* SAUVE LA PILE UTILISATEUR
			
	MOVE.B	IERA,MFP1		*
	MOVE.B	IERB,MFP2		*
	MOVE.B	ISRA,MFP3		* SAUVE LES REGISTRES
	MOVE.B	IMRA,MFP4		* UTILISES DU MFP
	MOVE.B	TBCR,MFP5		*
	MOVE.B	TBDR,MFP6		*
	
	CLR.B	IERA			* VIRE TOUTES LES
	CLR.B	IERB			* INTERUPTION ! ( SAUVAGE NON ? ) 
	

	MOVE.L	#BUFFER,D0		* ADRESSE DU BUFFER POUR ECRAN
	ANDI.L	#$FFFFFF00,D0		* SUPRIME LES 8 BITS "FAIBLE"
	ADD.L	#512,D0			* ET FAIT MULTIPLE DE 256
	MOVE.L	D0,ECRAN		* ON SAUVE L'ADRESSE CALCULEE
	
	MOVE.W	#4,-(SP)		* APPEL FONCTION GETREZ
	TRAP 	#14			* XBIOS...
	ADDQ.L	#2,SP			*
	MOVE.W	D0,RES			* SAUVE LA RESOLUTION
	
	MOVE.W	#2,-(SP)		* APPEL FONCTION PHYSBASE
	TRAP 	#14			* XBIOS
	ADDQ.L 	#2,SP			*
	MOVE.L	D0,ANC_ECR		* SAUVE L'ADRESSE ECRAN
	
	MOVE.W 	#0,-(SP)		* BASSE RESOLUTION
	MOVE.L	ECRAN,-(SP)		* PHYSBASE A ECRAN
	MOVE.L	ECRAN,-(SP)		* LOGBASE A ECRAN
	MOVE.W 	#5,-(SP)		* FONCTION SETSCREEN
	TRAP 	#14			* DU XBIOS
	LEA.L 	12(SP),SP		*

	
	LEA.L	COUL_0,A0		* ADRESSE PALETTE SHIFTER
	MOVEM.L	(A0),D0-D7		* RECUPERE LES 16 REGISTRES
	LEA.L	ANC_PAL,A0		* ADRESSE DE SAUVEGARDE
	MOVEM.L	D0-D7,(A0)		* SAUVE LES 16 REGISTRES
	
	MOVE.L #MES_F,MES_PNT		* INIT POINTEUR MESSAGE
	MOVE.B	#4,NB_BIT		* 4 DECALAGE
        MOVE.L  #SCR+34,A0
        MOVE.L  ECRAN,A1
        MOVE.L  #7999,D0
D       MOVE.L  (A0)+,(A1)+
        DBF D0,D	
	
	MOVE.L	$70,ANC_VBL		* SAUVE L'ANCIEN VECTEUR VBL
	MOVE.L	#VBL_IR,$70		* ET PLACE LE MIEN...
	MOVE.L	$120,ANC_TB		* SAUVE ANCIEN VECTEUR TIMER B
	MOVE.L	#TB0_IR,$120		* ET PLACE LE MIEN...
	
	DC.W	$A00A			* CACHE LA SOURIS (LINE A)
	MOVE.B	#$12,ACIA		* INIT CLAV
	
	CLR.B	TBCR			* ARRET DU TIMER B (PLUS PRUDENT)
	BSET	#0,IERA			* AUTORISE LES INTERUPTIONS
	BSET	#0,IMRA			* SUR LE TIMER B

**********************************************************************
			* ON TOURNE ICI TANT QU'ON N'A PAS APPUYE SUR
			* LA BARRE D'ESPACE CAR TOUTES L'ANIMATION EST
			* FAITE DANS INTERUPTION VBL...
BOUCLE:	
	MOVE.B	VSYNC,D0		* ATTEND UNE SYNCRO VERTICALE
WAIT	CMP.B	VSYNC,D0		* POUR LE TESTS DES TOUCHES
	BEQ.S	WAIT			*
	CMP.B	#$39,ACIA		* TESTE ESPACE (CODE SCAN)
	BNE.S	BOUCLE			* SI ESPACE, ON SORT DE L'INTRO
***********************************************************************

FIN:	
	MOVE.B	#8,ACIA			* REMET LE CLAVIER
	MOVE.B	MFP1,IERA		* RESTAURE LE MFP
	MOVE.B	MFP2,IERB		*
	MOVE.B	MFP3,ISRA		*
	MOVE.B	MFP4,IMRA		*
	MOVE.B	MFP5,TBCR		*
	MOVE.B	MFP6,TBDR		*
	
	MOVE.L	ANC_VBL,$70		* REMET LE VECTEUR VBL
	MOVE.L	ANC_TB,$120		* REMET LE VECTEUR TIMER C
	
	LEA.L	ANC_PAL,A0		* ADRESSE PALETTE SAUVEE
	MOVEM.L	(A0),D0-D7		* RECUPERE LES 16 REGISTRES
	LEA.L	COUL_0,A0		* ADRESSE PALETTE SHIFTER
	MOVEM.L	D0-D7,(A0)		* RESTITUE LES COULEURS
	
	MOVE.W 	RES,-(SP)		* ANCIENNE RESOLUTION
	MOVE.L	ANC_ECR,-(SP)		* ANCIEN ECRAN PHYSIQUE
	MOVE.L	ANC_ECR,-(SP)		* ANCIEN ECRAN LOGIQUE
	MOVE.W 	#5,-(SP)		* FONCTION SETSCREEN
	TRAP 	#14			* DU XBIOS
	LEA.L 	12(SP),SP		* CORRIGE LA PILE
	
	MOVE.L	SAUVE,-(SP)		* RETOUR EN UTILISATEUR
	MOVE.W 	#$20,-(SP)		* AVEC LA FONCTION SUPER
	TRAP 	#1			* DU GEMDOS
	ADDQ.L 	#6,SP			*
	
	PEA	CHUT_DA	   		* ADRESSE DES PARAMETRES
	MOVE.W	#$20,-(A7) 		* FONCTION DOSOUND
	TRAP	#14        		* DU XBIOS
	ADDQ.L	#6,A7      		* CORIGE LA PILE

	CLR.W 	-(SP)			* FIN DU PROGRAMME
	TRAP	#1			* FONCTION PTERM
	


********* SOUS PROGRAMMES D'INTERUPTION ************

VBL_IR	
	MOVEM.L	D0,-(SP)		* SAUVE LE REGISTRE
	CLR.B	TBCR			* ARRET DU TIMER B
	MOVE.B	#199,TBDR		* INTERUPTION SUR LIGNE 117
	MOVE.B	#8,TBCR			* TIMER C EN EVENT COUNT MODE
	LEA.L	COUL_0,A6		* ADRESSE PALETTE SHIFTER DANS A6
      MOVEA.L #COLOR,A5
     REPT 8
     	MOVE.L	(A5)+,(A6)+		* MET LA NOUVELLE PALETTE EN PLACE
     ENDR

;        MOVE.W  #$777,$FF8240
VBL3	MOVEM.L	(SP)+,D0		* RESTAURE LE REGISTRE
	NOT.B	VSYNC			* BASCULE POUR SYNCRO
	RTE				* FIN DE L'INTERUPTION VBL

******************************

;TB_IR	
;	LEA.L	COUL_0,A6		* ADRESSE PALETTE SHIFTER DANS A6
;	LEA.L	PAL2,A5			* ADRESSE DE LA NOUVELLE PALETTE
;     REPT 8
;     	MOVE.L	(A5)+,(A6)+		* MET EN PLACE LA NOUVELLE PALETTE
;     ENDR
;	CLR.B	TBCR			* ARRET DU TIMER
;	MOVE.B	#74,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
;	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
;	MOVE.L	#TB1_IR,$120		* NOUVELLE ROUTINE TIMER B
;	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
;	RTE				* FIN DE L'INTERUPTION (RETOUR)

;TB1_IR	
;	LEA.L	COUL_0,A6		* ADRESSE PALETTE SHIFTER
;	LEA.L	PAL3,A5			* ADRESSE DE LA NOUVELLE PALETTE
;     REPT 8
;     	MOVE.L	(A5)+,(A6)+		* MET EN PLACE LA NOUVELLE PALETTE
;     ENDR
;	CLR.B	TBCR			* PASSE EN EVENT COUNT MODE
;	MOVE.B	#8,TBDR			* PROCHAINE INTERUP DANS 8 LIGNE
;	MOVE.B	#8,TBCR			* PASSE EN 'EVENT COUNT MODE'
;	MOVE.L	#TB2_IR,$120		* NOUVELLE ROUTINE TIMER B
;	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
;	RTE				* FIN DE L'INTERUPTION (RETOUR)
TB0_IR
     REPT 127
	NOP				* BOUCLE D'ATTENTE...
     ENDR
	MOVE.B	#0,SYNCRO		* PASSAGE EN 60 HZ
     REPT 8
     	NOP				* BOUCLE D'ATTENTE
     ENDR
	MOVE.B	#2,SYNCRO		* RETOUR EN 50 HZ
	CLR.B	TBCR			* ARRET DU TIMER B
	MOVE.L	#TB0_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* INTERUPTION TRAITEE
	RTE				* RETOUR
**********************************************************************

;SCR_TXT	MOVEQ	#32,D0			* 33 LIGNES A DECALER
;	MOVE.L	#160,D1			* VALEUR D'INCREMENT (1 LIGNE)
;	LEA.L	CAR_BUF,A5		* ADRESSE DU BUFFER CARACTERE
;	MOVE.L	ECRAN,A4		* ADRESSE DE L'ECRAN
;	ADDA.L	#160*100,A4		* DECALE A PARTIR DE LA LIGNE 195

;DECAL:
;        MOVE.B	1(A4),(A4)		* PLAN 1
;	MOVE.B	8(A4),1(A4)
;	MOVE.B	9(A4),8(A4)
;	MOVE.B	16(A4),9(A4)
;	MOVE.B	17(A4),16(A4)
;	MOVE.B	24(A4),17(A4)
;	MOVE.B	25(A4),24(A4)
;	MOVE.B	32(A4),25(A4)
;	MOVE.B	33(A4),32(A4)
;	MOVE.B	40(A4),33(A4)
;	MOVE.B	41(A4),40(A4)
;	MOVE.B	48(A4),41(A4)
;	MOVE.B	49(A4),48(A4)
;	MOVE.B	56(A4),49(A4)
;	MOVE.B	57(A4),56(A4)
;	MOVE.B	64(A4),57(A4)
;	MOVE.B	65(A4),64(A4)
;	MOVE.B	72(A4),65(A4)	
;	MOVE.B	73(A4),72(A4)
;	MOVE.B	80(A4),73(A4)
;	MOVE.B	81(A4),80(A4)
;	MOVE.B	88(A4),81(A4)
;	MOVE.B	89(A4),88(A4)
;	MOVE.B	96(A4),89(A4)
;	MOVE.B	97(A4),96(A4)
;	MOVE.B	104(A4),97(A4)
;	MOVE.B	105(A4),104(A4)
;	MOVE.B	112(A4),105(A4)
;	MOVE.B	113(A4),112(A4)
;	MOVE.B	120(A4),113(A4)
;	MOVE.B	121(A4),120(A4)
	;MOVE.B	128(A4),121(A4)
	;MOVE.B	129(A4),128(A4)
;	MOVE.B	136(A4),129(A4)
;	MOVE.B	137(A4),136(A4)
;	MOVE.B	144(A4),137(A4)
;	MOVE.B	145(A4),144(A4)
;	MOVE.B	152(A4),145(A4)
;	MOVE.B	153(A4),152(A4)
;	MOVE.B	(A5),153(A4)	*
;	MOVE.B	1(A5),(A5)		* SCROLL LE BUFFER
;	MOVE.B	6(A5),1(A5)		* PREMIERS PLANS
;	MOVE.B	7(A5),6(A5)		*	
;
;
;
;	ADDA.L	#12,A5
;	ADDA.L D1,A4			* AJOUTE 1 LIGNE
;	DBF D0,DECAL			* ET ON BOUCLE 33 FOIS
;	SUBQ.B #1,NB_BIT		* ON DECREMENTE LE COMPTEUR
;	BEQ.S NEXTCHAR			* SI 0, PREND LE CARACTERE SUIVANT
;	RTS				* RETOUR
;
;NEXTCHAR:
;	MOVE.B	#4,NB_BIT		* REMET LE COMPTEUR A 32
;	MOVEQ	#0,D0			* NETOIE D0
;	MOVE.L	MES_PNT,A0		* POINTEUR TEXTE DANS D0
;	MOVE.B	(A0)+,D0		* MET LE CARACTERE SUIVANT DANS D0
;	CMPI.B	#-1,D0			* SI -1, ON RECOMMENCE LE TEXTE
;	BEQ	 AGAIN			*
;	MOVE.L	A0,MES_PNT		* SAUVE LE POINTEUR
;	CMPI.B	#-2,D0			* SI -2, ESPACE
;	BEQ	SPACE			*
;	CMPI.B	#39,D0			* SI D0 > 39 -> CINQUIEME RANGE
;	BGT	LINE5			* * DANS LA PAGE GRAPHIQUE
;	CMPI.B	#29,D0			* SI D0 > 29 -> QUATRIEME RANGE
;	BGT.S	LINE4			* DANS LA PAGE GRAPHIQUE
;	CMPI.B	#19,D0			* SI D0> > 19 -> TROISIEME RANGE
;	BGT.S	LINE3			* DANS LA PAGE GRAPHIQUE
;	CMPI.B	#9,D0			* SI D0 > 9 -> DEUXIEME RANGE
;	BGT.S	LINE2			* DANS LA PAGE GRAPHIQUE
;LINE1:	LSL.L	#4,D0			* MULTIPLIE D0 PAR 16
;	LEA.L	FONTES,A1		* ADRESSE DES FONTS EN MEMOIRE
;	ADDA.L	#34,A1			* ON SAUTE LES DATAS INUTILES
;	ADDA.L	D0,A1			* ADRESSE DU PROCHAIN CAR DANS A1
;	MOVE.L	A1,CAR_ADR		* SAUVE SON ADRESSE DANS CAR_ADR
;	BSR	LOAD_C			* COPIE LE CARACTERE DANS BUFFER
;	RTS				*
;LINE2:	SUB.B	#10,D0			* POSITION DU CAR DANS LA LIGNE
;	LSL.L	#4,D0			* MULTIPLIE PAR 16
;	LEA.L	FONTES,A1		* ADRESSE DES FONTS EN MEMOIRE
;	ADDA.L	#34,A1			* SAUTE LES DATAS INUTILES
;	ADDA.L	#160*33,A1		* (160*32): 32 LIGNES...
;	ADDA.L	D0,A1			* POUR POINTE SUR LE CARACTERE
;	MOVE.L	A1,CAR_ADR		* SAUVE ADRESSE DANS CAR_ADR
;	BSR	LOAD_C			* COPIE LE CARACTERE DANS LE BUFFER
;	RTS				* RETOUR
;LINE3:	SUB.B	#20,D0			* VOIR AU DESSUS...
;	LSL.L	#4,D0			*
;	LEA.L	FONTES,A1		*
;	ADDA.L	#34,A1			*
;	ADDA.L	#160*66,A1		*
;	ADDA.L	D0,A1			*
;	MOVE.L	A1,CAR_ADR		*
;	BSR	LOAD_C			*
;	RTS				*
;LINE4:	SUB.B	#30,D0			* VOIR AU DESSUS DU DESSUS
;	LSL.L	#4,D0			*
;	LEA.L	FONTES,A1		*
;	ADDA.L	#34,A1			*
;	ADDA.L	#160*99,A1		*
;	ADDA.L	D0,A1			*
;	MOVE.L	A1,CAR_ADR		*
;	BSR	LOAD_C			*
;	RTS				*
;LINE5:	SUB.B	#40,D0			* VOIR AU DESSUS DU DESSUS DU...ETC...
;	LSL.L	#4,D0			*
;	LEA.L	FONTES,A1		*
;	ADDA.L	#34,A1			*
;	ADDA.L	#160*132,A1		*
;	ADDA.L	D0,A1			*
;	MOVE.L	A1,CAR_ADR		*
;	BSR	LOAD_C			*
;	RTS				*
;
;SPACE	LEA	CAR_BUF,A0		* ADRESSE DU BUFFER DANS A0
;     REPT 99				*
;	CLR.L	(A0)+			* ON EFFACE LE BUFFER (DATA A 0)
;     ENDR				*
;	RTS				* RETOUR
;
;AGAIN	MOVE.L	#MES_F,MES_PNT		* REINITIALISE LE POINTEUR TEXTE
;	BRA	NEXTCHAR	        * ET ON RECOMMENCE...
;
;LOAD_C	MOVE.L	CAR_ADR,A0		* ADRESSE DU CAR DANS A0
;	LEA	CAR_BUF,A1	        * ADRESSE DU BUFFER DANS A1
;	MOVE.L	#160,D0			* VALEUR D'INCREMENT
;     REPT  33				*
;	MOVE.L	(A0),(A1)+		* COPIE PREMIER ET DEUXIEME PLAN
;	MOVE.W	4(A0),(A1)+		* COPIE TROISIEME ET QUATRIEME PLAN
;	MOVE.L	8(A0),(A1)+		* COPIE LE PLAN 1 ET 2  SUIVANT
;	MOVE.W	12(A0),(A1)+		* COPIE LE PLAN 3 ET 4 SUIVANT
;	ADDA.L	D0,A0			* ON AJOUTE 160 (LIGNE SUIVANTE)
;     ENDR				*
;	RTS				* ET HOP...RETOUR


	SECTION DATA
	EVEN

COLOR	DC.W	$000,$000,$111,$111,$222,$222,$333,$333,$444
	DC.W	$444,$555,$555,$666,$666,$777,$777

MES_F	DC.B  -2,-2
	DC.B	0,1,2,3,4,5,6,7,8,9
	DC.B	10,11,12,13,14,15,16,17,18,19
	DC.B	20,21,22,23,24,25,26,27,28,29
	DC.B	30,31,32,33,34,35,36,37,38,39
	DC.B	40,41,42,43,44,45,46,47,48,49
	DC.B	-2,-2
	DC.B  -1
	EVEN

SCR INCBIN SCR.PI1

************************* LES DIFFERENTES PALETTES *********************
PAL3	DC.W	$002,$530,$777,$655,$433,$554,$443,$640
	DC.W	$232,$750,$760,$770,$220,$110,$211,$000
	EVEN

PAL2	DC.W	$002,$777,$700,$655,$433,$554,$443,$640
	DC.W	$232,$750,$760,$770,$220,$110,$211,$000
	EVEN
PAL1	DC.W	$002,$530,$777,$655,$433,$554,$443,$640
	DC.W	$232,$750,$760,$770,$220,$110,$211,$000
	EVEN
CHUT_DA	DC.B	7,$FF,6,0,8,0,9,0,$A,0

 	SECTION BSS
 	EVEN
F_PILE	DS.L 	128			* FIN DE LA PILE
D_PILE	DS.L 	1			* DEBUT DE LA PILE
ECRAN	DS.L 	1			* ADRESSE DE L'ECRAN
SAUVE	DS.L	1			* SAUVE LA PILE UTILISATEUR
ANC_VBL DS.L	1			* SAUVE LE VECTEUR VBL
ANC_TB	DS.L	1			* SAUVE LE VECTEUR TIMER B
ANC_ECR	DS.L	1			* SAUVE L'ADRESSE DE L'ECRAN
CAR_BUF	DS.L	99			* BUFFER POUR FONTS
MES_PNT	DS.L	1			* POINTEUR SUR MESSAGE
CAR_ADR	DS.L	1			* ADRESSE DATA DU CARACTERE
POIROT1	DS.W	1			* COMPTEURS POUR FAIRE DEMARRER
POIROT2	DS.W	1			* LES ANIMATIONS, LES UNES
POIROT3	DS.W	1			* APRES LES AUTRES
POIROT4	DS.W	1			*
RES	DS.W	1			* SAUVE LA RESOLUTION
ANC_PAL	DS.W	16			* SAUVE LA PALETTE
MFP1	DS.B	1			* SAUVE LES REGISTRES DU MFP
MFP2	DS.B	1			*
MFP3	DS.B	1			*
MFP4	DS.B	1			*
MFP5	DS.B	1			*
MFP6	DS.B	1			*
BUFFER	DS.B	45000			* BUFFER POUR L'ECRAN
VSYNC	DS.B	1			* POUR LA SYNCRO VERTICALE
NB_BIT	DS.B	1			* NOMBRE DE DECALAGE EFFECTUE
N_SPR	DS.B	1			* NUMERO DU SPRITE MOULIN

