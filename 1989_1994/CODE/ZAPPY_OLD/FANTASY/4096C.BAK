IERA	EQU	$FFFA07		* INTERUPTION ENABLE A
IERB	EQU	$FFFA09		* INTERUPTION ENABLE B
ISRA	EQU	$FFFA0F		* INTERUPTION IN-SERVICE A
IMRA	EQU	$FFFA13		* INTERUPTION MASQUE A
TBCR	EQU	$FFFA1B		* TIMER B CONTROL REGISTER
TBDR	EQU	$FFFA21		* TIMER B DONNEE REGISTER
SYNCRO	EQU	$FF820A		* REGISTRE SYNCRO SHIFTER
COUL_0	EQU	$FF8240
COUL_1	EQU	$FF8242		* ADRESSES DES REGISTRES
COUL_2	EQU	$FF8244		* DE LA PALETTE DU SHIFTER
COUL_3	EQU	$FF8246
COUL_4	EQU	$FF8248
COUL_5	EQU	$FF824A
COUL_6	EQU	$FF824C
COUL_7	EQU	$FF824E
COUL_8	EQU	$FF8250
COUL_9	EQU	$FF8252
COUL_10	EQU	$FF8254
COUL_11	EQU	$FF8256
COUL_12	EQU	$FF8258
COUL_13	EQU	$FF825A
COUL_14	EQU	$FF825C
COUL_15	EQU	$FF825E
ACIA	EQU	$FFFC02		* LECTURE DE L'ACIA CLAVIER
PSG	EQU	$FF8800	        * pour le son...


 	SECTION TEXT
DEBUT:	MOVE.L  A7,A5
	LEA.L 	D_PILE,A7
	MOVE.L 	4(A5),A5
	MOVE.L 	$C(A5),D0
	ADD.L 	$14(A5),D0
	ADD.L 	$1C(A5),D0
	ADD.L 	#$100,D0		
	MOVE.L 	D0,-(SP)		
        MOVE.L 	A5,-(SP)
	MOVE.W 	#0,-(SP)
	MOVE.W 	#$4A,-(SP)
	TRAP 	#1
	LEA 	12(SP),SP
	
	CLR.L 	-(SP)			* PASSAGE EN SUPERVISEUR
	MOVE.W 	#$20,-(SP)		*
	TRAP 	#1			*
	ADDQ.L 	#6,SP			*
	MOVE.L 	D0,SAUVE		* SAUVE LA PILE UTILISATEUR
			
	MOVE.B	IERA,MFP1		*
	MOVE.B	IERB,MFP2		*
	MOVE.B	ISRA,MFP3		* SAUVE LES REGISTRES
	MOVE.B	IMRA,MFP4		* UTILISES DU MFP
	MOVE.B	TBCR,MFP5		*
	MOVE.B	TBDR,MFP6		*
	
	CLR.B	IERA			* VIRE TOUTES LES
	CLR.B	IERB			* INTERUPTIONS
	
	MOVE.L	#FIN,$008.W
	MOVE.L	#FIN,$00C.W
	MOVE.L	#FIN,$010.W

	MOVE.W	#4,-(SP)		* APPEL FONCTION GETREZ
	TRAP 	#14			* XBIOS...
	ADDQ.L	#2,SP			*
	MOVE.W	D0,RES			* SAUVE LA RESOLUTION
	
	MOVE.W	#2,-(SP)		* APPEL FONCTION PHYSBASE
	TRAP 	#14			* XBIOS
	ADDQ.L 	#2,SP			*
	MOVE.L	D0,ANC_ECR		* SAUVE L'ADRESSE ECRAN
	
	MOVE.W 	#0,-(SP)		* BASSE RESOLUTION
	MOVE.L	#$78000,-(SP)		* PHYSBASE A ECRAN
	MOVE.L	#$78000,-(SP)		* LOGBASE A ECRAN
	MOVE.W 	#5,-(SP)		* FONCTION SETSCREEN
	TRAP 	#14			* DU XBIOS
	LEA.L 	12(SP),SP		*

	LEA.L	COUL_0,A0		* ADRESSE PALETTE SHIFTER
	MOVEM.L	(A0),D0-D7		* RECUPERE LES 16 REGISTRES
	LEA.L	ANC_PAL,A0		* ADRESSE DE SAUVEGARDE
	MOVEM.L	D0-D7,(A0)		* SAUVE LES 16 REGISTRES
	
        MOVEA.L  #FOND+34,A0
        MOVEA.L  #$78000,A1
        MOVE.L   #7999,D0
COPY    MOVE.L   (A0)+,(A1)+
        DBF D0,COPY
        
	MOVE.L	$70,ANC_VBL		* SAUVE L'ANCIEN VECTEUR VBL
	MOVE.L	#VBL_IR,$70		* ET PLACE LE MIEN...
	MOVE.L	$120,ANC_TB		* SAUVE ANCIEN VECTEUR TIMER B
	MOVE.L	#TB0_IR,$120		* ET PLACE LE MIEN...
	
	DC.W	$A00A			* CACHE LA SOURIS (LINE A)
	MOVE.B	#$12,ACIA		* INIT CLAV
	
	CLR.B	TBCR			* ARRET DU TIMER B (PLUS PRUDENT)
	BSET	#0,IERA			* AUTORISE LES INTERUPTIONS
	BSET	#0,IMRA			* SUR LE TIMER B




BOUCLE:	
	MOVE.B	VSYNC,D0		* ATTEND UNE SYNCRO VERTICALE
WAIT	CMP.B	VSYNC,D0		* POUR LE TESTS DES TOUCHES
	BEQ.S	WAIT
	CMP.B	#$39,ACIA		* TESTE ESPACE (CODE SCAN)
	BNE.S	BOUCLE			* SI ESPACE, ON SORT DE L'INTRO
***********************************************************************

FIN:	
        MOVE.B  #2,SYNCRO
	MOVE.B	#8,ACIA			* REMET LE CLAVIER
	MOVE.B	MFP1,IERA		* RESTAURE LE MFP
	MOVE.B	MFP2,IERB		*
	MOVE.B	MFP3,ISRA		*
	MOVE.B	MFP4,IMRA		*
	MOVE.B	MFP5,TBCR		*
	MOVE.B	MFP6,TBDR		*
	
	MOVE.L	ANC_VBL,$70		* REMET LE VECTEUR VBL
	MOVE.L	ANC_TB,$120		* REMET LE VECTEUR TIMER C
	
	LEA.L	ANC_PAL,A0		* ADRESSE PALETTE SAUVEE
	MOVEM.L	(A0),D0-D7		* RECUPERE LES 16 REGISTRES
	LEA.L	COUL_0,A0		* ADRESSE PALETTE SHIFTER
	MOVEM.L	D0-D7,(A0)		* RESTITUE LES COULEURS
	
	MOVE.W 	RES,-(SP)		* ANCIENNE RESOLUTION
	MOVE.L	ANC_ECR,-(SP)		* ANCIEN ECRAN PHYSIQUE
	MOVE.L	ANC_ECR,-(SP)		* ANCIEN ECRAN LOGIQUE
	MOVE.W 	#5,-(SP)		* FONCTION SETSCREEN
	TRAP 	#14			* DU XBIOS
	LEA.L 	12(SP),SP		* CORRIGE LA PILE
	
	MOVE.L	SAUVE,-(SP)		* RETOUR EN UTILISATEUR
	MOVE.W 	#$20,-(SP)		* AVEC LA FONCTION SUPER
	TRAP 	#1			* DU GEMDOS
	ADDQ.L 	#6,SP			*
	
	PEA	CHUT_DA	   		* ADRESSE DES PARAMETRES
	MOVE.W	#$20,-(A7) 		* FONCTION DOSOUND
	TRAP	#14        		* DU XBIOS
	ADDQ.L	#6,A7      		* CORIGE LA PILE

	CLR.W 	-(SP)			* FIN DU PROGRAMME
	TRAP	#1			* FONCTION PTERM
	


decomp:
 move.l #$C7,d4       * $C7
 move.l #6,a0
 moveq #4,d6
 moveq #$28,d7
  
dec9:
 clr.b d1
 movea.l a3,a4

dec8:
 move.l a4,-(sp)
 clr.b d3

dec7:
 move.b (a5)+,d0
 tst.b d0
 bmi.s dec1
 addq.b #1,d0

dec3:
 move.b (a5)+,(a4)+
 addq.b #1,d3
 move.l a4,d5
 btst #0,d5
 bne.s dec2
 adda.l a0,a4

dec2:
 subq.b #1,d0
 bne.s dec3
 bra.s dec4

dec1:
 neg.b d0
 addq.b #1,d0
 move.b (a5)+,d2

dec6:
 move.b d2,(a4)+
 addq.b #1,d3
 move.l a4,d5
 btst #0,d5
 bne.s dec5
 adda.l a0,a4

dec5:
 subq.b #1,d0
 bne.s dec6

dec4:
 cmp.b d7,d3
 bne.s dec7
 move.l (sp)+,a4
 addq.l #2,a4
 addq.b #1,d1
 cmp.b d6,d1
 bne.s dec8
 adda.l #$a0,a3
 dbra d4,dec9
 rts




VBL_IR	; LEA   COULEURS,A0
	CLR.B	TBCR			* ARRET DU TIMER B
	MOVE.B	#20,TBDR		* INTERUPTION SUR LIGNE 117
	MOVE.B	#8,TBCR			* TIMER C EN EVENT COUNT MODE
;	MOVE.B	#169,TBDR
;	MOVE.B	#8,TBCR
	LEA.L	COUL_0,A6		* ADRESSE PALETTE SHIFTER DANS A6
	MOVEA.L #FOND+2,A5              * ADRESSE COULEURS
     REPT 8
     	MOVE.L	(A5)+,(A6)+		* MET LA NOUVELLE PALETTE EN PLACE
     ENDR
	MOVE.W	#$210,$FFFF8242.W
	MOVE.W	#$321,$FFFF8244.W
	MOVE.W	#$431,$FFFF8246.W
	MOVE.W	#$542,$FFFF8248.W

        
        CLR.W   $FFFF824C.W
	MOVE.L	#VBL2_IR,$70.W
	NOT.B	VSYNC			* BASCULE POUR SYNCRO
	RTE				* FIN DE L'INTERUPTION VBL


VBL2_IR	; LEA   COULEURS,A0
	CLR.B	TBCR			* ARRET DU TIMER B
	MOVE.B	#20,TBDR		* INTERUPTION SUR LIGNE 117
	MOVE.B	#8,TBCR			* TIMER C EN EVENT COUNT MODE
;	MOVE.B	#169,TBDR
;	MOVE.B	#8,TBCR
	LEA.L	COUL_0,A6		* ADRESSE PALETTE SHIFTER DANS A6
	MOVEA.L #FOND+2,A5              * ADRESSE COULEURS
     REPT 8
     	MOVE.L	(A5)+,(A6)+		* MET LA NOUVELLE PALETTE EN PLACE
     ENDR
	MOVE.W	#$210,$FFFF8242.W
	MOVE.W	#$321,$FFFF8244.W
	MOVE.W	#$431,$FFFF8246.W
	MOVE.W	#$542,$FFFF8248.W

;	ADD.W	#$001,$FFFF8242.W
;	ADD.W	#$001,$FFFF8244.W
;	ADD.W	#$001,$FFFF8246.W
;	ADD.W	#$001,$FFFF8248.W
	ADD.W	#$001,$FFFF824A.W
;	ADD.W	#$001,$FFFF824C.W
	ADD.W	#$001,$FFFF824E.W
	ADD.W	#$001,$FFFF8250.W
	ADD.W	#$001,$FFFF8252.W
	ADD.W	#$001,$FFFF8254.W
	ADD.W	#$001,$FFFF8256.W
	ADD.W	#$001,$FFFF8258.W
	ADD.W	#$001,$FFFF825A.W
	ADD.W	#$001,$FFFF825C.W        
;	ADD.W	#$001,$FFFF825E.W
        CLR.W   $FFFF824C.W
	MOVE.L	#VBL_IR,$70.W
	NOT.B	VSYNC			* BASCULE POUR SYNCRO
	RTE				* FIN DE L'INTERUPTION VBL


;TB0_IR	;MOVE.W  #$777,$FFFF8240.W
;	MOVE.W	#$410,$FFFF8242.W
;	MOVE.W	#$521,$FFFF8244.W
;	MOVE.W	#$631,$FFFF8246.W
;	MOVE.W	#$742,$FFFF8248.W

;	CLR.B	TBCR			* ARRET DU TIMER
;;	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
;;	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
;	MOVE.L	#TB0_IR,$120		* NOUVELLE ROUTINE TIMER B
;	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	
TB0_IR	MOVE.W	#$100,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB1_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB1_IR	MOVE.W	#$200,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB2_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB2_IR	MOVE.W	#$300,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB3_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB3_IR	MOVE.W	#$400,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB4_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB4_IR	MOVE.W	#$500,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB5_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB5_IR	MOVE.W	#$600,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB6_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB6_IR	MOVE.W	#$700,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB7_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB7_IR	MOVE.W	#$710,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB8_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB8_IR	MOVE.W	#$720,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB9_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB9_IR	MOVE.W	#$730,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB10_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB10_IR	MOVE.W	#$740,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB11_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB11_IR	MOVE.W	#$750,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB12_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB12_IR	MOVE.W	#$760,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB13_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB13_IR	MOVE.W	#$770,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB14_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB14_IR	MOVE.W	#$771,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB15_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB15_IR	MOVE.W	#$772,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB16_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB16_IR	MOVE.W	#$773,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB17_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB17_IR	MOVE.W	#$774,$FFFF824C.W

	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB18_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB18_IR	MOVE.W	#$775,$FFFF824C.W

	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#6,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB19_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)



TB19_IR	MOVE.W	#$776,$FFFF824C.W
	MOVE.W	#$410,$FFFF8242.W
	MOVE.W	#$521,$FFFF8244.W
	MOVE.W	#$631,$FFFF8246.W
	MOVE.W	#$742,$FFFF8248.W

	CLR.B	TBCR			* ARRET DU TIMER
	MOVE.B	#10,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB20_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)

TB20_IR	MOVE.W	#$777,$FFFF824C.W
	CLR.B	TBCR			* ARRET DU TIMER
	;MOVE.B	#8,TBDR		* PROCHAINE INTERUP DANS 74 LIGNES
	;MOVE.B	#8,TBCR			* PASSE EN EVENT COUNT MODE
	MOVE.L	#TB0_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* LIBERE L'INTERUPTION
	RTE				* FIN DE L'INTERUPTION (RETOUR)








TBF_IR
     REPT 127
	NOP				* BOUCLE D'ATTENTE...
     ENDR
	MOVE.B	#0,SYNCRO		* PASSAGE EN 60 HZ
     REPT 8
     	NOP				* BOUCLE D'ATTENTE
     ENDR
	MOVE.B	#2,SYNCRO		* RETOUR EN 50 HZ
	CLR.B	TBCR			* ARRET DU TIMER B
	MOVE.L	#TB0_IR,$120		* NOUVELLE ROUTINE TIMER B
	BCLR	#0,ISRA			* INTERUPTION TRAITEE
	RTE				* RETOUR
**********************************************************************


	section   data

FOND:	INCBIN	DD3.PI1
	EVEN


COULEURS 
         DC.W  $000,$100,$200,$300,$400,$500,$600,$700
         DC.W  $710,$720,$730,$740,$750,$760,$770
         DC.W  $771,$772,$773,$774,$775,$776,$777,$777


         
        EVEN

CHUT_DA	DC.B	7,$FF,6,0,8,0,9,0,$A,0

 	SECTION BSS
 	EVEN
BIDON   DS.L    1
F_PILE	DS.L 	128			* FIN DE LA PILE
D_PILE	DS.L 	1			* DEBUT DE LA PILE
SAUVE	DS.L	1			* SAUVE LA PILE UTILISATEUR
ANC_VBL DS.L	1			* SAUVE LE VECTEUR VBL
ANC_TB	DS.L	1			* SAUVE LE VECTEUR TIMER B
ANC_ECR	DS.L	1			* SAUVE L'ADRESSE DE L'ECRAN
POIROT1	DS.W	1			* COMPTEURS POUR FAIRE DEMARRER
POIROT2	DS.W	1			* LES ANIMATIONS, LES UNES
POIROT3	DS.W	1			* APRES LES AUTRES
POIROT4	DS.W	1			*
RES	DS.W	1			* SAUVE LA RESOLUTION
ANC_PAL	DS.W	16			* SAUVE LA PALETTE
MFP1	DS.B	1			* SAUVE LES REGISTRES DU MFP
MFP2	DS.B	1			*
MFP3	DS.B	1			*
MFP4	DS.B	1			*
MFP5	DS.B	1			*
MFP6	DS.B	1			*
VSYNC	DS.B	1			* POUR LA SYNCRO VERTICALE
