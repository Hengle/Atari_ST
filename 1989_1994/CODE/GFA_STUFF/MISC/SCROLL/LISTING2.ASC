PHYSBASE  EQU   2   ;No de la fonction Xbios PHYSBASE
                    ;pour r‚cup‚rer l'adresse de l'‚cran.

CCONIN   EQU  1    ;No de la fonction Gemdos CCONIN
                   ;pour attendre un caractŠre au clavier
              
LG_ECRAN  equ       160       ;Largeur de l'‚cran en octets

H_ECRAN   equ       200       ;Hauteur de l'‚cran en points


          section   TEXT
;***************************************************************
;
;   Programme d'appel de la routine de scroll
;
;   Appelle 200 fois la routine de scroll vertical
;   pour d‚caler tout l'‚cran.

principal:

    move.w    #PHYSBASE,-(sp)
    trap #14
    addq #2,sp
    move.l    d0,a3  ;a3 contient l'adresse du d‚but de l'‚cran
                     ;a3 pointe vers le d‚but de la 1Šre ligne

    move.w    #H_ECRAN,d2    ;Hauteur de l'‚cran dans d2
                             ;pour d‚caler tout l'‚cran
bcl_scroll:
    bsr.s     scroll    ;D‚cale l'‚cran vers le haut d'un point
    dbra d2,bcl_scroll  ;Recommence pour d‚caler l'‚cran 200 fois

;Attend un appui sur une touche

    move.w    #CCONIN,-(sp)
    trap #1
    addq.l    #2,sp

;Fin du programme

    clr.w     -(sp)
    trap #1

;********************************************************************
;
;   Routine de scroll
;   D‚cale d'un pixel l'‚cran vers le haut
;
;   En entr‚e: A3 contient l'adresse de d‚but d'‚cran
;
;   Registres modifi‚s : A0, A1, D0, D1
scroll:
    move.l    a3,a0    ;a0 contient l'adresse du d‚but de l'‚cran
                       ;a0 pointe vers le d‚but de la 1Šre ligne

    lea  LG_ECRAN(a0),a1   ;a1 pointe vers le d‚but de la 2Šme
                           ;ligne de l'‚cran

    move.w    #H_ECRAN-1,d0  ;d0 compte les lignes … d‚caler

; D‚cale une ligne

ligne_suivante:

    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+
    move.l    (a1)+,(a0)+

    dbra d0,ligne_suivante   ;Passe … la ligne suivante
    rts

    end

