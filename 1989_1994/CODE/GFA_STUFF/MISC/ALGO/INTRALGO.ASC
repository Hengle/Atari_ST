/* HANOI en C, Introduction … l'algorithmie III */

#define     DISKS       6
main() {
	char  depart[DISKS+2];
	char  interm[DISKS+2];
	char  arrive[DISKS+2];
	register    i;
	for(i=DISKS;i>0;i--)    depart[i+1]=DISKS-i+1;
	depart[0]=(char)DISKS;
	depart[1]='D';
	interm[0]=0;
	interm[1]='I';
	arrive[0]=0;
	arrive[1]='A';

	hanoi(DISKS,depart,interm,arrive);
	printf("C'est fini !!!\n");
}

hanoi(nd,dd,di,da)
char  nd;
char  *dd,*di,*da;
{
	if(nd==1) {
    	  display(dd,da);
  	    return;
	}
	hanoi(nd-1,dd,da,di);
	display(dd,da);
	hanoi(nd-1,di,dd,da);
}

display(ds,dd);
char  *ds;
char  *dd;
{
	printf("Disque %1d de %c vers %c.\n",(int)ds[ds[0]+1],ds[1],dd[1]);
	dd[(int)((++dd[0])+1)]=ds[(int)(1+(ds[0]--))];
}

*	HANOI en assembleur, Introduction … l'algorithmie III .
FP	EQUR	A6

MAIN:
	lea	depart(PC),A5
	clr.w	D0
	move.b	(A5),D0
	move.w	D0,-(SP)
	move.l	A5,-(SP)
	pea	interm(PC)
	pea	arrive(PC)
	lea	14(SP),SP
	pea	fini
	move.w	#$9,-(SP)
	trap	#1
	addq.l	#6,SP
	move.w	#7,-(SP)
	trap	#1
	clr.w	(SP)
	trap	#1

HANOI:
	link	FP,#-2
	move.w	20(FP),D0
	subq.w	#1,d0
	bne	.1
	move.l	16(FP),-(SP)
	move.l	8(FP),-(SP)
	bsr	DISPLAY
	addq.l	#8,SP
	bra	.2
.1	move.w	D0,-2(FP)
	move.w	D0,-(SP)
	move.l	16(FP),-(SP)
	move.l	8(FP),-(SP)
	move.l	12(FP),-(SP)
	bsr	HANOI
	lea	14(SP),SP
	move.l	16(FP),-(SP)
	move.l	8(FP),-(Sp)
	bsr	DISPLAY
	lea	8(SP),SP
	move.w	-2(FP),-(SP)
	move.l	12(FP),-(SP)
	move.l	16(FP),-(SP)
	move.l	8(FP),-(SP)
	bsr	HANOI
	lea	14(SP),SP
.2	unlk	FP
	rts

DISPLAY:
	link	FP,#-4
	move.l	A5,-4(FP)
	movea.l	12(FP),A5
	clr.w	D0
	move.b	(A5),D0
	subi.b	#1,(A5)+
	move.b	$0(A5,D0.W),transf2
	move.b	(A5),transf3
	movea.l	8(FP),A5
	addi.b	#1,(A5)
	move.b	(A5)+,D0
	move.b	(A5),transf4
	move.b	transf2,$0(A5,D0.W)
	pea	transf1
	move.w	#9,-(SP)
	trap	#1
	lea	6(SP),SP
	movea.l	-4(FP),A5
	unlk	FP
	rts
	
	DATA
depart	DC.B	4,"D12345678"	* Tour de d‚part avec 4 disques, nomm‚e "D"
interm	DC.B	0,"I00000000"	* Tour interm‚diaire vide, nomm‚e "I"
arrive	DC.B	0,"A00000000"	* Tour d'arriv‚e vide, nomm‚e "A"
transf1	DC.B	$a,$d,"Disque "
transf2	DC.B	"0 de "
transf3	DC.B	"D vers "
transf4	DC.B	"A",$0
fini	DC.B	$a,$d," Travail termin‚ !",$7,$0

