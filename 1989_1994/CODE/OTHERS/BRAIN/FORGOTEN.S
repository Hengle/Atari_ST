***********************************************
* ROUTINE BOOTSECTEUR DU JEU FORGOTTEN WORLDS *
***********************************************

START:
	MOVE.B	#0,D0
	MOVE.B	#$C0,D1
	AND.B	D0,$FFFFFA13.W
	AND.B	D1,$FFFFFA15.W
	AND.B	D0,$FFFFFA07.W
	AND.B	D1,$FFFFFA09.W
	AND.B	D0,$FFFFFA0B.W
	AND.B	D1,$FFFFFA0D.W
	AND.B	D0,$FFFFFA0F.W
	AND.B	D1,$FFFFFA11.W
	MOVE.B	#0,$FFFF8201.W
	MOVE.B	#$7D,$FFFF8203.W
	MOVE.B	#0,$FFFF8260.W

	MOVE.W	#$F,D0		; 16 COULEURS
	LEA	BUFFER(PC),A0	; VARIABLE VALANT ZERO
	LEA	$FFFF8240,A1	; COULEUR 0 DANS A1
NOIR:	MOVE.W	(A0)+,(A1)+	; TOUTES LES COULEURS A ZERO
	DBF	D0,NOIR

	MOVE.W	#$3A,D0		; PISTE 58
	MOVE.W	#8,D1		; SECTEUR 8
	MOVE.W	#$C9,D2		; 201 SECTEURS
	MOVEA.L	#$391E4,A0		; ADRESSE CHARGEMENT

	BSR	LOADING

	MOVEA.L	#$39200,A0		; NOUVELLE ADRESSE
	JMP	(A0)		; C'EST PARTI...

LOADING:	ST	$43E		; DESACTIVER FLOPPY VBL

SELDRIVE:
	MOVE.W	#0,D5		; DRIVE 0
	ADDQ.B	#1,D5		; CHANGER AVEC FACE COURANTE
	LSL.B	#1,D5
	ORI.W	#0,D5
	EORI.B	#7,D5
	ANDI.B	#7,D5
SELECT:
	MOVE	SR,-(A7)		; SAUVER LE SR
	ORI.W	#$700,SR		
	MOVE.B	$FF8800,D6		; LECTURE
	MOVE.B	D6,D7
	ANDI.B	#$F8,D6		; CLEAR BIT 0,1,2 (DRIVE)
	OR.B	D5,D6		; D5=FACE, SELECT DRIVE/FACE
	MOVE.B	D6,$FF8802		; ECRITURE
	MOVE.W	(A7)+,SR		; RESTAURER LE SR

	MOVE.W	#$80,$FF8606	; COMMAND REGISTER
	MOVE.W	#$B,D7		; RESTORE 3 MS
	BSR	DMADAT
	BSR	WAIT_DONE

SEL_TRACK:	MOVE.W	#$86,$FF8606	; DATA REGISTER
	MOVE.W	D0,D7		; ENVOIE No DE PISTE
	BSR	DMADAT

	MOVE.W	#$80,$FF8606	; COMMAND REGISTER
	MOVE.W	#$10,D7		; SEEK TRACK
	BSR	DMADAT
	BSR	WAIT_DONE

SUITE:	MOVE.W	#$84,$FF8606	; SECTOR REGISTER
	MOVE.W	D1,D7		; ENVOIE No SECTEUR
	BSR	DMADAT

SET_DMA:
	MOVE.L	A0,D7		; BUFFER DANS D7
	MOVE.B	D7,$FF860D		; DMA-LOW
	LSR.L	#8,D7
	MOVE.B	D7,$FF860B		; DMA_MID
	LSR.W	#8,D7
	MOVE.B	D7,$FF8609		; DMA_HIGH

DMA_IN:
	MOVE.W	#$90,$FF8606
	MOVE.W	#$190,$FF8606
	MOVE.W	#$90,$FF8606
	MOVE.W	#1,D7		; 1 SECTEUR A LIRE
	BSR	DMADAT

READ_SECTOR:	
	MOVE.W	#$80,$FF8606	; COMMAND REGISTER
	MOVE.W	#$80,D7		; READ SECTOR
	BSR	DMADAT
	BSR	WAIT_DONE

ADD_BUFFER:
	LEA	$200(A0),A0	; BUFFER + 512 OCTETS
	CMP.W	#$B,D1		; 11 SECTEURS CHARGES ?
	BEQ.S	NEXT_TRK		; OUI, ALORS PISTE SUIVANTE
	SUBQ.W	#1,D2		; TOUT LES SECTEURS CHARGES ?
	BEQ.S	END_LOAD		; OUI, ON QUITTE LA ROUTINE
	ADDQ.W	#1,D1		; SECTEUR SUIVANT
	BRA.S	SUITE		; ET ON CONTINUE

NEXT_TRK:	ADDQ.W	#1,D0		; PISTE + 1
	MOVE.W	#1,D1		; POSITIONNER / SECTEUR 1
	BRA	SEL_TRACK

END_LOAD:	SF	$43E		; AUTORISER FLOPPY VBL
	RTS

DMADAT:	BSR	WAIT
	MOVE.W	D7,$FF8604

WAIT:	MOVE.W	D7,-(A7)
	MOVE.W	#$20,D7
WAIT1:	DBF	D7,WAIT1
	MOVE.W	(A7)+,D7
	RTS

WAIT_DONE:	MOVE.L	#$40000,D5
TEST_MFP:	BTST	#5,$FFFA01		; COMMANDE TERMINEE ?
	BEQ	END_TEST_MFP	; OK, FIN DU TEST
	SUBQ.L	#1,D5		; SINON ON DECREMENTE
	BNE.S	TEST_MFP

WAIT_MFP:	ADDQ.W	#1,$FF8240		; COULEUR ZERO + 1
	BRA.S	WAIT_MFP		; SUREMENT SI ERREUR.

END_TEST_MFP:
	RTS

	DC.B	0,0,0,$35,0,$24,0,$13
	DC.B	0,3,0,2,0,1,3,0
	DC.B	7,$74,6,$53,6,$42,5,$31
	DC.B	4,$21,3,0,2,0,1,0

BUFFER:	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
