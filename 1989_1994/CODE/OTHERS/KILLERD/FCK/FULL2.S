IERA	EQU	$FFFA07
IERB	EQU	$FFFA09
ISRA	EQU	$FFFA0F
IMRA	EQU	$FFFA13
TBCR	EQU	$FFFA1B
TBDR	EQU	$FFFA21
SYNCRO	EQU	$FF820A
COUL_0	EQU	$FF8240
COUL_1	EQU	$FF8242
COUL_2	EQU	$FF8244
COUL_3	EQU	$FF8246
COUL_4	EQU	$FF8248
COUL_5	EQU	$FF824A
COUL_6	EQU	$FF824C
COUL_7	EQU	$FF824E
COUL_8	EQU	$FF8250
COUL_9	EQU	$FF8252
COUL_10	EQU	$FF8254
COUL_11	EQU	$FF8256
COUL_12	EQU	$FF8258
COUL_13	EQU	$FF825A
COUL_14	EQU	$FF825C
COUL_15	EQU	$FF825E
ACIA	EQU	$FFFC02
PSG	EQU	$FF8800


 	SECTION TEXT
DEBUT:	MOVE.L  A7,A5
	LEA.L 	D_PILE,A7
	MOVE.L 	4(A5),A5
	MOVE.L 	$C(A5),D0
	ADD.L 	$14(A5),D0
	ADD.L 	$1C(A5),D0
	ADD.L 	#$100,D0		
	MOVE.L 	D0,-(SP)		
        MOVE.L 	A5,-(SP)
	MOVE.W 	#0,-(SP)
	MOVE.W 	#$4A,-(SP)
	TRAP 	#1
	LEA 	12(SP),SP
	
	CLR.L 	-(SP)			
	MOVE.W 	#$20,-(SP)		
	TRAP 	#1			
	ADDQ.L 	#6,SP			
	MOVE.L 	D0,SAUVE		

			
	MOVE.B	IERA,MFP1		
	MOVE.B	IERB,MFP2		
	MOVE.B	ISRA,MFP3		
	MOVE.B	IMRA,MFP4		
	MOVE.B	TBCR,MFP5		
	MOVE.B	TBDR,MFP6		

	
	MOVE.W	#4,-(SP)		* APPEL FONCTION GETREZ
	TRAP 	#14			* XBIOS...
	ADDQ.L	#2,SP			*
	MOVE.W	D0,RES			* SAUVE LA RESOLUTION
	
	MOVE.W	#2,-(SP)		* APPEL FONCTION PHYSBASE
	TRAP 	#14			* XBIOS
	ADDQ.L 	#2,SP			*
	MOVE.L	D0,ANC_ECR		* SAUVE L'ADRESSE ECRAN
	
	MOVE.W 	#0,-(SP)		* BASSE RESOLUTION
	MOVE.L	#-1,-(SP)		* PHYSBASE A ECRAN
	MOVE.L	#-1,-(SP)		* LOGBASE A ECRAN
	MOVE.W 	#5,-(SP)		* FONCTION SETSCREEN
	TRAP 	#14			* DU XBIOS
	LEA.L 	12(SP),SP		*

	LEA.L	COUL_0,A0		* ADRESSE PALETTE SHIFTER
	MOVEM.L	(A0),D0-D7		* RECUPERE LES 16 REGISTRES
	LEA.L	ANC_PAL,A0		* ADRESSE DE SAUVEGARDE
	MOVEM.L	D0-D7,(A0)		* SAUVE LES 16 REGISTRES
	
	MOVEA.L	#$70000,A1
	MOVEA.L	#IMAGE+28,A0
	MOVE.L	#7999*2,D0
FG	MOVE.L	(A0)+,(A1)+
	DBF	D0,FG

	MOVE.L	#IMAGE+2,-(SP)
	MOVE	#6,-(SP)
	TRAP	#14
	ADDQ.L	#6,SP
        
;        move.l ADRFONT,a3
;        lea  FONT+34,a5
;        JSR  decomp
	
;	MOVE.L #MES_F,MES_PNT		* INIT POINTEUR MESSAGE
        ;MOVE.L #MES_F2,MES_PNT2

        MOVE.W  #0,POIROT1
	MOVE.W  #0,POIROT2
        MOVE.W  #0,POIROT3

;	MOVEQ	#5,D0			* NETOIE D0
;	BSR	MUSIC		* INITIALISE LA MUSIQUE
;	MOVE.W  #5,MUS
	
;	bsr	SET_SCR		;preparation des ecrans
;        move.l SCREEN1,a3
;        lea  LOGO+34,a5
;        JSR  decomp
;        move.l SCREEN2,a3
;        lea  LOGO+34,a5
;        JSR  decomp


	MOVE.L	$70,ANC_VBL		* SAUVE L'ANCIEN VECTEUR VBL
	MOVE.L	$120,ANC_TB		* SAUVE ANCIEN VECTEUR TIMER B
	
;	DC.W	$A00A			* CACHE LA SOURIS (LINE A)
;	MOVE.B	#$12,ACIA		* INIT CLAV
	
;	CLR.B	TBCR			* ARRET DU TIMER B (PLUS PRUDENT)
;	BSET	#0,IERA			* AUTORISE LES INTERUPTIONS
;	BSET	#0,IMRA			* SUR LE TIMER B

;	bsr	SET_SCR		;preparation des ecrans
;	lea	TEXTE,a0	;debut du texte dans a0
;        LEA     TEXTE2,A1
;	move.l	a0,MEM_LET	Position fonte (Table)
;        MOVE.L  A1,MEM_LET2
;	move.w	#0,PART_AFF	(2 Parties)





    MOVE.W  #$2700,SR

    MOVE.L  #$70000,A0
    MOVEQ   #0,D0
    MOVE.L  #$ED6E,D1
    MOVE.L  D0,D2
    MOVE.L  D1,D3
    MOVE.W  #273,D7

FILLSCREEN:
    MOVEQ  #$D,D6
    SUBQ.L #$6,A0
FILLLINE:
;    MOVEM.L D0-D3,-(A0)
    DBRA   D6,FILLLINE
    DBRA   D7,FILLSCREEN
    LEA    230-204(A0),A0

    MOVE.L  A0,D0
    LSR.L   #8,D0
    LEA     $FFFF8200,A0
    MOVEP.W  D0,1(A0)
    LEA      VSYNC(PC),A0
    MOVE.L   A0,$70.W
    MOVEQ    #$0,D0
    LEA     $FFFFFA00.W,A0
    MOVEP.W  D0,7(A0)
    MOVEQ  #$2,D1
    LEA  $FFFF820A.W,A0
    LEA  $FFFF8260.W,A1
    MOVE.B  D1,(A0)
    MOVE.B  D0,(A1)
    STOP    #$2300
    STOP    #$2300

    MOVE.W  #$2700,SR
    MOVE.W  #$594,D4

FULLSCREEN:

    DBRA  D4,FULLSCREEN

    MOVE.B  D0,(A0)
    MOVEQ   #$1A,D4
    LSR.L   D4,D0
    MOVE.W   #$111,D3
    MOVE.B   D1,(A0)
    LSR.L    D4,D4

    MOVEQ  #24,D0
    SUB.B  $FFFF8209.W,D0
    LSR.L  D0,D0
    MOVEQ  #19,D4
SCANLINE:
   DBRA D4,SCANLINE
   MOVE.B  D0,(A0)
   MOVEQ   #$2,D1
   MOVE.B  D1,(A0)
   CMP.W   #$3D,D3
   BEQ.S   SCANLINED4
   CMP.W   #$2D,D3
   BEQ.S   SCANLINEE4
   BRA.S   NORMALSCANLINE
SCANLINED4:
 LSR.L  #$4,D0
SCANLINEE4:
 MOVE.B  D0,(A0)
NORMALSCANLINE:
  NOP
 MOVE.B  D1,(A1)
 MOVEQ   #18,D4
 MOVE.B  D0,(A1)
 LSR.L   D4,D0
 MOVE.B  D1,(A1)
 MOVE.B  D1,(A0)
 MOVE.B  D0,(A1)
 LSR.L   D4,D0
 MOVEQ #23,D4
 NOP
 DBRA D3,SCANLINE
 MOVE.W #$66C,D4
 CMP.B  #$39,ACIA
 BEQ.S  FIN
  BRA FULLSCREEN

VSYNC: 
 RTE

FIN:	
        MOVE.B  #2,SYNCRO
	MOVE.B	#8,ACIA			* REMET LE CLAVIER
	MOVE.B	MFP1,IERA		* RESTAURE LE MFP
	MOVE.B	MFP2,IERB		*
	MOVE.B	MFP3,ISRA		*
	MOVE.B	MFP4,IMRA		*
	MOVE.B	MFP5,TBCR		*
	MOVE.B	MFP6,TBDR		*
	
	MOVE.L	ANC_VBL,$70		* REMET LE VECTEUR VBL
	MOVE.L	ANC_TB,$120		* REMET LE VECTEUR TIMER C
	
	LEA.L	ANC_PAL,A0		* ADRESSE PALETTE SAUVEE
	MOVEM.L	(A0),D0-D7		* RECUPERE LES 16 REGISTRES
	LEA.L	COUL_0,A0		* ADRESSE PALETTE SHIFTER
	MOVEM.L	D0-D7,(A0)		* RESTITUE LES COULEURS
	
	MOVE.W 	RES,-(SP)		* ANCIENNE RESOLUTION
	MOVE.L	ANC_ECR,-(SP)		* ANCIEN ECRAN PHYSIQUE
	MOVE.L	ANC_ECR,-(SP)		* ANCIEN ECRAN LOGIQUE
	MOVE.W 	#5,-(SP)		* FONCTION SETSCREEN
	TRAP 	#14			* DU XBIOS
	LEA.L 	12(SP),SP		* CORRIGE LA PILE
	
	MOVE.L	SAUVE,-(SP)		* RETOUR EN UTILISATEUR
	MOVE.W 	#$20,-(SP)		* AVEC LA FONCTION SUPER
	TRAP 	#1			* DU GEMDOS
	ADDQ.L 	#6,SP			*
	
;	PEA	CHUT_DA	   		* ADRESSE DES PARAMETRES
;	MOVE.W	#$20,-(A7) 		* FONCTION DOSOUND
;	TRAP	#14        		* DU XBIOS
;	ADDQ.L	#6,A7      		* CORIGE LA PILE

	CLR.W 	-(SP)			* FIN DU PROGRAMME
	TRAP	#1			* FONCTION PTERM
	
IMAGE INCBIN SSUMMER.KID

 	SECTION BSS
 	EVEN
MUS     DS.L    1
;MES_PNT DS.L    1
;MES_PNT2 DS.L    1
;BIDON   DS.L    1
F_PILE	DS.L 	128			* FIN DE LA PILE
D_PILE	DS.L 	1			* DEBUT DE LA PILE
SAUVE	DS.L	1			* SAUVE LA PILE UTILISATEUR
ANC_VBL DS.L	1			* SAUVE LE VECTEUR VBL
ANC_TB	DS.L	1			* SAUVE LE VECTEUR TIMER B
ANC_ECR	DS.L	1			* SAUVE L'ADRESSE DE L'ECRAN
POIROT1	DS.W	1			* COMPTEURS POUR FAIRE DEMARRER
POIROT2	DS.W	1			* LES ANIMATIONS, LES UNES
POIROT3	DS.W	1			* APRES LES AUTRES
;POIROT4	DS.W	1			*
RES	DS.W	1			* SAUVE LA RESOLUTION
ANC_PAL	DS.W	16			* SAUVE LA PALETTE
MFP1	DS.B	1			* SAUVE LES REGISTRES DU MFP
MFP2	DS.B	1			*
MFP3	DS.B	1			*
MFP4	DS.B	1			*
MFP5	DS.B	1			*
MFP6	DS.B	1			*
SCREEN1:	ds.l	1	;ecran	courant
SCREEN2:	ds.l	1	;ecran	travail
SCREEN3:        DS.L    1
SCREEN4:        DS.L    1
SCREEN5:	ds.l	1	;ecran	courant
SCREEN6:	ds.l	1	;ecran	travail
SCREEN7:        DS.L    1
SCREEN8:        DS.L    1
MEM_LET:	ds.l	1
MEM_LET2:       DS.L    1
PART_AFF:	ds.l    1
	

