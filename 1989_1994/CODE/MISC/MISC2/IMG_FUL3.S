	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP	
	MOVE.L	D0,SAUV_SP

	CLR.W	-(SP)
	MOVE.L	#-1,-(SP)
	MOVE.L	#-1,-(SP)
	MOVE.W	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP
	MOVE.L	#FIN,$008.W
	MOVE.L	#FIN,$00C.W
	MOVE.L	#FIN,$010.W


	JSR	SET_SCR

	MOVE.B	#$12,$FFFFFC02.W
	DC.W	$A00A

	MOVE.L	#IMAGE+2,-(SP)
	MOVE	#$6,-(SP)
	TRAP	#14
	ADDQ.L	#6,SP


	MOVEA.L	SCREEN1,A0
	LEA	160(A0),A0
	MOVE.L	#IMAGE+34+78,A1
	MOVE.L	#15999,D0
EFF_SCR	MOVE.L	(A1)+,(A0)+
	DBRA	D0,EFF_SCR

	ANDI.B	#%11111000,$484.W

	CLR.L	D0
	CLR.L	D1
	CLR.L	D2
;	BSR	PREP_GRF

	MOVEM.L	$FFFF8240.W,D0-D7
	MOVEM.L	D0-D7,ANC_PAL

;	MOVEQ	#1,D0
;	JSR	MUZAXX

	MOVE.L	#8,NB_PART

	MOVE.L	$70.W,ANC_VBL
	MOVE.L	#VBLR,$70.W

BOUCLE	JMP	BOUCLE

FIN	MOVE.L	ANC_VBL,$70.W

	MOVEM.L	ANC_PAL,D0-D7
	MOVEM.L	D0-D7,$FFFF8240.W

	MOVE.L	#$8080000,$FFFF8800.W
	MOVE.L	#$9090000,$FFFF8800.W
	MOVE.L	#$A0A0000,$FFFF8800.W

	BSET	#0,$484.W
	BSET	#1,$484.W
	BSET	#2,$484.W

	MOVE.B	#8,$FFFFFC02.W

	MOVE.L	SAUV_SP,-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP

	CLR.W	-(SP)
	TRAP	#1
	ADDQ.L	#2,SP
	
	
VBLR	CLR	$FFFF8240.W
	CLR.B	$FFFF820A.W

	move.l	SCREEN1,d0	;adresse Ecran courant dans d0
;	move.l	SCREEN2,SCREEN1		;ecran travail sur ecran courant
;	move.l	d0,SCREEN2		;ecran courant sur ecran travail
	;l… en fait il a permut‚ les deux ecrans travail et courant	
	;il a mis l'un sur l'autre et vice-versa,c'est le SWAP-SCREEN
	lsr.l	#8,d0		8*2=16
	move.l	#$ffff8201,a0
	movep	d0,(a0)
;	rts


	CMPI.B	#$3B,$FFFFFC02.W
	BNE.S	LP

	move.l	SCREEN2,SCREEN1

LP	LEA	PALETTE,A6
	CMPI.L	#8,NB_PART
	BNE	SUITV0
	BSR	TEST_LET
	CLR.L	NB_PART
SUITV0	;BSR	SCROLL
	;BSR	SCROLL

;	  MOVE.B  #$18,D0 
;  MOVE    #$2700,SR 
;L0004:TST.B   $FFFF8209.W
;  BEQ     L0004 
;  SUB.B   $FFFF8209.W,D0 
;  LSR.L   D0,D0 


full	
	MOVE.L	#$FFFF8209,A3	
	MOVE.L	#$FFFF8260,A1	
	MOVE.L	#$FFFF820A,A0	
	MOVE	#226,D0		* NB DE LIGNES
	MOVEQ	#0,D1		
	MOVEQ	#0,D4
	MOVEQ	#2,D3
	MOVEQ	#$10,D6
	MOVE	#$2700,SR


SYNCHRO	MOVE.B	(A3),D7     * SYNCHRO
	BEQ.S	SYNCHRO
	SUB.W	D7,D6		
	LSL.W	D6,D1		

	REPT	96
	NOP	
	ENDR
	
FULLSCREEN

	MOVE.B	D3,(A1)
	NOP
	MOVE.B	D4,(A1)

;	MOVE	(a6)+,$ffff8244.W		
;	MOVE	(a6),$ffff8242.W
;	MOVE	(a6)+,$ffff8244.W	* MOVE.W=4 NOPS
		
	REPT	77+8+4
	NOP				
	ENDR
						 

	MOVE.B	D4,(A0)
	MOVE.B	D3,(A0)
	
	REPT	13		
	NOP
	ENDR
	
	MOVE.B	D3,(A1)
	NOP
	MOVE.B	D4,(A1)


	REPT	9
	NOP			 
	ENDR
	DBF	D0,FULLSCREEN



	MOVE.B	D3,(A1)
	NOP
	MOVE.B	D4,(A1)
	REPT	77+8+4
	NOP				
	ENDR
	MOVE.B	D4,(A0)
	MOVE.B	D3,(A0)
	REPT	13		
	NOP
	ENDR

	MOVE.B	D3,(A1)
	NOP
	MOVE.B	D4,(A1)
;	REPT	9
;	NOP			 
;	ENDR


;     REPT 120       
;	NOP		
;     ENDR
	CLR.B	$FFFF820A.W
     REPT 7
     	NOP		
     ENDR
	MOVE.B	#$2,$FFFF820A.W


	MOVE	#20,D0
	
FULLSCREEN2

	MOVE.B	D3,(A1)
	NOP
	MOVE.B	D4,(A1)

;	MOVE	(a6)+,$ffff8244.W		
;	MOVE	(a6),$ffff8242.W
;	MOVE	(a6)+,$ffff8244.W	* MOVE.W=4 NOPS
		
	REPT	77+8+4
	NOP				
	ENDR
						 

	MOVE.B	D4,(A0)
	MOVE.B	D3,(A0)
	
	REPT	13		
	NOP
	ENDR
	
	MOVE.B	D3,(A1)
	NOP
	MOVE.B	D4,(A1)


	REPT	9
	NOP			 
	ENDR
	DBF	D0,FULLSCREEN2





;	MOVE	#$700,$FFFF8240.W


	CMPI.B	#$39,$FFFFFC02.W
 	BEQ	FIN
	RTE


SCROLL	MOVEA.L	SCREEN1,A0
	LEA	160(A0),A0
	LEA	BUF_LET,A1
	REPT	8
	ROXL	(A1)

	ROXL	226(A0)
	ROXL	218(A0)
	ROXL	210(A0)
	ROXL	202(A0)
	ROXL	194(A0)
	ROXL	186(A0)
	ROXL	178(A0)
	ROXL	170(A0)
	ROXL	162(A0)

	ROXL	154(A0)
	ROXL	146(A0)
	ROXL	138(A0)
	ROXL	130(A0)
	ROXL	122(A0)
	ROXL	114(A0)
	ROXL	106(A0)
	ROXL	98(A0)
	ROXL	90(A0)
	ROXL	82(A0)
	ROXL	74(A0)
	ROXL	66(A0)
	ROXL	58(A0)	
	ROXL	50(A0)
	ROXL	42(A0)
	ROXL	34(A0)
	ROXL	26(A0)
	ROXL	18(A0)
	ROXL	10(A0)
	ROXL	2(A0)
	LEA	230(A0),A0
	ADDQ.L	#2,A1
	ENDR
	ADDI.L	#1,NB_PART
	RTS

TEST_LET	MOVEQ	#0,D0
	LEA	TEXT1,A0	
	ADDA.L	POINT,A0
	LEA	FONT8_8,A1
	CMPI.B	#$FF,(A0)
	BNE	SUITTST
	CLR.L	POINT
	LEA	TEXT1,A0
SUITTST	MOVE.B	(A0),D0	
	SUBI.B	#32,D0	
	LSL.W	#3,D0	
	ADDA.L	D0,A1	
	LEA	BUF_LET,A2
	MOVE.B	(A1)+,(A2)
	MOVE.B	(A1)+,2(A2)
	MOVE.B	(A1)+,4(A2)
	MOVE.B	(A1)+,6(A2)
	MOVE.B	(A1)+,8(A2)
	MOVE.B	(A1)+,10(A2)
	MOVE.B	(A1)+,12(A2)
	MOVE.B	(A1)+,14(A2)
	ADDI.L	#1,POINT
	RTS


SET_SCR:	move.l	#BUFFERSCR,d0	;adresse buffer dans d0
	and.l	#$ffffff00,d0		;adresse multiple de 256
	move.l	d0,SCREEN1		;adresse obtenue dans SCREEN1
	add.l	#256,d0		;32000 octets plus loin...
	move.l	d0,SCREEN2		;...SCREEN2
	rts				;retour


	
	SECTION	DATA
;MUZAXX	INCBIN	MUS3.MUS

TEXT1	DC.B	" THIS IS A FULL SCROLLER CODED BY ZAPPY   "
	DC.B	"               ",$FF

FONT8_8	
	REPT	33
	DC.B	0,0,0,0,0,0,0,0
	ENDR
	DC.B	124,230,230,254,230,230,230,0	;A
	DC.B	252,230,230,252,230,230,252,0	;B
	DC.B	124,230,224,224,224,230,124,0	;C
	DC.B	252,230,230,230,230,230,252,0	;D
	DC.B	254,224,224,248,224,224,254,0	;E
	DC.B	254,224,224,248,224,224,224,0	;F
	DC.B	124,230,224,224,238,230,124,0	;G
	DC.B	230,230,230,254,230,230,230,0	;H
	DC.B	124,56,56,56,56,56,124,0	;I
	DC.B	14,14,14,14,14,206,124,0	;J
	DC.B	230,238,252,248,252,238,230,0	;K
	DC.B	224,224,224,224,224,224,254,0	;L
	DC.B	198,238,246,230,230,230,230,0	;M
	DC.B	252,230,230,230,230,230,230,0	;N
	DC.B	124,230,230,230,230,230,124,0	;O
	DC.B	252,230,230,252,224,224,224,0	;P
	DC.B	121,230,230,230,238,252,118,0	;Q
	DC.B	252,230,230,252,236,230,230,0	;R
	DC.B	124,230,224,124,14,206,124,0	;S
	DC.B	254,56,56,56,56,56,56,0	;T
	DC.B	230,230,230,230,230,230,124,0	;U
	DC.B	230,230,230,230,230,124,56,0	;V
	DC.B	230,230,230,230,254,238,198,0	;W
	DC.B	198,238,124,56,124,238,198,0	;X
	DC.B	230,230,230,124,56,56,56,0	;Y
	DC.B	254,206,28,56,112,230,254,0	;Z
PALETTE
	REPT	5
	DC.W	$020,$131,$242,$353,$464,$575,$676,$777
	ENDR
IMAGE	INCBIN	MANGA.KID

	SECTION	BSS
ANC_PAL	DS.L	8
SAUV_SP	DS.L	1
ANC_VBL	DS.L	1
POINT	DS.L	1
NB_PART	DS.L	1
BUF_LET	DS.B	(1*8)*2
	ds.b	256		
BUFFERSCR:ds.b	64000		
				
	ds.b	256		
SCREEN1:	ds.l	1	
SCREEN2:	ds.l	1	






				