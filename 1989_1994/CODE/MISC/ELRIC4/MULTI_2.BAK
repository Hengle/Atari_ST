;Presents...
LINK = 0	;1 POUR LINKER
DEBUG = 0	;1 POUR DEBUGGER SANS SE FAIRE CHIER, 0 POUR EXECUTER

WAIT	MACRO
	MOVE.W	#\1,D7
\@BCL	DBRA	D7,\@BCL
	ENDM

CPU	MACRO
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	\@PAS_TOUCHE
	MOVE.W	#\1,$FFFF8240.W
\@PAS_TOUCHE	
	ENDM

COUL	MACRO
	MOVE.W	#\2,$FFFF8240+(\1*2).W
	ENDM

	IFEQ	LINK
	 CLR.L	-(SP)
	 MOVE.W	#$20,-(SP)
	 TRAP	#1
	 ADDQ.L	#6,SP
	 MOVE.L	D0,SAUV_SP

	 IFEQ	DEBUG
	  CLR.W	-(SP)
	  MOVE.L	#-1,-(SP)
	  MOVE.L	#-1,-(SP)
	  MOVE.W	#5,-(SP)
	  TRAP	#14
	  LEA	12(SP),SP

	  LEA	FIN,A0
	  MOVE.W	#8,A1
	  MOVE.L	A0,(A1)+
	  MOVE.L	A0,(A1)+
	  MOVE.L	A0,(A1)+
	  MOVE.L	A0,(A1)+
	  MOVE.L	A0,(A1)+
	  MOVE.L	A0,(A1)+
	  MOVE.L	A0,(A1)+
	 ENDC
	ENDC

	BSR	PREP_ECR
	BSR	PREPAR_PRESENTS

	IFNE	DEBUG
	 BRA	IT_VBL
	ENDC

	CLR.B	DATA_JOY
	CLR.B	DATA2JOY

	IFEQ	LINK
	 ANDI.B	#%11111000,$484.W
	ENDC

	MOVEM.L	$FFFF8240.W,D0-D7
	MOVEM.L	D0-D7,ANC_PAL

	MOVE.W 	#$FA00,A0
	MOVE.B	7(A0),IERA
	MOVE.B	9(A0),IERB
	MOVE.B	$F(A0),ISRA
	MOVE.B	$11(A0),ISRB
	MOVE.B	$13(A0),IMRA
	MOVE.B	$15(A0),IMRB
	MOVE.B	$17(A0),VR
	MOVE.B	$19(A0),TACR
	MOVE.B	$1B(A0),TBCR
	MOVE.B	$1D(A0),TCDCR
	MOVE.B	$1F(A0),TADR
	MOVE.B	$21(A0),TBDR
	MOVE.B	$23(A0),TCDR
	MOVE.B	$25(A0),TDDR
	
	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	
	MOVE.L	$70.W,ANC_VBL
	MOVE.L	$120.W,ANC_TIM
	MOVE.L	$118.W,ANC_CLAV
	MOVE.L	#VBLR,$70.W
	MOVE.L	#TB0,$120.W
	MOVE.L	#IT_CLAV,$118.W
	JSR	MUZAXX
	BSET	#0,$FFFFFA07.W		TB AUTORISê
;	BSET	#6,$FFFFFA09.W		IT CLAVIER OK
	MOVE.B	$FFFFFA07.W,$FFFFFA13.W
	MOVE.B	$FFFFFA09.W,$FFFFFA15.W
	MOVE.B	#$40,$FFFFFA17.W
	MOVE.W	#$2300,SR

	CLR.W	NB_VBL
	JMP	IT_VBL

MUZAXX	INCBIN	LEVEL5.MUS
	EVEN
	DS.B	5000

FIN	MOVE.W	#$2700,SR
	MOVE.L	ANC_VBL,$70.W
	MOVE.L	ANC_TIM,$120.W
	MOVE.L	ANC_CLAV,$118.W
	
	MOVE.W	#$FA00,A0
	MOVE.B	IERA,7(A0)
	MOVE.B	IERB,9(A0)
	MOVE.B	ISRA,$F(A0)
	MOVE.B	ISRB,$11(A0)
	MOVE.B	IMRA,$13(A0)
	MOVE.B	IMRB,$15(A0)
	MOVE.B	VR,$17(A0)
	MOVE.B	TACR,$19(A0)
	MOVE.B	TBCR,$1B(A0)
	MOVE.B	TCDCR,$1D(A0)
	MOVE.B	TADR,$1F(A0)
	MOVE.B	TBDR,$21(A0)
	MOVE.B	#$B0,$23(A0)
	MOVE.B	TDDR,$25(A0)
	MOVE.W	#$2300,SR

	MOVE.B	SAUVEC,$FFFF8201.W
	MOVE.B	SAUVEC+1,$FFFF8203.W

	MOVEM.L	ANC_PAL,D0-D7
	MOVEM.L	D0-D7,$FFFF8240.W
	
	MOVE.L	#$8080000,$FFFF8800.W
	MOVE.L	#$9090000,$FFFF8800.W
	MOVE.L	#$A0A0000,$FFFF8800.W
	
	IFEQ	LINK
	 ORI.B	#%00000111,$484.W

	 MOVE.L	SAUV_SP,-(SP)
	 MOVE.W	#$20,-(SP)
	 TRAP	#1
	 ADDQ.L	#6,SP
	
	 CLR.W	-(SP)
	 TRAP	#1
	 ADDQ.L	#2,SP
	ELSE
	 ILLEGAL
	ENDC
	
	*******	V B L  &  P R O C E D U R E S    *******
VBLR	ADDQ.W	#1,NB_VBL
	MOVEM.L	D0-A6,-(SP)
	JSR	MUZAXX+8
	MOVEM.L	(SP)+,D0-A6
	RTE
	
TB0	RTE

IT_CLAV	MOVE.L	D0,-(SP)
	MOVEQ	#0,D0
	MOVE.B	$FFFFFC02.W,D0
	CMPI.B	#$FF,D0
	BNE.S	JOY_2
	MOVE.L	#CLAV_1,$118.W
	MOVE.L	(SP)+,D0
	RTE
JOY_2	CMPI.B	#$FE,D0
	BNE.S	PAS_JOY
	MOVE.L	#CLAV_2,$118.W
	MOVE.L	(SP)+,D0
	RTE
PAS_JOY	MOVE.L	(SP)+,D0
	RTE

CLAV_1	MOVE.B	$FFFFFC02.W,DATA_JOY
	MOVE.L	#IT_CLAV,$118.W
	RTE

CLAV_2	MOVE.B	$FFFFFC02.W,DATA2JOY
	MOVE.L	#IT_CLAV,$118.W
	RTE

IT_VBL	BSR	VSYNC
	CPU	$200
	MOVE.L	SCREEN2,A0
	MOVEQ	#0,D0
	MOVE.W	#199,D7
.EFF	MOVE.W	D0,(A0)
	MOVE.W	D0,8(A0)
	MOVE.W	D0,16(A0)
	MOVE.W	D0,24(A0)
	MOVE.W	D0,32(A0)
	MOVE.W	D0,40(A0)
	MOVE.W	D0,48(A0)
	MOVE.W	D0,56(A0)
	MOVE.W	D0,64(A0)
	MOVE.W	D0,72(A0)
	MOVE.W	D0,80(A0)
	MOVE.W	D0,88(A0)
	MOVE.W	D0,96(A0)
	MOVE.W	D0,104(A0)
	MOVE.W	D0,112(A0)
	MOVE.W	D0,120(A0)
	MOVE.W	D0,128(A0)
	MOVE.W	D0,136(A0)
	MOVE.W	D0,144(A0)
	MOVE.W	D0,152(A0)
	LEA	160(A0),A0
	DBRA	D7,.EFF
	CPU	$305
	BSR	PART_2
	BSR	SWAPEC
	COUL	0,0
	CMPI.B	#$39,$FFFFFC02.W
	BEQ	FIN

	JMP	IT_VBL

PART_2	TST.B	FLAG_FIN_PRESENTS
	BNE	.FUCK
	LEA	BUF_PRESENTS,A0
	LEA	COOR_PRESENTS(PC),A1
	ADDA.W	PT_COOR,A1
	ADDI.W	#24,PT_COOR
	LEA	TABLE_160(PC),A2
	LEA	MOTIFS_1_PLAN(PC),A3
	MOVEQ	#5,D7
.AFF_ALL_LIG	MOVE.W	D7,A6
	MOVE.W	(A0)+,D7
	MOVE.W	(A1)+,D4	;Y
	MOVE.W	(A1)+,D5	;HAUTEUR
	TST.W	D4
	BGE.S	.Y_POSITIF
	NEG.W	D4	;NB DE LIGNES EN DEHORS (HAUT)
	SUB.W	D4,D5	;D5=NOUVELLE HAUTEUR
	MOVEQ	#0,D4	;Y=0
.Y_POSITIF	CMPI.W	#200,D4
	BGE.S	.PAS_AFF_LIG
	MOVE.W	D4,D3
	ADD.W	D5,D3
	SUBQ.W	#1,D3	;Y_BAS...
	CMPI.W	#200,D3
	BNE.S	.PAS_CLIP_BAS
	SUBI.W	#199,D3	;NB DE LIGNES EN DEHORS (BAS)
	SUB.W	D3,D5
.PAS_CLIP_BAS	ADD.W	D4,D4
	SUBQ.W	#1,D5
	BLT.S	.PAS_AFF_LIG
	MOVE.L	SCREEN2,A4
	ADDA.W	(A2,D4.W),A4
.AFF_ALL_CARRE	MOVE.W	(A0)+,D6	;X
	MOVE.W	D6,D3
	ANDI.W	#$FFF0,D6
	LSR	D6
	ANDI.W	#15,D3
	ADD.W	D3,D3
	ADD.W	D3,D3
	MOVE.W	(A3,D3.W),D0
	MOVE.W	2(A3,D3.W),D1
	MOVE.L	A4,A5
	ADDA.W	D6,A5
	MOVE.W	D5,D2
.AFF_CARRE	OR.W	D0,(A5)
	OR.W	D1,8(A5)
	LEA	160(A5),A5
	DBRA	D2,.AFF_CARRE
	DBRA	D7,.AFF_ALL_CARRE
.RETOUR	MOVE.W	A6,D7
	DBRA	D7,.AFF_ALL_LIG
	CMPI.W	#$1234,(A1)
	BNE.S	.FUCK
	ST	FLAG_FIN_PRESENTS
.FUCK	RTS
.PAS_AFF_LIG	ADDQ.W	#1,D7
	ADD.W	D7,D7
	ADDA.W	D7,A0	;PROCHAINE LIGNE
	BRA.S	.RETOUR

VSYNC	CMPI.W	#1,NB_VBL
	BLT.S	VSYNC
	CLR.W	NB_VBL
	RTS

PREPAR_PRESENTS	LEA	PRESENTS_MOTIF(PC),A0
	LEA	BUF_PRESENTS,A1
	MOVEQ	#5,D6
.LOOP_3	MOVE.L	A1,A2
	ADDQ.W	#2,A1
	MOVEQ	#-1,D7
	MOVEQ	#16,D2	;X_DEP=16
	MOVEQ	#2,D3
.LOOP_2	MOVEQ	#15,D1
	MOVE.W	(A0)+,D0
.LOOP_1	BTST	D1,D0
	BEQ.S	.NIB
	MOVE.W	D2,(A1)+
	ADDQ.W	#1,D7	;1 BLOC DE PLUS
.NIB	ADDQ.W	#6,D2	;X=X+6
	DBRA	D1,.LOOP_1
	DBRA	D3,.LOOP_2
	MOVE.W	D7,(A2)
	DBRA	D6,.LOOP_3
	CLR.W	PT_COOR
	SF	FLAG_FIN_PRESENTS
	RTS

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS
	
PREP_ECR	MOVE.B	$FFFF8201.W,SAUVEC
	MOVE.B	$FFFF8203.W,SAUVEC+1
	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000,D0
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

COOR_PRESENTS	INCBIN	PRESENTS.MOV
	DC.W	$1234

N	SET	0
TABLE_160	REPT	200
	DC.W	N*160
N	SET	N+1
	ENDR

	;LES CARRES FONT 6 PIXELS DE LARGEURS
MOTIFS_1_PLAN	DC.W	$FC00,0
	DC.W	$7E00,$0000,$3F00,$0000
	DC.W	$1F80,$0000,$0FC0,$0000
	DC.W	$07E0,$0000,$03F0,$0000
	DC.W	$01F8,$0000,$00FC,$0000
	DC.W	$007E,$0000,$003F,$0000
	DC.W	$001F,$8000,$000F,$C000
	DC.W	$0007,$E000,$0003,$F000
	DC.W	$0001,$F800

PRESENTS_MOTIF	DC.W	%1111001111001111,%1001111011111010,%0001011111001111
	DC.W	%1000101000101000,%0010000010000011,%0001000100010000
	DC.W	%1111001111001110,%0001110011100010,%1001000100001110
	DC.W	%1000001010001000,%0000001010000010,%0101000100000001
	DC.W	%1000001001001000,%0000001010000010,%0011000100000001
	DC.W	%1000001000101111,%1011110011111010,%0001000100011110

	SECTION	BSS
ANC_PAL	DS.L	8
ANC_VBL	DS.L	1
ANC_TIM	DS.L	1
ANC_CLAV	DS.L	1
SAUV_SP	DS.L	1
SAUVEC	DS.W	1
IERA	DS.B	1
IERB	DS.B	1
ISRA	DS.B	1
ISRB	DS.B	1
IMRA	DS.B	1
IMRB	DS.B	1
VR	DS.B	1
TACR	DS.B	1
TBCR	DS.B	1
TCDCR	DS.B	1
TADR	DS.B	1
TBDR	DS.B	1
TCDR	DS.B	1
TDDR	DS.B	1
	DS.B	256+640
BUFFER	DS.L	16000
SCREEN1	DS.L	1
SCREEN2	DS.L	1
DATA_JOY	DS.B	1
DATA2JOY	DS.B	1
NB_VBL	DS.W	1
;
FLAG_FIN_PRESENTS
	DS.B	1
	EVEN
PT_COOR	DS.W	1
BUF_PRESENTS	DS.W	48*6