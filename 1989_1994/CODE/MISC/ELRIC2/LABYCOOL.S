NB_POLY_MAX_PAR_Z = 25
Y_BASE = 210
HAUTEUR = 420
NORME_BASE = 256/32

X1 = 2
Y1 = 4
X2 = 6
Y2 = 8
X3 = 10
Y3 = 12
X4 = 14
Y4 = 16

PIED	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	MOVE.W	#$777,$FFFF8242.W
	MOVE.W	#$7,$FFFF8244.W
	MOVE.W	#$7,$FFFF8246.W

	BSR	INIT_SYSTEME

	MOVE.L	#RT_FINALE,$8.W
	MOVE.L	#RT_FINALE,$C.W
	MOVE.L	#RT_FINALE,$10.W
	MOVE.L	#RT_FINALE,$14.W
	MOVE.L	#RT_FINALE,$18.W
	MOVE.L	#RT_FINALE,$1C.W

	JSR	INIT_ROUT_POLY
	MOVE.L	#RT_COOL,TABLE_ADR_COD+40
	BSR	INIT_FILE_LABY
	LEA	BUF_INC,A0
	MOVE.W	#250-1,D7
.REMP	MOVE.W	#$4E71,(A0)+
	MOVE.W	#$5446,(A0)+
	DBRA	D7,.REMP

	LEA	SINUS,A0
	LEA	FIN_SINUS,A1
	MOVE.W	#100-1,D7
.COPY	MOVE.W	(A0)+,(A1)+
	DBRA	D7,.COPY

	MOVE.L	#ANIM_ANGLE,PT_ANIM_ANGLE
	MOVE.L	#ANIM_DEPLAC,PT_ANIM_DEPLAC
	CLR.W	NB_FRAMES_DEPLAC
	SF	FLAG_RECULE
	SF	FLAG_AVANCE
	CLR.W	NB_FRAMES_TOURNE
	SF	FLAG_GAUCHE
	SF	FLAG_DROITE

	MOVE.W	#128,ANGLE
	MOVE.W	#128,VECT_X
	MOVE.W	#100,VECT_Z

	CLR.L	TOTAL
	CLR.L	TOTAL_FILE

	MOVE.W	#$2700,SR
	MOVE.L	#VBLR,$70.W
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	CLR.W	NB_VBL
	MOVE.W	#$2300,SR

	CLR.W	NO

LOOP	;BSR	VSYNC

	MOVE.L	ADR_POINTS,A0
	LEA	SINUS,A1
	LEA	BUF_POINTS,A2
	MOVE.W	ANGLE,D0
	ADD.W	D0,D0
	MOVE.W	(A1,D0.W),D1	;D1=SINUS*(2^15)
	ADDI.W	#64*2,D0
	MOVE.W	(A1,D0.W),D0	;D0=COSINUS*(2^15)
	MULS.W	#48*2,D0	;D0=16*COS
	MULS.W	#-48*2,D1	;D1=16*SIN
	SWAP	D0
	SWAP	D1
	MOVE.W	D0,TRANS_Z
	MOVE.W	D1,TRANS_X	

	TST.W	NB_FRAMES_DEPLAC
	BGT.S	.PAS_ENCORE
	MOVE.L	PT_ANIM_DEPLAC,A0
	MOVE.W	(A0)+,D0
	BNE.S	.PAS_WAIT
	SF	FLAG_AVANCE
	SF	FLAG_RECULE
	MOVE.W	(A0)+,NB_FRAMES_DEPLAC ;NB DE FRAMES
	BRA.S	.NEXT
.PAS_WAIT	CMPI.W	#1,D0
	BNE.S	.PAS_AVANCE
	ST	FLAG_AVANCE
	SF	FLAG_RECULE
	MOVE.W	(A0)+,NB_FRAMES_DEPLAC ;NB DE FRAMES
	BRA.S	.NEXT
.PAS_AVANCE	CMPI.W	#2,D0
	BNE.S	.PAS_RECULE
	SF	FLAG_AVANCE
	ST	FLAG_RECULE
	MOVE.W	(A0)+,NB_FRAMES_DEPLAC ;NB DE FRAMES
.PAS_RECULE	NOP
.NEXT	CMPI.W	#$1234,(A0)
	BNE.S	.OK
	LEA	ANIM_DEPLAC,A0
.OK	MOVE.L	A0,PT_ANIM_DEPLAC
.PAS_ENCORE	SUBQ.W	#1,NB_FRAMES_DEPLAC

SECOND
	TST.W	NB_FRAMES_TOURNE
	BGT.S	.PAS_ENCORE
	MOVE.L	PT_ANIM_ANGLE,A0
	MOVE.W	(A0)+,D0
	BNE.S	.PAS_WAIT
	SF	FLAG_GAUCHE
	SF	FLAG_DROITE
	MOVE.W	(A0)+,NB_FRAMES_TOURNE ;NB DE FRAMES
	BRA.S	.NEXT
.PAS_WAIT	CMPI.W	#1,D0
	BNE.S	.PAS_GAUCHE
	ST	FLAG_GAUCHE
	SF	FLAG_DROITE
	MOVE.W	(A0)+,NB_FRAMES_TOURNE ;NB DE FRAMES
	BRA.S	.NEXT
.PAS_GAUCHE	CMPI.W	#2,D0
	BNE.S	.PAS_DROITE
	SF	FLAG_GAUCHE
	ST	FLAG_DROITE
	MOVE.W	(A0)+,NB_FRAMES_TOURNE ;NB DE FRAMES
.PAS_DROITE	NOP
.NEXT	CMPI.W	#$1234,(A0)
	BNE.S	.OK
	LEA	ANIM_ANGLE,A0
.OK	MOVE.L	A0,PT_ANIM_ANGLE
.PAS_ENCORE	SUBQ.W	#1,NB_FRAMES_TOURNE

	TST.B	FLAG_AVANCE
	BEQ.S	.PAS_1
	MOVE.W	TRANS_Z,D0
	ADD.W	D0,VECT_Z
	MOVE.W	TRANS_X,D0
	ADD.W	D0,VECT_X
.PAS_1	TST.B	FLAG_RECULE
	BEQ.S	.PAS_4
	MOVE.W	TRANS_Z,D0
	SUB.W	D0,VECT_Z
	MOVE.W	TRANS_X,D0
	SUB.W	D0,VECT_X
.PAS_4
	TST.B	FLAG_GAUCHE
	BEQ.S	.PAS_2
	ADDQ.W	#4,ANGLE
.PAS_2	TST.B	FLAG_DROITE
	BEQ.S	.PAS_3
	SUBQ.W	#4,ANGLE
.PAS_3
	ANDI.W	#255,ANGLE

	BSR	EFFAC_SCREEN
	MOVEQ	#0,D0
	MOVE.W	NO,D0
	MOVEQ	#0,D1
	BSR	AFF_CHIFFRE
	ADDQ.W	#1,NO
	BSR	EFFAC_BUF_TRI_Z
	BSR	MAKE_ROTATION
	BSR	CLIPPE_ALL
	BSR	REMPLIT_BUF_Z
	BSR	AFFICHE_POLYS
	BSR	AFFICHE_SCREEN
	BSR	FIND_REPEAT
	BSR	SWAPEC

	BRA	LOOP

RT_FINALE	MOVE.L	$4.W,A0
	JMP	(A0)

VSYNC	CMPI.W	#7,NB_VBL
	BLT.S	VSYNC
	CLR.W	NB_VBL
	RTS

VBLR	ADDQ.W	#1,NB_VBL
	RTE

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

FIND_REPEAT	MOVE.L	SCREEN2,A0
	LEA	160*100(A0),A0
	LEA	160*100(A0),A4	;A4=FIN D'ECRAN
	LEA	160(A0),A1
	LEA	BUF_RESULT,A5
	;A0=LIGNE DE REFERENCE
	;A1=LIGNE A COMPARER
	MOVEQ	#0,D5	;D5=No DE LA LIGNE
.NEW_LIGNE	MOVEQ	#1,D6	;D6=NB DE REPETITION
	MOVE.L	A0,A2
	MOVE.L	A1,A3
.RECOMPARE	MOVEQ	#40-1,D7
.CONT	CMPM.L	(A2)+,(A3)+
	BNE.S	.PAS_BON
	DBRA	D7,.CONT
	;SI ON ARRIVE ICI LES 2 LIGNES SONT IDENTIQUES
	MOVE.L	A0,A2
	MOVE.L	A3,A1
	ADDQ.W	#1,D6	;LIGNE PRECEDENTE IDENTIQUE
	CMPA.L	A4,A3
	BNE.S	.RECOMPARE
	MOVE.W	D5,(A5)+
	MOVE.W	D6,(A5)+
	BRA.S	.FIN
.PAS_BON	MOVE.W	D5,(A5)+	;No DE LA LIGNE
	MOVE.W	D6,(A5)+	;Nb D'ITêRATIONS
	ADDQ.W	#1,D5
	MOVE.L	A1,A0	;NOUVELLE LIGNE DE REFERENCE
	LEA	160(A0),A1
	CMPA.L	A4,A1	
	BNE.S	.NEW_LIGNE
	MOVE.W	D5,(A5)+	;No DE LA DERNIERE LIGNE
	MOVE.W	#1,(A5)+	;REPETêE UNE FOIS
.FIN	MOVEQ	#0,D0
	MOVE.W	D5,D0
	ADD.L	D0,TOTAL
	MOVE.W	#1,D1
	BSR	AFF_CHIFFRE
	LEA	BUF_RESULT,A0
	MOVE.L	SCREEN2,A2
	LEA	160*100(A2),A2
	LEA	BUF_LIGNE,A5

ALL_LINES	MOVE.L	A2,A1
	MOVE.L	A5,A4
	ADDQ.W	#2,A5  ;DE LA PLACE POUR LE NB DE PAQUET DE SEGMENT
	CLR.W	NB_SEG

	MOVEQ	#1,D6
	MOVEQ	#7,D7
	MOVEQ	#0,D3	;X COURANT A 0

RECOMANC	MOVEQ	#0,D2
	LEA	4(A5),A6
	MOVEQ	#0,D4	;NB DE SEGMENT A 0
	SF	FLAG_DEB_LIG

DEBUT_NUL	MOVEQ	#0,D0
	BTST	D7,(A1)
	BEQ.S	.NO_1
	ADDQ.W	#1,D0
.NO_1	BTST	D7,2(A1)
	BEQ.S	.NO_2
	ADDQ.W	#2,D0
.NO_2	TST.W	D0
	BNE.S	PAS_ZERO
	ADDQ.W	#1,D2	;PIXEL_SUIVANT
	ADDQ.W	#1,D3	;PIXEL_SUIVANT
	CMPI.W	#320,D3
	BEQ.S	FIN_LIGNE
	SUBQ.W	#1,D7
	BGE.S	DEBUT_NUL
	ADD.W	D6,A1
	EORI.W	#6,D6
	MOVEQ	#7,D7
	BRA.S	DEBUT_NUL

PAS_ZERO	TST.B	FLAG_DEB_LIG
	BNE.S	.DEJA_TRAIT
	MOVE.W	D0,(A5)+	;COULEUR DE DEPART
	ST	FLAG_DEB_LIG
.DEJA_TRAIT	MOVE.W	D3,(A6)+	;X1
;	ADD.W	D2,D3	;D3=X SUR LA LIGNE
	MOVE.W	D0,D1	;D1=COULEUR DE REFERENCE
	MOVEQ	#0,D2	;LONGUEUR

NEXT_PIXEL	MOVEQ	#0,D0
	BTST	D7,(A1)
	BEQ.S	.NO_1
	ADDQ.W	#1,D0
.NO_1	BTST	D7,2(A1)
	BEQ.S	.NO_2
	ADDQ.W	#2,D0
.NO_2	CMP.W	D0,D1
	BNE.S	NOUVELLE_COULEUR
	ADDQ.W	#1,D2	;LA LONGUEUR S'INCREMENTE
	ADDQ.W	#1,D3	;PIXEL SUIVANT
	CMPI.W	#320,D3
	BEQ.S	FIN_LIGNE
	SUBQ.W	#1,D7
	BGE.S	NEXT_PIXEL
	ADD.W	D6,A1
	EORI.W	#6,D6
	MOVEQ	#7,D7
	BRA.S	NEXT_PIXEL

NOUVELLE_COULEUR
	MOVE.W	D2,(A6)+	;LONGUEUR
	ADDQ.W	#1,D4	;UN SEGMENT DE PLUS
	TST.W	D0
	BNE.S	.PAS_NUL
	MOVE.W	D4,(A5)+	;NB DE SEGMENT
	MOVE.L	A6,A5
	;ADD.W	D2,D3
	MOVEQ	#0,D2
	ADDQ.W	#1,NB_SEG
	BRA	RECOMANC
.PAS_NUL	;ADD.W	D2,D3
	;MOVE.W	D3,(A6)+	;X1
	MOVE.W	D0,D1	;COULEUR DE REFERENCE
	MOVEQ	#0,D2	;LONGUEUR
	BRA.S	NEXT_PIXEL

FIN_LIGNE	TST.W	D0
	BEQ.S	.SUIT
	MOVE.W	D2,(A6)+	;LONGUEUR DU DERNIER SEGMENT
	ADDQ.W	#1,D4
	MOVE.W	D4,(A5)+
	ADDQ.W	#1,NB_SEG
.SUIT	MOVE.W	NB_SEG,(A4)	;ON PLACE LE NB DE PAQUET DE SEGMENTS
	MOVE.L	A6,A5
	MOVE.W	2(A0),D0	;NB DE FOIS QUE L'ON REPETE LA LIGNE
	MULU.W	#160,D0
	ADDA.L	D0,A2
	ADDQ.W	#4,A0
	DBRA	D5,ALL_LINES

	MOVE.L	A6,D0
	SUBI.L	#BUF_LIGNE,D0
	ADD.L	D0,TOTAL_FILE
	MOVE.L	TOTAL_FILE,D0
	MOVEQ	#2,D1
	BSR	AFF_CHIFFRE
	RTS

NB_SEG	DS.W	1

BUF_RESULT	DS.W	2*200	;TAILLE MAXIMUM

BUF_LIGNE	DS.W	3000

AFFICHE_POLYS	LEA	BUF_TRI_Z+(2+2*NB_POLY_MAX_PAR_Z)*2999,A0
	LEA	COEFF_3D,A3
	LEA	BUF_INC,A6
;	MOVE.L	#TABLE_CORES_POLY,PT_CORES

	MOVE.W	#3000-1,D7
.ALL_Z	TST.W	(A0)
	BEQ	.NEXT_Z
	MOVE.L	A0,A1
	MOVE.W	(A1)+,D0	;NB DE POLY PRESENT
	SUBQ.W	#1,D0
.ALL_POLY_AT_THIS_Z
	MOVE.W	(A1)+,D1	;No DU POLY
	MOVE.W	D1,NO_TEMP
	MULU.W	#10,D1
	LEA	BUF_POLY,A2
	ADDA.W	D1,A2
	;A2 POINTE SUR LES COOR DU POLY A AFFICHER
	LEA	POLY,A4
	MOVE.W	#4,(A4)

	MOVE.W	(A2)+,D1	;X1
	MOVE.W	(A2)+,D2	;Z1
	ADD.W	D2,D2
	MOVE.W	(A3,D2.W),D2	;COEFF 3D
	ADD.W	D1,D1
	ADD.W	D1,D1
	MULS.W	D2,D1
	SWAP	D1
	ADDI.W	#160,D1
	MOVE.W	D1,X1(A4)
	MOVE.W	D1,X4(A4)
	MOVE.W	#(Y_BASE)*4,D1
	MULS.W	D2,D1
	SWAP	D1
	ADDI.W	#100,D1
	MOVE.W	D1,Y1(A4)
	MOVE.W	#(Y_BASE-HAUTEUR)*4,D1
	MULS.W	D2,D1
	SWAP	D1
	ADDI.W	#100,D1
	MOVE.W	D1,Y4(A4)

	MOVE.W	(A2)+,D3	;X2
	MOVE.W	(A2)+,D4	;Z2
	ADD.W	D4,D4
	MOVE.W	(A3,D4.W),D4	;COEFF 3D
	ADD.W	D3,D3
	ADD.W	D3,D3
	MULS.W	D4,D3
	SWAP	D3
	ADDI.W	#160,D3
	MOVE.W	D3,X2(A4)
	MOVE.W	D3,X3(A4)
	MOVE.W	#(Y_BASE)*4,D3
	MULS.W	D4,D3
	SWAP	D3
	ADDI.W	#100,D3
	MOVE.W	D3,Y2(A4)
	MOVE.W	#(Y_BASE-HAUTEUR)*4,D3
	MULS.W	D4,D3
	SWAP	D3
	ADDI.W	#100,D3
	MOVE.W	D3,Y3(A4)

	LEA	POLY,A5
	MOVEQ	#0,D3
	TST.W	X1(A5)
	BGE.S	.POS_1
	ADDQ.W	#1,D3
.POS_1	TST.W	X2(A5)
	BGE.S	.POS_2
	ADDQ.W	#1,D3
.POS_2	CMPI.W	#2,D3
	BEQ.S	.PAS_AFF

	MOVEQ	#0,D3
	CMPI.W	#320,X1(A5)
	BLT.S	.INF_320_1
	ADDQ.W	#1,D3
.INF_320_1	CMPI.W	#320,X2(A5)
	BLT.S	.INF_320_2
	ADDQ.W	#1,D3
.INF_320_2	CMPI.W	#2,D3
	BEQ.S	.PAS_AFF

;	MOVE.W	(A2)+,MOD_PLAN

	MOVEM.L	D0-A6,-(SP)
	BSR	EFFAC_SCREEN_TEST
	LEA	POLY,A0
	JSR	RT_POLY
	BSR	ANALYSE_SCREEN_TEST
	MOVEM.L	(SP)+,D0-A6
.PAS_AFF	DBRA	D0,.ALL_POLY_AT_THIS_Z

.NEXT_Z	LEA	-(2+2*NB_POLY_MAX_PAR_Z)(A0),A0
	DBRA	D7,.ALL_Z

	RTS

AFFICHE_SCREEN	LEA	SCREEN_ACTIF,A0
	MOVE.L	SCREEN2,A1
	LEA	BUF_INC,A2
	MOVEQ	#1,D6
	MOVE.W	#40*200-1,D7
.ALL_THE_SCREEN	MOVEQ	#7,D1
.ALL_THE_WORD	MOVEQ	#0,D0
	MOVE.B	(A0)+,D0	;COULEUR DU POINT
	BLT.S	.NO
	ADD.W	D0,D0
	MOVE.W	(A2,D0.W),D0
	CMPI.W	#$4E71,D0
	BNE.S	.NO_1
	MOVEQ	#0,D0
	BRA.S	.SUIT
.NO_1	MOVEQ	#2,D0
.SUIT	BSET	D1,(A1,D0.W)
.NO	DBRA	D1,.ALL_THE_WORD
	ADDA.W	D6,A1
	EORI.W	#6,D6
	DBRA	D7,.ALL_THE_SCREEN
	RTS

ANALYSE_SCREEN_TEST
	LEA	BUF_SCREEN_TEST,A0
NO_TEMP = *+2
	MOVE.W	#$1234,D5
	LEA	TABLE_CORES_POLY,A1
	ADD.W	D5,D5
	MOVE.W	(A1,D5.W),D5
	LEA	SCREEN_ACTIF,A2
	MOVE.W	Y_MIN,D0
	MOVE.W	D0,D1
	MULU.W	#160,D0
	ADDA.L	D0,A0
	MULU.W	#320,D1
	ADDA.L	D1,A2
	MOVE.W	Y_MAX,D0
	SUB.W	Y_MIN,D0
	ADDQ.W	#1,D0
	MULU.W	#40,D0
	SUBQ.W	#1,D0
	MOVE.W	D0,D1
	MOVEQ	#1,D6
;	MOVE.W	#20*200-1,D1
.ALL_THE_SCREEN	MOVEQ	#7,D0
.ALL_THE_WORD	MOVEQ	#0,D7
	BTST	D0,(A0)
	BEQ.S	.NO_1
	ADDQ.W	#1,D7
.NO_1	TST.W	D7
	BEQ.S	.NO_POINT
	MOVE.B	D5,(A2)
.NO_POINT	ADDQ.W	#1,A2
	DBRA	D0,.ALL_THE_WORD
	ADDA.W	D6,A0
	EORI.W	#6,D6
	DBRA	D1,.ALL_THE_SCREEN
	RTS

Y_MIN	DS.W	1
Y_MAX	DS.W	1

EFFAC_SCREEN	MOVE.L	SCREEN2,A0
	MOVEQ	#0,D0
	MOVE.W	#20*200-1,D7
.EFF	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A0)+
;	ADDQ.W	#4,A0
	DBRA	D7,.EFF

	LEA	SCREEN_ACTIF,A0
	MOVEQ	#-1,D0
	MOVE.W	#16000-1,D7
.EFF2	MOVE.L	D0,(A0)+
	DBRA	D7,.EFF2
	RTS

EFFAC_SCREEN_TEST
	LEA	BUF_SCREEN_TEST,A0
	MOVEQ	#0,D0
	MOVE.W	#20*200-1,D7
.EFF	MOVE.W	D0,(A0)+
;	MOVE.L	D0,(A0)+
	ADDQ.W	#6,A0
	DBRA	D7,.EFF
	RTS

	;AU Z=0: X=((Z1*X2)-(Z2*X1))/(Z1-Z2)
CLIPPE_ALL	LEA	BUF_POINTS,A1
	MOVE.L	ADR_POLY,A0
	LEA	BUF_POLY,A2
	LEA	BUF_INC,A6
	LEA	TABLE_CORES_POLY,A5
	CLR.W	NO_POLY

	MOVEQ	#0,D6	;NOUVEAU NB DE POLY
	MOVE.W	NB_POLY,D7
	SUBQ.W	#1,D7
NEXT_ONE	SF	FLAG_CLIP
	MOVE.W	(A6)+,HA
	MOVE.W	(A0)+,D4	;POINT 1
	MOVE.W	(A0)+,D5	;POINT 2
	ADD.W	D4,D4
	ADD.W	D4,D4
	MOVE.W	(A1,D4.W),D0	;X1
	MOVE.W	2(A1,D4.W),D1	;Z1
	ADD.W	D5,D5
	ADD.W	D5,D5
	MOVE.W	(A1,D5.W),D2	;X2
	MOVE.W	2(A1,D5.W),D3	;Z2
	TST.W	D1
	BGE.S	Z1_POSITIF_OU_NUL
	TST.W	D3
	BLE.S	NEXT_POLY
	MOVE.B	#1,FLAG_CLIP
	BRA.S	CLIPPING_DETECTED
Z1_POSITIF_OU_NUL
	TST.W	D3
	BGE.S	POSE_LE_POLY
CLIPPING_DETECTED
	CMPI.B	#1,FLAG_CLIP
	BNE.S	.ORDRE_OK
	EXG.L	D0,D2
	EXG.L	D1,D3
.ORDRE_OK	BSR	CLIPPOUZE
	;AU RETOUR D0-->D3 SONT CLIPPêS
POSE_LE_POLY	MOVEM.W	D0-D3,(A2)
	ADDQ.W	#8,A2
HA = *+2
	MOVE.W	#$1234,(A2)+
NO_POLY = *+2
	MOVE.W	#$1234,(A5)+
	ADDQ.W	#1,D6
NEXT_POLY	ADDQ.W	#1,NO_POLY
	DBRA	D7,NEXT_ONE
	MOVE.W	D6,NEW_NB_POLY
	RTS

	;AU Z=0: X=((Z1*X2)-(Z2*X1))/(Z1-Z2)
CLIPPOUZE	MOVE.W	D6,-(SP)
	EXT.L	D1
	EXT.L	D3
	MOVE.L	D1,D6
	SUB.L	D3,D6	;D6=Z1-Z2
	MULS.W	D1,D2	;D2=Z1*X2
	MULS.W	D0,D3	;D3=Z2*X1
	SUB.L	D3,D2	;D2=(Z1*X2)-(Z2*X1)
	DIVS.W	D6,D2	;X2=X CLIPPê
	MOVEQ	#0,D3	;Z2=0
	MOVE.W	(SP)+,D6
	RTS

FLAG_CLIP	DS.B	1
	EVEN

REMPLIT_BUF_Z	LEA	BUF_POLY,A0
	LEA	BUF_TRI_Z,A2
	MOVEQ	#0,D6	;No DU POLY TRAITê
	MOVE.W	NEW_NB_POLY,D7
	SUBQ.W	#1,D7
	BLT	DO_NOTHING
POZ_ALL_POLY	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE.W	2(A0),D0	;Z1
	MOVE.W	6(A0),D1	;Z2
	ADD.L	D1,D0
	BGE.S	.OK_POSITIF
	ILLEGAL
.OK_POSITIF	LSR.L	#1,D0	;Z MOYEN
	MULU.W	#2+NB_POLY_MAX_PAR_Z*2,D0
	MOVE.W	(A2,D0.L),D1	:NB DE POLY SUR CE Z
	ADD.W	D1,D1
	ADDQ.W	#1,(A2,D0.L)	;UN POLY DE PLUS A CE Z
	ADD.W	D1,D0
	MOVE.W	D6,2(A2,D0.L)	;ON POSE LE No DU POLY
	ADDQ.W	#1,D6
	LEA	10(A0),A0	;PROCHAIN POLY
	DBRA	D7,POZ_ALL_POLY
DO_NOTHING
	RTS

MAKE_ROTATION	MOVE.L	ADR_POINTS,A0
	LEA	SINUS,A1
	LEA	BUF_POINTS,A2
	MOVE.W	ANGLE,D0
	ADD.W	D0,D0
	MOVE.W	(A1,D0.W),D1	;D1=SINUS*(2^15)
	ADDI.W	#64*2,D0
	MOVE.W	(A1,D0.W),D0	;D0=COSINUS*(2^15)
	MOVE.W	NB_POINTS,D7
	SUBQ.W	#1,D7
.ALL_PTS	MOVE.W	(A0)+,D2	;X
	MOVE.W	(A0)+,D3	;Z
	SUB.W	VECT_X,D2
	SUB.W	VECT_Z,D3
	ADD.W	D3,D3
	MOVE.W	D3,D4
	MULS.W	D1,D4
	SWAP	D4	;D4=Z*SIN T
	ADD.W	D2,D2
	MOVE.W	D2,D5
	MULS.W	D0,D5
	SWAP	D5	;D5=X*COS T
	ADD.W	D5,D4	;D4=Z*SIN T+X*COS T=X'
	MULS.W	D0,D3
	SWAP	D3	;D3=Z*COS T
	MULS.W	D1,D2
	SWAP	D2	;D2=X*SIN T
	SUB.W	D2,D3	;D3=Z*COS T-X*SIN T=Z'
	MOVE.W	D4,(A2)+	;X'
	MOVE.W	D3,(A2)+	;Z'
	DBRA	D7,.ALL_PTS
	RTS

EFFAC_BUF_TRI_Z	LEA	BUF_TRI_Z,A0
	MOVE.W	#3000-1,D7
.EFF	CLR.W	(A0)
	LEA	2+2*NB_POLY_MAX_PAR_Z(A0),A0
	DBRA	D7,.EFF
	RTS

INIT_FILE_LABY	LEA	LABY_INFO,A0
	MOVE.W	(A0)+,D7	;NB DE POINTS
	MOVE.W	D7,NB_POINTS
	MOVE.L	A0,ADR_POINTS
	SUBQ.W	#1,D7
.ALL_PTS	MOVE.W	(A0),D0	;X1
	MULS.W	#NORME_BASE,D0
;	ADDI.W	#80,D0
	NEG.L	D0
	MOVE.W	D0,(A0)+
	MOVE.W	(A0),D0	;Z1
	MULS.W	#NORME_BASE,D0
;	ADDI.W	#1000,D0
	MOVE.W	D0,(A0)+
	DBRA	D7,.ALL_PTS

	MOVE.W	(A0)+,D7	;NB DE POLY
	MOVE.L	A0,ADR_POLY
;	LEA	FIN_LABY_INFO,A1
;	SUBA.L	A0,A1
;	MOVE.L	A1,D7
;	LSR.W	#2,D7
	MOVE.W	D7,NB_POLY
	RTS

INIT_SYSTEME	MOVEQ	#7,D7
.LOW	STOP	#$2300
	MOVE.B	#1,$FFFF8260.W
	STOP	#$2300
	CLR.B	$FFFF8260.W
	DBRA	D7,.LOW

;	CLR.W	-(SP)
;	PEA	-1.W
;	PEA	-1.W
;	MOVE.W	#5,-(SP)
;	TRAP	#14
;	LEA	12(SP),SP

	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000+1280,D0
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W

	RTS

INIT_ROUT_POLY	LEA	BUF_COD_GEN,A0
	LEA	TABLE_ADR_COD,A1

	MOVE.L	#RETOUR_POLY,(A1)+
	MOVEQ	#9-1,D3
.GO	MOVE.L	#RT_COOL,(A1)+
	DBRA	D3,.GO

	MOVE.W	#$FFFF,D0	;1ER MOTIF
	MOVE.W	#$8000,D1	;DERNIER MOTIF
	MOVEQ	#0,D3	;DECALAGE

	MOVEQ	#16-1,D6
.DECAL	
	MOVEQ	#16+1,D5
	ADD.W	#18*16,D5	;D5=LONGUEUR DE LA LIGNE
	ADD.W	D3,D5

	MOVE.W	#-144,D4
	MOVEQ	#18-1,D7
.COPY_MOVED7	BSR	POZ_ADRESSE
	MOVE.W	#$3B47,(A0)+	;MOVE.W D7,d16(A5)
	MOVE.W	D4,(A0)+
	ADDQ.W	#8,D4
	SUBI.W	#16,D5
	DBRA	D7,.COPY_MOVED7

	MOVE.W	#16+1,D5
	ADD.W	D3,D5
	BSR	POZ_ADRESSE
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_1
	MOVE.W	#$3887,(A0)+	;MOVE.W D7,(A4)
	BRA.S	.RETOUR_1
.PAS_D7_1
	TST	CHOICE
	BNE.S	.OR1
	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	BRA.S	.MOV1
.OR1	MOVE	#$0054,(A0)+	OR.W #$Imm,(A4)
.MOV1	MOVE.W	D0,(A0)+
.RETOUR_1	MOVE.W	#1,D5
	ADD.W	D3,D5
	BSR	POZ_ADRESSE
	CMPI.W	#-1,D1
	BNE.S	.PAS_D7_2
	MOVE.W	#$3A87,(A0)+	;MOVE.W D7,(A5)
	BRA.S	.RETOUR_2
.PAS_D7_2
	TST	CHOICE
	BNE.S	.OR2
	MOVE.W	#$3ABC,(A0)+	;MOVE.W #$Imm,(A5)
	BRA.S	.MOV2
.OR2	MOVE	#$0055,(A0)+	OR "             "
.MOV2	MOVE.W	D1,(A0)+
.RETOUR_2
	BSR	COPY_RT_COOL

	ASR.W	#1,D1
	ADDQ.W	#1,D3	;LONGUEUR SUIVANT
	DBRA	D6,.DECAL

	LEA	TABLE_ADR_COD+1320,A1

	MOVE.W	#$7FFF,D3	;1ER MOTIF
	MOVEQ	#14,D5

	MOVEQ	#14,D2
ALL_RT	
	MOVE.L	#RETOUR_POLY,(A1)+
	MOVEQ	#9-1,D0
.GO	MOVE.L	#RT_COOL,(A1)+
	DBRA	D0,.GO

	MOVE.W	#1,A3

	MOVEQ	#0,D0
	MOVE.W	D5,D6
LITTLE	BSR	POZ_ADRESSE2
	BSET	D6,D0
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_LITTLE
	MOVE.W	#$3887,(A0)+
	BRA.S	.RETOUR_LITTLE
.PAS_D7_LITTLE
	TST	CHOICE
	BNE.S	.OR3
	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	BRA.S	.MOV3
.OR3	MOVE	#$0054,(A0)+
.MOV3	MOVE.W	D0,(A0)+

.RETOUR_LITTLE
	BSR	COPY_RT_COOL

	ADDQ.W	#1,A3
	DBRA	D6,LITTLE

	MOVE.W	D3,D0
	MOVE.W	#$8000,D1	;DERNIER MOTIF

	MOVEQ	#16-1,D6
DECAL
	MOVE.W	#18*16,A3
	ADD.W	D5,A3
	ADDQ.W	#1,A3
	MOVEQ	#16,D4
	SUB.W	D6,D4
	ADDA.W	D4,A3

	MOVE.W	#-144,D4
	MOVEQ	#18-1,D7
COPY_MOVED7	BSR	POZ_ADRESSE2
	MOVE.W	#$3B47,(A0)+	;MOVE.W D7,d16(A5)
	MOVE.W	D4,(A0)+
	ADDQ.W	#8,D4
	LEA	-16(A3),A3
	DBRA	D7,COPY_MOVED7

	MOVE.W	D5,A3
	ADDQ.W	#1,A3
	MOVEQ	#16,D4
	SUB.W	D6,D4
	ADDA.W	D4,A3
	BSR	POZ_ADRESSE2
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_3
	MOVE.W	#$3887,(A0)+	;MOVE.W D7,(A4)
	BRA.S	.RETOUR_3
.PAS_D7_3
	TST	CHOICE
	BNE.S	.OR4
	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	BRA.S	.MOV4
.OR4	MOVE	#$0054,(A0)+
.MOV4	MOVE.W	D0,(A0)+
.RETOUR_3	CMPI.W	#-1,D1
	BNE.S	.PAS_D7_4
	MOVE.W	#$3A87,(A0)+	;MOVE.W D7,(A5)
	BRA.S	.RETOUR_4
.PAS_D7_4
	TST	CHOICE
	BNE.S	.OR5
	MOVE.W	#$3ABC,(A0)+	;MOVE.W #$Imm,(A5)
	BRA.S	.MOV5
.OR5	MOVE	#$0055,(A0)+
.MOV5	MOVE.W	D1,(A0)+
.RETOUR_4
	BSR	COPY_RT_COOL

	ASR.W	#1,D1
	DBRA	D6,DECAL

	SUBQ.W	#1,D5
	LSR.W	#1,D3
	LEA	1280(A1),A1
	DBRA	D2,ALL_RT

*******
TBL4:	LEA	TABLE_A4,A0
	MOVE	#639,D7
.DEBT	CLR.L	(A0)+
	DBF	D7,.DEBT

	LEA	MINI_TABLE,A1
	MOVEQ	#0,D6	D6=X
	MOVEQ	#20-1,D7
.F	MOVEQ	#16-1,D0
.SXTEEN	MOVE	D6,(A0)+
	MOVE	(A1),(A0)+
	ADDQ	#4,D6
	DBF	D0,.SXTEEN
	ADDQ	#2,A1
	DBF	D7,.F

	MOVE	#639,D7
.FINT	MOVE	#319*4,(A0)+
	MOVE	#152,(A0)+
	;CLR	(A0)+
	DBF	D7,.FINT
TBL2:
	LEA	TABLE_A2,A0
	MOVE	#639,D7
.DEBT	CLR.L	(A0)+
	DBF	D7,.DEBT

	LEA	MINI_TABLE,A1
	MOVEQ	#0,D6	D6=X
	MOVEQ	#20-1,D7
.F	MOVEQ	#16-1,D0
.SXTEEN	MOVE	(A1),(A0)+
	MOVE	D6,(A0)
	MOVE	D6,D5
	LSR	#2,D5
	AND	#15,D5
	MULU	#1320,D5
	SUB	D5,(A0)+
	ADDQ	#4,D6
	DBF	D0,.SXTEEN
	ADDQ	#2,A1
	DBF	D7,.F

	MOVE	#639,D7
.FINT	;CLR	(A0)+
	MOVE	#152,(A0)+
	MOVE	#319*4,(A0)+
	DBF	D7,.FINT

	RTS

MINI_TABLE
N	SET	0
	REPT	20
	DC	N
N	SET	N+8
	ENDR

POZ_ADRESSE2	MOVEM.L	D5/A0,-(SP)
	MOVE.W	A3,D5
	SUBQ.W	#1,D5
	ADD.W	D5,D5
	ADD.W	D5,D5
;	SUBA.L	#BUF_COD_GEN,A0
	MOVE.L	A0,(A1,D5.W)
	MOVEM.L	(SP)+,D5/A0
	RTS
	

POZ_ADRESSE	MOVEM.L	D5/A0,-(SP)
	SUBQ.W	#1,D5
	ADD.W	D5,D5
	ADD.W	D5,D5
;	SUBA.L	#BUF_COD_GEN,A0
	MOVE.L	A0,(A1,D5.W)
	MOVEM.L	(SP)+,D5/A0
	RTS
	
COPY_RT_COOL	LEA	RT_COOL,A6
	MOVE.W	#LONG_RT_COOL,D7
.COPY	MOVE.W	(A6)+,(A0)+
	DBRA	D7,.COPY
	RTS

RT_COOL	ADD.L	D5,D6	1  PROCHAINE LIGNE:+160
	MOVE.L	D6,A4	1  A3=ADR ECRAN EN .W, WARNING!
	MOVE.L	A4,A5	1  A6=ECRAN TOO (LE A5 DE FULBERT)
	MOVE.L	D4,A2	1  D4=A2=TABLE_A2

	MOVE.W	(A1)+,D1	2  X2
	ADD.W	D1,D1	1  
	ADD.W	D1,D1	1

	MOVE.L	(A3,D1.W),D3	5
	ADD	D3,A5	2
	SWAP	D3	1

	MOVE.W	(A0)+,D1	2  X1
	ADD	D1,D1	1
	ADD	D1,D1	1
	ADD	D1,A2	2  A2=TABLE_A2+X1*4
	ADD	(A2)+,A4	3  OFFSET. A3=>1ER MOT
	SUB	(A2),D3	2  (A2)=X1*2-LE DêCALAGE... RUSê, HEIN?
	   ;D'OU D3=X2*2-(X1*2-DêCALAGE)=(X2-X1)*2+DêCALAGE, ZOU.
	MOVE.L	(A6,D3.W),A2	;5
	JMP	(A2)	;2

;TOTAL:31 NOPS. +58=89 NOPS.
LONG_RT_COOL = ((*-RT_COOL)/2)-1

RT_POLY	MOVE.L	A0,ADR_DEPART

	LEA	2(A0),A1	;A1 POINTE SUR LES POINTS
	MOVE.W	(A1),D3
	SUB.W	4(A1),D3
	MOVE.W	2(A1),D4
	SUB.W	6(A1),D4
	MOVE.W	8(A1),D6
	SUB.W	4(A1),D6
	MOVE.W	$A(A1),D5
	SUB.W	6(A1),D5
	MULS.W	D3,D5
	MULS.W	D6,D4
	SUB.L	D4,D5
	BGT.S	.VISIBLE
	MOVE.L	2(A0),D0
	MOVE.L	6(A0),D1
	MOVE.L	10(A0),D2
	MOVE.L	14(A0),D3
	MOVE.L	D0,14(A0)
	MOVE.L	D1,10(A0)
	MOVE.L	D2,6(A0)
	MOVE.L	D3,2(A0)
.VISIBLE
	MOVE	#25,REMP_GAUCHE+249*2
	MOVE	#15,REMP_DROIT+249*2

;	LEA	REMP_GAUCHE,A1
;	MOVE	#(500/2)-1,D6
;.EFF_TBX	CLR.L	(A1)+
;	DBF	D6,.EFF_TBX

	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVEQ	#0,D7

	MOVE.W	(A0)+,D0	;NB DE POINTS COMPOSANT LA SURFACE
	LEA	BUF_EXAM,A1
	MOVE.L	A0,A2
	SUBQ.W	#1,D0
	MOVE.W	D0,NB_PTS
.COPYING	MOVE.L	(A0)+,(A1)+
	DBRA	D0,.COPYING
	MOVE.L	(A2),(A1)+

	LEA	BUF_EXAM,A0
	LEA	BUF_GAUCHE,A2
	LEA	BUF_DROIT,A3
	ADDQ.W	#4,A0
	MOVE.W	-2(A0),D3	;Y DE REFERENCE
NB_PTS = *+2
	MOVE.W	#$1234,D0
	MOVEQ	#-1,D6
	MOVEQ	#-1,D7
ALL_PTS	MOVE.W	(A0),D1	;X
	MOVE.W	2(A0),D2	;Y
	CMP.W	D2,D3
	BGE.S	ON_MONTE
ON_DESCEND	MOVE.L	-4(A0),(A2)+
	MOVE.L	(A0)+,(A2)+
	MOVE.W	D2,D3
	ADDQ.W	#1,D6
	DBRA	D0,ALL_PTS
	BRA.S	FINITO
ON_MONTE	MOVE.L	-4(A0),(A3)+
	MOVE.L	(A0)+,(A3)+
	MOVE.W	D2,D3
	ADDQ.W	#1,D7
	DBRA	D0,ALL_PTS
FINITO	;ICI LES TABLEAU BUF_GAUCHE ET BUF_DROIT SONT CONSTITUêS
	;D6=NB DE PTS-1 DANS BUF_GAUCHE
	;D7=NB DE PTS-1 DANS BUF_DROIT

	LEA	BUF_GAUCHE,A0
MAKE_REMP_GAUCHE
	LEA	REMP_GAUCHE,A1
	MOVE.W	(A0)+,D0	;X1
	MOVE.W	(A0)+,D1	;Y1
	MOVE.W	(A0)+,D2	;X2
	MOVE.W	(A0)+,D3	;Y2
	BSR	CLIPPING_Y
	TST.W	D5
	BLT.S	.NEXT
	SUB.W	D1,D3	;HAUTEUR-1 DU SEGMENT
	BEQ.S	.NEXT

	ADD.W	D1,D1
	ADDA.W	D1,A1

	ADDQ.W	#1,D3
	SUB.W	D0,D2
	BNE.S	.PAS_VERTICALE
.VERTICALE	SUBQ.W	#1,D3
.PUT	MOVE.W	D0,(A1)+
	DBRA	D3,.PUT
	BRA.S	.NEXT
.PAS_VERTICALE	EXT.L	D2
	MOVEQ	#8,D4
	ASL.L	D4,D2
	DIVS.W	D3,D2
	EXT.L	D2
	ASL.L	#8,D2
	SUBQ.W	#2,D3
	EXT.L	D0
	MOVEQ	#16,D4
	MOVE.W	D0,(A1)+
	ASL.L	D4,D0
.MK_X	ADD.L	D2,D0
	MOVE.L	D0,D1
	SWAP	D1
	MOVE.W	D1,(A1)+
	DBRA	D3,.MK_X
.NEXT	DBRA	D6,MAKE_REMP_GAUCHE

	LEA	BUF_DROIT,A0
MAKE_REMP_DROIT	LEA	REMP_DROIT,A1
	MOVE.W	(A0)+,D0	;X1
	MOVE.W	(A0)+,D1	;Y1
	MOVE.W	(A0)+,D2	;X2
	MOVE.W	(A0)+,D3	;Y2
	BSR	CLIPPING_Y
	TST.W	D5
	BLT.S	.NEXT
	SUB.W	D3,D1	;HAUTEUR-1 DU SEGMENT
	BEQ.S	.NEXT

	ADD.W	D3,D3
	ADDA.W	D3,A1

	ADDQ.W	#1,D1
	SUB.W	D2,D0
	BNE.S	.PAS_VERTICALE
.VERTICALE	SUBQ.W	#1,D1
.PUT	MOVE.W	D2,(A1)+
	DBRA	D1,.PUT
	BRA.S	.NEXT
.PAS_VERTICALE	EXT.L	D0
	MOVEQ	#8,D4
	ASL.L	D4,D0
	DIVS.W	D1,D0
	EXT.L	D0
	ASL.L	#8,D0
	SUBQ.W	#2,D1
	MOVE.W	D2,(A1)+
	EXT.L	D2
	MOVEQ	#16,D4
	ASL.L	D4,D2
.MK_X	ADD.L	D0,D2
	MOVE.L	D2,D3
	SWAP	D3
	MOVE.W	D3,(A1)+
	DBRA	D1,.MK_X
.NEXT	DBRA	D7,MAKE_REMP_DROIT

*****

ADR_DEPART= *+2
	LEA	$12345678,A0
	MOVE.W	(A0)+,D7
	SUBQ.W	#1,D7
	MOVE.W	#-1000,D0	;MAXIMUM
	MOVE.W	#20000,D1	;MINIMUM
.TEST_MAX	CMP.W	2(A0),D0
	BGE.S	.FUCK
	MOVE.W	2(A0),D0
.FUCK	CMP.W	2(A0),D1
	BLE.S	.FUCK_2
	MOVE.W	2(A0),D1
.FUCK_2	ADDQ.W	#4,A0
	DBRA	D7,.TEST_MAX
	;D0 = Y MAXIMUM
	;D1 = Y MINIMUM
	CMPI.W	#200,D0
	BLT.S	.OK_Y_MAX
	MOVE.W	#199,D0
.OK_Y_MAX	TST.W	D1
	BGE.S	.OK_Y_MIN
	MOVEQ	#0,D1
.OK_Y_MIN
INIT	MOVE.W	D0,Y_MAX
	MOVE.W	D1,Y_MIN
	LEA	REMP_GAUCHE,A0
	LEA	REMP_DROIT,A1
	ADDQ.W	#1,D0
	ADD.W	D0,D0
	MOVE.W	#15,(A1,D0.W)
	MOVE.W	#25,(A0,D0.W)
	ADD.W	D1,D1
	ADDA.W	D1,A0
	ADDA.W	D1,A1
	MULU.W	#80,D1       ;D1=Y_MIN*160 (POUR ADD ECRAN)

	LEA	TABLE_ADR_COD+40,A6
	MOVE	#-1,D7
	MOVE.L	#BUF_SCREEN_TEST,D6
MOD_PLAN	NOP
	ADD.L	D1,D6	;...+Y_MIN*160
	SUBI.L	#160,D6
	MOVE.L	#TABLE_A2+640*4,D4
	MOVE.L	#160,D5
	LEA	TABLE_A4+640*4,A3
	MOVEQ	#0,D2

	ADD.L	D5,D6	1  PROCHAINE LIGNE:+160
	MOVE.L	D6,A4	1  A3=ADR ECRAN EN .W, WARNING!
	MOVE.L	A4,A5	1  A6=ECRAN TOO (LE A5 DE FULBERT)
	MOVE.L	D4,A2	1  D4=A2=TABLE_A2
	MOVE.W	(A1)+,D1	2  X2
	ADD.W	D1,D1	1  
	ADD.W	D1,D1	1
	MOVE.L	(A3,D1.W),D3	5
	ADD	D3,A5	2
	SWAP	D3	1
	MOVE.W	(A0)+,D1	2  X1
	ADD	D1,D1	1
	ADD	D1,D1	1
	ADD	D1,A2	2  A2=TABLE_A2+X1*4
	ADD	(A2)+,A4	3  OFFSET. A3=>1ER MOT
	SUB	(A2),D3	2  (A2)=X1*2-LE DêCALAGE*1320... RUSê, HEIN?   ;D'OU D3=X2*2-(X1*2-DêCALAGE)=(X2-X1)*2+DêCALAGE*1320, ZOU.
	MOVE.L	(A6,D3.W),A2
	JMP	(A2)

RETOUR_POLY	RTS

CLIPPING_Y	MOVEM.L	D4/D6/A6,-(SP)
	MOVEQ	#0,D5
	LEA	TABLE_Y,A6
	ADD.W	D1,D1
	ADD.W	D3,D3
	MOVEQ	#0,D4
	ADD.W	(A6,D1.W),D4
	ADD.W	(A6,D3.W),D4
	ASR.W	#1,D1
	ASR.W	#1,D3
	TST.W	D4
	BEQ	FIN_NORMALE
	CMPI.W	#-2,D4
	BEQ	RIEN_DU_TOUT
	CMPI.W	#4,D4
	BEQ	RIEN_DU_TOUT
	CMPI.W	#-1,D4
	BEQ	CLIP_HAUT
	CMPI.W	#2,D4
	BEQ	CLIP_BAS

CLIP_HAUT_BAS	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	MOVE.W	D2,D5
	SUB.W	D0,D5	;D5=X2-X1
	MULS.W	#200,D5	;D5=200*(X2-X1)
	DIVS.W	D4,D5
	DIVS.W	D4,D6
	ADD.W	D5,D6	;D6=X2 CLIPPê
	CMPI.W	#200,D1
	BGE.S	.C_EST_Y1
.C_EST_Y2	MOVE.W	D6,D2
	MOVE.W	#199,D3
	BRA.S	SUIT
.C_EST_Y1	MOVE.W	D6,D0
	MOVE.W	#199,D1

SUIT	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	DIVS.W	D4,D6
	;D6=X CLIPPê
	TST.W	D1
	BGE.S	.C_EST_Y2
.C_EST_Y1	MOVE.W	D6,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE
.C_EST_Y2	MOVE.W	D6,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE

CLIP_BAS	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	MOVE.W	D2,D5
	SUB.W	D0,D5	;D5=X2-X1
	MULS.W	#200,D5	;D5=200*(X2-X1)
	DIVS.W	D4,D5
	DIVS.W	D4,D6
	ADD.W	D5,D6	;D6=X2 CLIPPê
	CMPI.W	#200,D1
	BGE.S	.C_EST_Y1
.C_EST_Y2	MOVE.W	D6,D2
	MOVE.W	#199,D3
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE
.C_EST_Y1	MOVE.W	D6,D0
	MOVE.W	#199,D1
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE

CLIP_HAUT	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	DIVS.W	D4,D6
	;D6=X CLIPPê
	TST.W	D1
	BGE.S	.C_EST_Y2
.C_EST_Y1	MOVE.W	D6,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE
.C_EST_Y2	MOVE.W	D6,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE

RIEN_DU_TOUT	MOVE.W	#-1,D5
FIN_NORMALE	MOVEM.L	(SP)+,D4/D6/A6
	RTS

	DCB.W	700,-1
TABLE_Y	DCB.W	200,0
	DCB.W	700,2

LABY_INFO	INCBIN	LABY_6.LAB
FIN_LABY_INFO

	;0=ATTENDRE, 1=TOURNE A GAUCHE, 2=TOURNE A DROITE
	;LE NB SUIVANT LA COMMANDE REPRESENTE LE NB DE FRAME DURANT
	;LESQUELLES LA COMMANDE EST EXECUTEE.
ANIM_ANGLE	DC.W	0,12
	DC.W	2,16
	DC.W	0,7
	DC.W	1,16
	DC.W	0,23
	DC.W	1,16
	DC.W	0,8
	DC.W	1,16
	DC.W	0,8
	DC.W	0,200
	DC.W	$1234

	;0=ATTENDRE, 1=AVANCER, 2=RECULER
	;LE NB SUIVANT LA COMMANDE REPRESENTE LE NB DE FRAME DURANT
	;LESQUELLES LA COMMANDE EST EXECUTEE.
ANIM_DEPLAC	DC.W	1,12
	DC.W	0,13
	DC.W	1,10
	DC.W	0,13
	DC.W	1,26
	DC.W	0,13
	DC.W	1,11
	DC.W	0,13
	DC.W	1,11
	DC.W	0,200
	DC.W	$1234

	;D0=NOMBRE A AFFICHER
	;D1=No DE LA LIGNE D'AFFICHAGE
AFF_CHIFFRE	MOVEM.L	D0-A6,-(SP)

	LEA	TEXTO,A1
	SUBQ.W	#1,D1
	BLT.S	.OK
.MK_HIGH	CLR.B	(A1)+	;HAUTEUR
	DBRA	D1,.MK_HIGH
.OK	MOVE.B	#3,(A1)+
	MOVE.B	#7,(A1)+
;	MOVE.B	#'F',(A1)+
;	MOVE.B	#'r',(A1)+
;	MOVE.B	#'a',(A1)+
;	MOVE.B	#'m',(A1)+
;	MOVE.B	#'e',(A1)+
;	MOVE.B	#' ',(A1)+
	MOVEQ	#0,D2
.RECOM	SUBI.L	#100000,D0
	BLT.S	.FINAL
	ADDQ.W	#1,D2
	BRA.S	.RECOM
.FINAL	ADDI.L	#100000,D0
	ADDI.W	#48,D2
	MOVE.B	D2,(A1)+

	LEA	TABLE_DIV(PC),A0
	MOVE.W	#NB_DIV,D7
.CALC	MOVE.W	(A0)+,D1
	DIVS.W	D1,D0
	MOVE.W	D0,D2
	CLR.W	D0
	ADDI.W	#48,D2
	MOVE.B	D2,(A1)+
	SWAP	D0
	DBRA	D7,.CALC
	ADDI.W	#48,D0
	MOVE.B	D0,(A1)+

	MOVE.B	#-1,(A1)+
	LEA	TEXTO,A0
	BSR	PUT_TEXT
	MOVEM.L	(SP)+,D0-A6
	RTS

TEXTO	DC.B	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0

TABLE_DIV	DC.W	10000,1000,100,10
NB_DIV = ((*-TABLE_DIV)/2)-1

	INCLUDE	TEXTER2.S

COEFF_3D	INCBIN	COEFF.LAB

SINUS	INCBIN	SINUS.LAB
FIN_SINUS	DCB.W	100,0

*** Partie affichage
CHOICE	DC	1	;0=MOVE

POLY	DC.W	4
	DCB.W	4*2,0

	SECTION	BSS
NO	DS.W	1
SCREEN1	DS.L	1
SCREEN2	DS.L	1
	DS.B	256
BUFFER	DS.B	64000+1280*2
NB_VBL	DS.W	1
BUF_SCREEN_TEST	DS.B	32000+1280
SCREEN_ACTIF	DS.B	64000
TABLE_CORES_POLY
	DS.W	1000
;
NB_POINTS	DS.W	1
ADR_POINTS	DS.L	1
NB_POLY	DS.W	1
NEW_NB_POLY	DS.W	1
ADR_POLY	DS.L	1
;BSS RT POLY
TABLE_A4	DS.L	640*2+320
TABLE_A2	DS.L	640*2+320
BUF_EXAM	DS.W	2*100
BUF_GAUCHE	DS.W	4*50
BUF_DROIT	DS.W	4*50
REMP_GAUCHE	DS.W	250
REMP_DROIT	DS.W	250
TABLE_ADR_COD	DS.B	(1280+40)*16
BUF_COD_GEN	DS.B	39000
;
PT_ANIM_ANGLE	DS.L	1
PT_ANIM_DEPLAC	DS.L	1
FLAG_AVANCE	DS.B	1
FLAG_RECULE	DS.B	1
NB_FRAMES_DEPLAC
	DS.W	1
FLAG_GAUCHE	DS.B	1
FLAG_DROITE	DS.B	1
FLAG_DEB_LIG	DS.B	1
	DS.B	1
NB_FRAMES_TOURNE
	DS.W	1
;
TOTAL	DS.L	1
TOTAL_FILE	DS.L	1
ANGLE	DS.W	1
VECT_X	DS.W	1
VECT_Z	DS.W	1
TRANS_X	DS.W	1
TRANS_Z	DS.W	1
BUF_INC	DS.W	500
BUF_POINTS	DS.W	2*500
BUF_POLY	DS.W	5*500
	DS.B	100000
BUF_TRI_Z	DS.W	(1+NB_POLY_MAX_PAR_Z)*3000