	*** LA VERSION DE CE PACKER COMPRENDS :
	*** - LA FABRICATION D'UNE TABLE DE FREQUENCE
	*** - LE CLASSEMENT DE CES FREQUENCES PAR ORDRE DECROISSANT
	*** - LA FABRICATION DE L'ARBRE DESTINê A CODER LES LETTRES
	*** - LA FABRICATION D'UNE TABLE QUI CONTIENT LES CODES DE CHAQUE OCTET
	*** - LE COMPACTAGE DU CODE ORIGINAL
	*** - LA SAUVEGARDE DU FICHIER COMPACTê

	*** FORMAT D'UNE CASE NORMALE: - 1.L POUR L'OCTET (1.W A 0 ET 1.W POUR L'OCTET)
	***		 - 1.L POUR LA FREQUENCE
	***		 - 1.L A ZERO
	***		 - 1.L POUR L'ADRESSE DU NOEUD

	*** FORMAT D'UN NOEUD        : - 1.L POUR LE RESULTAT DE L'ADDITION (1.W A -1 ET 1.W POUR LE RESULTAT)
	***		 - 1.L POUR L'ADRESSE DE LA CASE OU DU NOEUD DE GAUCHE
	***		 - 1.L POUR L'ADRESSE DE LA CASE OU DU NOEUD DE DROITE
	***		 - 1.L POUR L'ADRESSE DU PROCHAIN NOEUD (A -1 POUR LE DERNIER)

	PEA	0.W 
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP
	MOVE.L	D0,SAUV_SP

	BSR	PLACE_FREQ
	BSR	ORDONNE
	BSR	MAKE_NOEUDS
	BSR	CODE_LETTRES
	BSR	COMPACTE
	BSR	SAUV

PLACE_FREQ	MOVEQ	#0,D0
	LEA	DATA_A_PACKER,A0
	LEA	BUF_ANNEX,A1
CONT_POZ	CMPA.L	#FIN_DATA,A0
	BEQ.S	FINITO	
	MOVE.B	(A0)+,D0
	LEA	BUF_ANNEX,A2
PLACE_FREQUENC	CMPA.L	A1,A2
	BEQ.S	FIN_1
	CMP.B	3(A2),D0
	BEQ.S	FIN_2
	ADDQ.W	#8,A2
	BRA.S	PLACE_FREQUENC
FIN_1	MOVE.B	D0,3(A1)
	MOVE.L	#1,4(A1)
	ADDQ.W	#8,A1
	BRA.S	CONT_POZ
FIN_2	ADDQ.L	#1,4(A2)
	BRA.S	CONT_POZ
FINITO	RTS

ORDONNE	MOVE.L	#BUF_ANNEX,D0
	MOVE.L	A1,D1
	SUB.L	D0,D1
	LSR	#3,D1
	MOVE.W	D1,NB_OCTETS
	SUBQ.W	#1,D1
	MOVE.W	D1,D7	;NOMBRE DE GROUPES DE 8 OCTETS MOINS 1
	LEA	BUF_FREQ,A2
PRENDS_TOUT	LEA	BUF_ANNEX,A0
	MOVEQ	#0,D0
PRENDRE_1	CMPA.L	A0,A1
	BEQ.S	PRISE_1
	MOVE.L	4(A0),D2
	CMP.L	D2,D0
	BGE.S	SAUT_FREQ
	MOVE.L	(A0),D1
	MOVE.L	4(A0),D0
SAUT_FREQ	ADDQ.W	#8,A0
	BRA.S	PRENDRE_1
PRISE_1	MOVE.L	D1,(A2)+
	MOVE.L	D0,(A2)+
	CLR.L	(A2)+
	CLR.L	(A2)+
	LEA	BUF_ANNEX,A3
CHERCH_ZERO	CMP.L	(A3),D1
	BEQ.S	FIND
	ADDQ.W	#8,A3
	BRA.S	CHERCH_ZERO
FIND	CLR.L	(A3)+
	CLR.L	(A3)+
	DBRA	D7,PRENDS_TOUT
	LEA	-16(A2),A2
	MOVE.L	A2,BOUT_TABLE
	RTS

MAKE_NOEUDS	LEA	BUF_NOEUDS,A6
UN_AUTRE_SVP	BSR	MAKE_TABLE
	BSR	CHERCHE_PETITE	;AU RETOUR,A4 ET A5 CONTIENDRONT LES ADRESSES
			;DES FREQUENCES OU NOEUDS POSSêDANT LES PLUS PETITES
			;VALEURS
	BSR	MAK_NOEUD
	BRA.S	UN_AUTRE_SVP
FINI_ARBRE	ADDQ.W	#4,SP
	LEA	-16(A6),A6
	MOVE.L	A6,DERNIER_NOEUD
	RTS


MAK_NOEUD	TST.W	(A4)	;TESTE SI LA CASE POINTêE EST NORMALE OU UN NOEUD
	BEQ	NORMALE
NOEUD	MOVEQ	#0,D0
	MOVE.W	2(A4),D0
	BRA.S	TEST_2
NORMALE	MOVE.L	4(A4),D0
TEST_2	TST.W	(A5)
	BEQ	NORMALE_2
NOEUD_2	MOVEQ	#0,D1
	MOVE.W	2(A5),D1
	BRA.S	CONSTRUCT
NORMALE_2	MOVE.L	4(A5),D1
CONSTRUCT	ADD.L	D0,D1
	MOVE.L	A6,12(A4)	;ON POSE L'ADRESSE DU NOEUD QUI...
	MOVE.L	A6,12(A5)	;...COMPORTERA LA SOMME DES 2 FRQUENCES DE CES 2 CASE
	MOVE.L	D1,(A6)
	MOVE.W	#-1,(A6)
	ADDQ.W	#4,A6

	LEA	BUF_VALORS,A0
	MOVEQ	#0,D6
	MOVE.L	A4,D0
CONT_SEARCH_1	CMP.L	4(A0),D0
	BEQ.S	CIBLê_1
	ADDQ.W	#8,A0
	ADDQ.L	#1,D6
	BRA.S	CONT_SEARCH_1
CIBLê_1	LEA	BUF_VALORS,A0
	MOVEQ	#0,D5
	MOVE.L	A5,D0
CONT_SEARCH_2	CMP.L	4(A0),D0
	BEQ.S	CIBLê_2
	ADDQ.W	#8,A0
	ADDQ.L	#1,D5
	BRA.S	CONT_SEARCH_2
CIBLê_2	CMP.L	D6,D5
	BLT.S	TOUT_EST_OK
	EXG.L	A4,A5
TOUT_EST_OK	MOVE.L	A4,(A6)+
	MOVE.L	A5,(A6)+
	CLR.L	(A6)+
	RTS	

MAKE_TABLE	MOVE.L	BOUT_TABLE,A0
	MOVE.L	A0,A1
	LEA	BUF_VALORS,A2
	MOVEQ	#0,D7
CHERCHE_FIN	TST.L	12(A0)	;ON TESTE SI LA BRANCHE S'ARRETE OU PAS
	BEQ.S	FIN_BRANCHE	;OUI-->FIN_BRANCHE
	MOVE.L	12(A0),A0
	BRA.S	CHERCHE_FIN
FIN_BRANCHE	LEA	BUF_VALORS,A3
PAS_CONVAINCU	CMPA.L	A2,A3
	BEQ.S	C_EST_BON
	CMP.L	4(A3),A0	;ON TESTE SI LA CASE N'EST PAS DEJA POINTêE
	BEQ.S	CONT_MAK_TABL
	ADDQ.W	#8,A3
	BRA.S	PAS_CONVAINCU
C_EST_BON	TST.W	(A0)	;ON TESTE SI LA CASE POINTêE EST NORMALE OU NOEUD
	BNE.S	CASE_NOEUD
CASE_NORMALE	MOVE.L	4(A0),(A2)+
	MOVE.L	A0,(A2)+
	ADDQ.W	#1,D7
	BRA.S	CONT_MAK_TABL
CASE_NOEUD	CLR.W	(A2)+
	MOVE.W	2(A0),(A2)+
	MOVE.L	A0,(A2)+
	ADDQ.W	#1,D7
CONT_MAK_TABL	LEA	-16(A1),A1
	CMPA.L	#BUF_FREQ-16,A1
	BEQ.S	FIN_MAK_TABL
	MOVE.L	A1,A0
	BRA.S	CHERCHE_FIN
FIN_MAK_TABL	CMPI.W	#1,D7
	BEQ	FINI_ARBRE
	RTS

CHERCHE_PETITE	LEA	BUF_VALORS,A0
	MOVE.W	#-1,D0
CONT_CHERCHE	CMPA.L	A2,A0
	BEQ.S	FINI_P1
	MOVE.L	(A0),D2
	CMP.L	D0,D2
	BGE.S	PAS_ATTENTION
	MOVE.L	(A0),D0
	MOVE.L	4(A0),D1
PAS_ATTENTION	ADDQ.W	#8,A0
	BRA.S	CONT_CHERCHE
FINI_P1	MOVE.L	D1,A4

	LEA	BUF_VALORS,A0
	MOVE.W	#-1,D0
CONT2CHERCHE	CMPA.L	A2,A0
	BEQ.S	FINI_P2
	MOVE.L	(A0),D2
	CMP.L	D0,D2
	BGE.S	PAS2ATTENTION
	CMP.L	4(A0),D1
	BEQ	PAS2ATTENTION
	MOVE.L	(A0),D0
	MOVE.L	4(A0),D3
PAS2ATTENTION	ADDQ.W	#8,A0
	BRA.S	CONT2CHERCHE
FINI_P2	MOVE.L	D3,A5
	RTS

CODE_LETTRES	MOVEQ	#0,D7
	MOVE.W	NB_OCTETS,D7	;NOMBRE D'OCTETS DIFFERENTS DANS D7
	MOVEQ	#0,D4	;NOMBRE DE CODE OBTENU ( 0 AU DEPART )
	LEA	TABLE_CODES,A6
NOUVEAU_CODE	MOVE.L	DERNIER_NOEUD,A0	;ADRESSE DU DERNIER NOEUD DANS A0
	MOVEQ	#0,D6	;D6 CONTIENDRA LE CODE DE L'OCTET CONCERNê
	MOVEQ	#0,D5	;D5 CONTIENDRA LE NOMBRE DE BITS DU CODE DE L'OCTET
CONTINUE_COD	TST.W	(A0)	;ON TESTE SI LA CASE POINTêE EST NORMALE OU NOEUD
	BEQ.S	OK_CODE	;SI ELLE EST NORMALE C.A.D QU'ON A LE CODE
	MOVE.L	4(A0),A1	;ON PREND L'ADRESSE DE GAUCHE ( ARBITRAIRE !! )
	CMPA.L	#0,A1
	BEQ.S	TAK_DROIT	;L'ADRESSE DE GAUCHE EST VIDE ( ON Y EST DEJA ALLê !! )
	MOVE.L	4(A0),A0	;ON SE DIRIGE VERS UNE NOUVELLE FEUILLE
	ADDQ.W	#1,D5	;UN BIT DE PLUS
	LSL	#1,D6	;UN 0 EN L'OCCURENCE
	BRA.S	CONTINUE_COD

TAK_DROIT	MOVE.L	8(A0),A0	;ON PREND L'ADRESSE DE DROITE
	ADDQ.W	#1,D5	;UN BIT DE PLUS
	LSL	#1,D6
	ORI.L	#1,D6	;A 1 ICI !!
	BRA.S	CONTINUE_COD

OK_CODE	MOVE.B	3(A0),(A6)+
	MOVE.B	D5,(A6)+	;LE NOMBRE DE BITS SIGNIFICATIFS
	MOVE.W	D6,(A6)+	;LE CODE
	ADDQ.W	#1,D4	;ON A UN CODE DE PLUS
	CMP.W	D4,D7	;ON REGARDE SI ON A TOUT LES CODES
	BEQ.S	FINI_CODES
	MOVE.L	12(A0),A1
	CMPA.L	4(A1),A0
	BEQ.S	EFF_GAUCHE
EFF_DROIT	CLR.L	8(A1)
	MOVE.L	12(A1),A1
	TST.L	4(A1)
	BEQ.S	EFF_DROIT
	CLR.L	4(A1)
	BRA.S	FINI_EFF
EFF_GAUCHE	CLR.L	4(A1)
FINI_EFF	BRA.S	NOUVEAU_CODE
FINI_CODES	RTS

COMPACTE	CLR.L	COUNT_2
	LEA	BUF_FREQ,A0
	MOVEQ	#0,D2
	MOVE.W	NB_OCTETS,D7
	SUBQ.W	#1,D7
CONT_COMPT	LEA	TABLE_CODES,A1
	MOVE.L	(A0),D6
RECHERCHE_TJRS	CMP.B	(A1),D6
	BNE.S	PAS_CA
	MOVE.L	4(A0),D0	;FREQUENCE DE L'OCTET DANS D0
	MOVEQ	#0,D1
	MOVE.B	1(A1),D1	;NOMBRE DE BITS DE LOCTET DANS D1
	MULU.W	D0,D1
	ADD.L	D1,D2
	LEA	16(A0),A0
	ADDQ.W	#4,A1
	DBRA	D7,CONT_COMPT
	BRA.S	FINI_COMPT
PAS_CA	ADDQ.W	#4,A1
	BRA.S	RECHERCHE_TJRS
FINI_COMPT	LEA	CODE_PACKE,A2
	LEA	DATA_A_PACKER,A0
	MOVE.W	#16,D3
CONT_COMPACT	CMPA.L	#FIN_DATA,A0
	BEQ.S	FINI_COMPACT
	MOVE.B	(A0)+,D0
	LEA	TABLE_CODES,A1
IL_ARRIVE	CMP.B	(A1),D0
	BEQ.S	LE_BON_CODE
	ADDQ.W	#4,A1
	BRA.S	IL_ARRIVE
LE_BON_CODE	MOVE.B	1(A1),D1	;NOMBRE DE BITS DANS D1
	MOVE.W	2(A1),D2	;CODE DANS D2
	CMP.W	D3,D1
	BGT.S	A_CHEVAL
	MOVE.W	D2,D4
	SUB.W	D1,D3	;NOMBRE DE BIT RESTANTS DANS D3
	LSL.W	D3,D4
	OR.W	D4,(A2)
	BRA.S	CONT_COMPACT
A_CHEVAL	MOVE.W	D2,D5	;ON RECOPIE LE CODE
	MOVE.W	D1,D6	;...ET LE NOMBRE DE BITS
	SUB.W	D3,D1
	LSR	D1,D2
	OR.W	D2,(A2)
	SUB.W	D3,D6
	MOVEQ	#16,D3	;IL RESTE A NOUVEAU 16 BITS
	ADDQ.W	#2,A2	;... SUR LE PROCHAIN MOT
	ADDQ.L	#2,COUNT_2
	SUB.W	D6,D3
	ADD.W	D6,D6
	LEA	MASQUE,A5
	MOVE.W	(A5,D6.W),D6
	AND.W	D6,D5
	LSL.W	D3,D5
	OR.W	D5,(A2)
	BRA.S	CONT_COMPACT
FINI_COMPACT	ADDQ.L	#2,COUNT_2
	RTS

SAUV	LEA	TABLE_CODES,A0
	MOVE.L	A0,A1
	MOVE.W	NB_OCTETS,D7
	ADD.W	D7,D7
	ADD.W	D7,D7
	ADDA.W	D7,A1
	SUB.L	A0,A1
	MOVE.L	A1,COUNT

	CLR.W	-(SP)
	PEA	F_NAME
	MOVE.W	#$3C,-(SP)
	TRAP	#1
	ADDQ.W	#8,SP
	MOVE.W	D0,HANDLE

	PEA	HEADER	SAUVE LE HEADER
	MOVE.L	#8,-(SP)
	MOVE.W	HANDLE,-(SP)
	MOVE.W	#$40,-(SP)
	TRAP	#1
	LEA	12(SP),SP

	PEA	NB_OCTETS	SAUVE UNE INFO
	MOVE.L	#2,-(SP)
	MOVE.W	HANDLE,-(SP)
	MOVE.W	#$40,-(SP)
	TRAP	#1
	LEA	12(SP),SP

	PEA	TABLE_CODES	SAUVE LA TABLE QUI CONTIENT LES CODES
	MOVE.L	COUNT,-(SP)
	MOVE.W	HANDLE,-(SP)
	MOVE.W	#$40,-(SP)
	TRAP	#1
	LEA	12(SP),SP

	PEA	CODE_PACKE	SAUVE LE BUFFER QUI CONTIENT LES DONNêES PACKêES
	MOVE.L	COUNT_2,-(SP)
	MOVE.W	HANDLE,-(SP)
	MOVE.W	#$40,-(SP)
	TRAP	#1
	LEA	12(SP),SP

	MOVE.W	HANDLE,-(SP)
	MOVE.W	#$3E,-(SP)
	TRAP	#1
	ADDQ.W	#4,SP

	RTS	

	SECTION	DATA
HEADER	DC.B	"Huffman1"

F_NAME	DC.B	"MUS1COMP.Huf"

MASQUE	DC.W	%0000000000000000
	DC.W	%0000000000000001
	DC.W	%0000000000000011
	DC.W	%0000000000000111
	DC.W	%0000000000001111
	DC.W	%0000000000011111
	DC.W	%0000000000111111
	DC.W	%0000000001111111
	DC.W	%0000000011111111
	DC.W	%0000000111111111
	DC.W	%0000001111111111
	DC.W	%0000011111111111
	DC.W	%0000111111111111
	DC.W	%0001111111111111
	DC.W	%0011111111111111
	DC.W	%0111111111111111
	DC.W	%1111111111111111

DATA_A_PACKER	INCBIN	MUSIX.MUS
	;DC.B	"ILS ONT DES CHAPEAUX RONDS, VIVE LES BRETONS!"
	;DC.B	"LA FAIM DANS LE MONDE EST UN GRAVE ET PREOCCUPANT PROBLEME."
FIN_DATA	DC.B	0
	EVEN
	SECTION	BSS
SAUV_SP	DS.L	1
COUNT	DS.L	1
COUNT_2	DS.L	1
HANDLE	DS.W	1
BOUT_TABLE	DS.L	1
DERNIER_NOEUD	DS.L	1
NB_OCTETS	DS.W	1
BUF_ANNEX	DS.L	2*256
BUF_FREQ	DS.L	4*256
BUF_NOEUDS	DS.L	4*255
BUF_VALORS	DS.L	2*256
TABLE_CODES	DS.B	4*256
CODE_PACKE	DS.L	10000