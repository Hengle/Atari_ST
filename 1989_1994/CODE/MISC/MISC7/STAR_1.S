NB_STARS = 280
STAR_DEP = 0
; COOL! LES MULTIPLICATIONS MARCHENT: |++| |--| |+-| ET 0 AVEC + OU - !
; TEMPS : 12 NOPS PAR MULTIPLICATION, SI TOUT VA BIEN !
; LES NBS DOIVENT ETRE PREMULTIPLIES PAR 2 : OK
; LA TABLE EXPO DOIT CONTENIR DES VALEURS DIVISEES PAR 256 (ET *2!)
; LA TABLE LN DOIT ETRE PREMULTIPLIEE PAR 2 : OK
; LES COEFF 3D SONT PREMULTIPLIES PAR 256 ( PAS PAR 32768! ) : OK
; LES COEFF 3D SONT REMPLACES PAR LEUR LOG :  OK
MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR.W	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE.W	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP

	BSR	PREP_ECR
	BSR	MET_EN_PLACE
	MOVE.W	#$777,$FFFF8242.W

	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVE.L	#VBLR,$70.W
	MOVE.W	#$2300,SR

IT_VBL	BSR	VSYNC
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.PAS_TAB
	ST	$FFFF8240.W
.PAS_TAB	;REPT	300
	BSR	GEST_STARS
	;ENDR
	;ILLEGAL
	SF	$FFFF8240.W
	;BSR	SWAPEC
	BRA	IT_VBL

GEST_STARS	BSR	EFF_STARS
	MOVE.W	PT_TETA,D0
	LEA	SIN_COS,A0
	ADDA.W	D0,A0
	MOVE.W	(A0)+,D5	;SINUS
	MOVE.W	(A0)+,D4	;COSINUS
	ADDQ.W	#4,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,PT_TETA

	MOVE.W	PT_X,D0
	MOVE.W	PT_X+2,D1
	ADD.W	D0,D1
	MOVE.W	D1,VAL_1
	MOVE.W	PT_Y,D0
	MOVE.W	PT_Y+2,D1
	ADD.W	D0,D1
	MOVE.W	D1,VAL_2
	MOVE.W	PT_Z,D0
	MOVE.W	PT_Z+2,D1
	ADD.W	D0,D1
	MOVE.W	D1,VAL_3

	MOVE.L	SCREEN2,A0
	MOVE.L	ADR_TABLE_COOR,A1
	LEA	STAR_DEP*8(A1),A1
	LEA	TABLE_LOG-2,A2
	LEA	LES_3_TABLES,A3
	LEA	COEFF_3D,A4
	LEA	CORES_X,A6

	ADD.W	D4,D4
	ADD.W	D5,D5
	MOVE.W	(A2,D4.W),D4
	MOVE.W	(A2,D5.W),D5

	MOVE.W	#NB_STARS-1,D7
.REPEAT	;D6 EST PAS LIBRE, BIENTOT D7 LIBRE!
VAL_1 = *+2
	LEA	BUF_LOOP(PC),A5
	MOVE.W	(A1)+,D0	;X*2
	MOVE.W	(A5,D0.W),D0	;LOG DU X 3D CLIPPE
VAL_2 = *+2
	LEA	BUF_LOOP(PC),A5
	MOVE.W	(A1)+,D1	;Y*2
	MOVE.W	(A5,D1.W),D1	;LOG DU Y 3D CLIPPE
VAL_3 = *+2
	LEA	BUF_LOOP(PC),A5
	MOVE.W	(A1)+,D2	;Z*2
	MOVE.W	(A5,D2.W),D2	;LOG DU Z 3D CLIPPE

	;ROTATION Z
	MOVE.W	D0,D6
	MOVE.W	D1,D3
	ADD.W	D5,D3
	ADD.W	D4,D0
	MOVE.W	(A3,D0.W),D0	;X*COS T
	SUB.W	(A3,D3.W),D0	;X*COS T-Y*SIN T=X'*2
	ADD.W	D4,D1
	MOVE.W	(A3,D1.W),D1	;Y*COS T
	ADD.W	D5,D6
	ADD.W	(A3,D6.W),D1	;X*SIN T+Y*COS T=Y'*2
	;22 NOPS !
	;ROTATION X
	MOVE.W	(A2,D1.W),D1	;LOG Y
	MOVE.W	D1,D6
	MOVE.W	D2,D3
	ADD.W	D4,D1
	MOVE.W	(A3,D1.W),D1	;Y*COS T
	ADD.W	D5,D3
	SUB.W	(A3,D3.W),D1	;Y*COS T-Z*SIN T=Y'*2
	ADD.W	D4,D2
	MOVE.W	(A3,D2.W),D2	;Z*COS T
	ADD.W	D5,D6
	ADD.W	(A3,D6.W),D2	;Y*SIN T+Z*COS T=Z'*2
	;26 NOPS!
	;ROTATION Y
	;PROJECTION
	MOVE.W	(A2,D0.W),D0	;LOG DE X
	MOVE.W	(A4,D2.W),D2	;D2:LOG DU COEFF 3D
	ADD.W	D2,D0	;+LOG DU COEFF
	MOVE.W	(A3,D0.W),D0	;X*COEFF*2=EXP(D0)
	ADD.W	(A2,D1.W),D2	;LOG DE Y
	MOVE.W	(A3,D2.W),D1	;Y*COEFF*2
	;AFFICHAGE
	ADD.W	D0,D0	;X*4
	MOVE.W	2(A6,D0.W),D2	;OFFSET ECRAN
	LEA	CORES_Y(PC),A5
	ADD.W	(A5,D1.W),D2
	MOVE.W	(A6,D0.W),D0	;MOTIF
	OR.W	D0,(A0,D2.W)
	MOVE.W	D2,(A1)+	;OFFSET POUR L'EFFACAGE
	DBRA	D7,.REPEAT	;122 NOPS PAR ETOILES !!!

	MOVE.W	PT_X+2,D0
	ADDI.W	#6,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,PT_X+2

	MOVE.W	PT_Y+2,D0
	ADDI.W	#6,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,PT_Y+2

	MOVE.W	PT_Z+2,D0
	ADDI.W	#-20,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,PT_Z+2

	LEA	ADR_TABLE_COOR,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0),-(A0)
	MOVE.L	D0,4(A0)

	BSR	SWAPEC
	RTS

EFF_STARS	MOVE.L	ADR_TABLE_COOR,A0
	LEA	STAR_DEP*8(A0),A0
	MOVE.L	SCREEN2,A1
	MOVEQ	#0,D0
	ADDQ.W	#6,A0
	REPT	NB_STARS
	MOVE.W	(A0),D1	;2
	MOVE.W	D0,(A1,D1.W)	;6
	ADDQ.W	#8,A0	;1
	ENDR
	RTS

DEB_Y	DS.W	400
CORES_Y	DS.W	400

VSYNC	CMPI.W	#1,NB_VBL
	BLT.S	VSYNC
	CLR.W	NB_VBL
	RTS

VBLR	ADDQ.W	#1,NB_VBL
	RTE

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

PREP_ECR	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000+160*8,D0
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

MET_EN_PLACE	LEA	LES_3_TABLES,A0
	MOVEQ	#0,D0
	MOVEQ	#2,D6
.FINI_RECOP	LEA	TABLE_EXP,A1
	MOVE.W	#(LONG_EXP/4)-1,D7
.RECOP_TABLE	MOVE.L	(A1)+,D0
	ASR.L	#8,D0	;/256
	ADD.W	D0,D0	;*2
ADR_CHG_1 = *
	NOP
	MOVE.W	D0,(A0)+
	DBRA	D7,.RECOP_TABLE
	EORI.W	#$A31,ADR_CHG_1	;ASTUCE:NOP=NEG.W D0
	DBRA	D6,.FINI_RECOP

	LEA	TABLE_LOG,A0
	LEA	-2(A0),A1
	MOVE.W	#399,D7
.RECOP_LOG	MOVE.W	(A0),D0
	MOVE.W	D0,D1
	ADDI.W	#LONG_EXP/4,D1
	ADD.W	D0,D0
	ADD.W	D1,D1
	MOVE.W	D1,-(A1)
	MOVE.W	D0,(A0)+
	DBRA	D7,.RECOP_LOG

	LEA	VIDE,A0
	MOVE.W	#3*(LONG_EXP/2)-1,D7
.EFFAC	CLR.B	(A0)+
	DBRA	D7,.EFFAC

	LEA	COEFF_3D,A0
	LEA	TABLE_LOG-2,A1
	MOVE.W	#599,D7
.REPEAT_COEFF	MOVE.W	(A0),D0
	ADD.W	D0,D0
	MOVE.W	(A1,D0.W),D0
	MOVE.W	D0,(A0)+
	DBRA	D7,.REPEAT_COEFF

	LEA	DEB_CORES_X,A0
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D3
	BSR	REMP_CO_X
	MOVE.W	#$8000,D0
	MOVEQ	#0,D1
	MOVEQ	#8,D3
	BSR	REMP_CO_X
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D3
	BSR	REMP_CO_X

	LEA	DEB_Y,A0
	MOVEQ	#-101,D0	;Y DE DEPART
	MOVEQ	#0,D1	;INCREMENT
	BSR	REMP_CO_Y2
	MOVEQ	#-100,D0	;Y DE DEPART
	MOVEQ	#1,D1	;INCREMENT
	BSR	REMP_CO_Y
	MOVEQ	#-101,D0	;Y DE DEPART
	MOVEQ	#0,D1	;INCREMENT
	BSR	REMP_CO_Y2

	MOVEQ	#0,D0
	LEA	VAL_1,A0
	LEA	BUF_LOOP,A1
	SUB.L	A0,A1
	MOVE.W	A1,PT_X
	MOVE.W	#1022,PT_X+2
	LEA	VAL_2,A0
	LEA	BUF_LOOP,A1
	SUB.L	A0,A1
	MOVE.W	A1,PT_Y
	MOVE.W	#1022,PT_Y+2
	LEA	VAL_3,A0
	LEA	BUF_LOOP,A1
	SUB.L	A0,A1
	MOVE.W	A1,PT_Z
	MOVE.W	#1022,PT_Z+2

	LEA	COOR_STARS,A0
	LEA	TABLE_COOR_2,A1
	LEA	ADR_TABLE_COOR,A2
	MOVE.L	A0,(A2)+
	MOVE.L	A1,(A2)
	MOVE.W	#399,D7
.RECOM_1	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	DBRA	D7,.RECOM_1

	MOVE.W	#0,PT_TETA

	LEA	BUF_LOOP,A0
	LEA	TABLE_LOG-2,A1
	MOVE.W	#1023,D7
.RECOP_BETE	MOVE.W	(A0),D0
	MOVE.W	(A1,D0.W),(A0)+
	DBRA	D7,.RECOP_BETE
	RTS

REMP_CO_Y	MOVE.W	#199,D7
.RANG_1	MOVE.W	D0,D2
	ADDI.W	#100,D2
	MULS.W	#160,D2
	MOVE.W	D2,(A0)+
	ADD.W	D1,D0
	DBRA	D7,.RANG_1
	RTS

REMP_CO_Y2	MOVE.W	#299,D7
.RANG_1	MOVE.W	D0,D2
	ADDI.W	#100,D2
	MULS.W	#160,D2
	MOVE.W	D2,(A0)+
	ADD.W	D1,D0
	DBRA	D7,.RANG_1
	RTS

              ;D0=MOTIF DE DEPART,D1=OFFSET DE DEPART,D3=INCREMENT D'OFFSET
REMP_CO_X	MOVEQ	#19,D6
.RANG_2	MOVE.W	D0,D2
	MOVEQ	#15,D7
.RANG_1	MOVE.W	D2,(A0)+	;MOTIF
	MOVE.W	D1,(A0)+	;OFFSET
	LSR.W	#1,D2
	DBRA	D7,.RANG_1
	ADD.W	D3,D1	;OFFSET+8
	DBRA	D6,.RANG_2
	RTS

N	SET	-255
BUF_LOOP	REPT	512
	DC.W	N*2
N	SET	N+1
	ENDR
N	SET	-255
	REPT	512
	DC.W	N*2
N	SET	N+1
	ENDR

SIN_COS	INCBIN	SIN_COS.DAT

COOR_STARS	INCBIN	STARCOR.STR

TABLE_EXP	INCBIN	TABLEEXP.DAT
LONG_EXP = *-TABLE_EXP

	DCB.W	1000,3*(LONG_EXP/2)
COEFF_3D	INCBIN	COEFF128.3D

	DCB.W	2500,3*(LONG_EXP/2)
	DC.W	3*(LONG_EXP/2)
TABLE_LOG	INCBIN	TABLELOG.DAT
	DCB.W	300,0

	SECTION	BSS
PT_TETA	DS.W	1
ADR_TABLE_COOR	DS.L	2
TABLE_COOR_2	DS.W	4*400
PT_X	DS.W	2
PT_Y	DS.W	2
PT_Z	DS.W	2
NB_VBL	DS.W	1
SCREEN1	DS.L	1
SCREEN2	DS.L	1
DEB_CORES_X	DS.W	960
CORES_X	DS.W	960
	DS.B	256+160
BUFFER	DS.B	64000+1280
LES_3_TABLES	DS.B	(LONG_EXP/2)*3
VIDE	DS.B	(LONG_EXP/2)*3    ;POUR LA MULTIPLICATION PAR 0