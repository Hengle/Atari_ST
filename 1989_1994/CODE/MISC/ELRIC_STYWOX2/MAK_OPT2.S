	;ARNAUD : 39-91-94-39

	;FABRICATION D'UN .OPT EN VUE DE GENERATION DE CODE.
	;CETTE VERSION DE CODE GêNêRêE EST LA PLUS AVANCêE ET
	;LA PLUS COMPLäTE ∂ CE JOUR : TOUTES LES OPTIMISATIONS
	;POSSIBLES SONT PRISES EN COMPTE.
	;CETTE VERSION EST 4 PLANS.
	;(c)1992 BY F.Boussaton
	;V 1.6
	;TAB=15

	;CETTE VERSION COMPREND : - UNE RECHERCHE DES OPT DES ANDS
	;	           - UNE RECHERCHE DES OPT DES ORS PUIS DES MOVES
	;	           - LES SEPARATIONS EN 1,2,4,8 POUR LE SPRITE SONT ACTIVES
	;	           - UN CALCUL DE GAIN DE TEMPS EST EFFECTUE
	;	           - UNE SAUVEGARDE DU .OPT OPTIMUM EST EFFECTUêE
	;                       - UNE TABLE POUR CHOISIR LES SPRITES

	;RESTE ∂ FAIRE : - LE NB DE PLANS SELECTIONNABLE
	;                - LE MASQUAGE SUR LE NB DE PLANS DêSIRêS

DEBUT
	PEA	0.W
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP
	MOVE.L	D0,SAUV_SP

	CLR.W	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE.W	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP

	BSR	PREP_ECR

	MOVE.L	#FIC_OPT,PT_OPT
	MOVE.L	#ANIM_A_FAIRE,PT_ANIM

	MOVEQ	#5,D7
REPEAT_SPR	MOVE.W	D7,NB_SPR

	MOVE.L	PT_ANIM,A6
	MOVE.W	(A6)+,D3	;X DU SPRITE
	ANDI.W	#15,D3	;DECALAGE A EFFECTUER (0-->15)
	MOVE.W	(A6)+,D1	;No DU SPRITE DANS LA BANQUE
	MOVE.L	A6,PT_ANIM
	MULU.W	#12,D1
	LEA	INF+4,A0
	ADDA.W	D1,A0	;A0=ADRESS DE L'INFO DU SPRITE
	LEA	SPR,A1
	ADDA.L	(A0)+,A1
	MOVE.W	(A0)+,D0	;LONGUEUR-1
	MOVE.W	(A0)+,D1	;HAUTEUR-1
	ADDQ.W	#4,A0
	ANDI.W	#$FFF0,D0
	LSR	#4,D0
	MOVE.L	SCREEN1,A2
	MOVE.L	SCREEN2,A3
	MOVE.W	D0,LONG
	ADDQ.W	#1,LONG
	MOVE.W	D1,HAUT_1
	ADDQ.W	#1,HAUT_1	;VRAIE HAUTEUR
	MOVE.W	D1,D7
	ADDQ.W	#1,D7
	MOVEQ	#0,D6
	BTST	#0,D7
	BEQ.S	.PAIR
	MOVEQ	#1,D6
.PAIR	LSR	#1,D7
	ADD.W	D6,D7
	MOVE.W	D7,HAUT_2
	MOVEQ	#0,D6
	BTST	#0,D7
	BEQ.S	.PAIR_2
	MOVEQ	#1,D6
.PAIR_2	LSR	#1,D7
	ADD.W	D6,D7
	MOVE.W	D7,HAUT_3
	MOVEQ	#0,D6
	BTST	#0,D7
	BEQ.S	.PAIR_3
	MOVEQ	#1,D6
.PAIR_3	LSR	#1,D7
	ADD.W	D6,D7
	MOVE.W	D7,HAUT_4

	MOVE.W	#160,D5
	MOVE.W	LONG,D7
	MOVE.W	D7,AUTO_MODIF+2
	ADDQ.W	#1,D7
	LSL	#3,D7
	SUB.W	D7,D5
	MOVE.W	D5,OFFSET_FIN_LIG
	MOVE.W	D3,AFF_X+2
	
	MOVE.W	LONG,D0
	MOVE.W	HAUT_1,D1
	SUBQ.W	#1,D1
	MOVEM.W	D0-D1,-(SP)
	ADD.W	D3,D3
	ADD.W	D3,D3	;DEC*4
	LEA	TABLE_MSK,A4
	MOVE.L	(A4,D3.W),D4
AFF_Y	MOVE.W	D1,-(SP)
AUTO_MODIF	MOVE.W	#$1234,D7
	SUBQ.W	#1,D7
	MOVEQ	#0,D5
	MOVEQ	#0,D6
AFF_X	MOVE.W	#$1234,D3
	MOVE.L	(A1)+,D0	;PLAN 1&2
	MOVE.L	(A1)+,D1	;PLAN 3&4
	ROR.L	D3,D0
	ROR.L	D3,D1
	MOVE.L	D0,D2
	MOVE.L	D1,D3
	AND.L	D4,D2	;BITS A CONSERVER
	AND.L	D4,D3
	EOR.L	D2,D0	;PARTIE A AFFICHER
	EOR.L	D3,D1
	SWAP	D2
	SWAP	D3
	OR.L	D5,D0
	OR.L	D6,D1
	MOVE.L	D0,(A2)+
	MOVE.L	D1,(A2)+
	MOVE.L	D2,D5
	MOVE.L	D3,D6
	OR.L	D0,D1
	MOVE.L	D1,D0
	SWAP	D0
	OR.L	D1,D0
	NOT.L	D0
	MOVE.L	D0,(A3)+
	MOVE.L	D0,(A3)+
	DBRA	D7,AFF_X
	MOVE.L	D5,(A2)+
	MOVE.L	D6,(A2)+
	OR.L	D5,D6
	MOVE.L	D6,D5
	SWAP	D5
	OR.L	D6,D5
	NOT.L	D5
	MOVE.L	D5,(A3)+
	MOVE.L	D5,(A3)+
	ADDA.W	OFFSET_FIN_LIG,A2
	ADDA.W	OFFSET_FIN_LIG,A3
	MOVE.W	(SP)+,D1
	DBRA	D1,AFF_Y

	MOVEM.W	(SP)+,D0-D1

CACA	BSR	SWAPEC

	MOVE.L	SCREEN1,A2
	MOVE.W	HAUT_1,D7
	LEA	BUF_RANGM,A6
	LEA	BUF_ANNEXM,A5
	BSR	MAK_ANNEX_M
	MOVE.W	NB_ANDS,NB_ANDS_FINAL
	MOVE.L	SCREEN1,A2
	MOVE.W	HAUT_2,D7
	LEA	BUF_RANGM2,A6
	LEA	BUF_ANNEXM2,A5
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_2,D7
	BSR	MAK_ANNEX_M
	MOVE.L	SCREEN1,A2
	MOVE.W	HAUT_3,D7
	LEA	BUF_RANGM3,A6
	LEA	BUF_ANNEXM3,A5
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_3,D7
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_3,D7
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_3,D7
	BSR	MAK_ANNEX_M

	MOVE.L	SCREEN1,A2
	MOVE.W	HAUT_4,D7
	LEA	BUF_RANGM4,A6
	LEA	BUF_ANNEXM4,A5
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX_M
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX_M

	BSR	SWAPEC

;X MOVE POUR CHARGER,X POUR DECHARGER,MOVEM POUR CHARGER ET DECHARGER
;96,80,88:4 REGISTRES
;120,100,104:5 REGISTRES
;144,120,120:6 REGISTRES (OK) (MOINS DE MEMOIRE)
;168,140,136:7 REGISTRES (OK) (MOINS DE MEMOIRE ET MOINS DE TEMPS MACHINE)

	MOVE.L	SCREEN1,A2
	MOVE.L	SCREEN2,A4
	MOVE.W	HAUT_1,D7
	LEA	BUF_RANG,A6
	LEA	BUF_ANNEX,A5
	LEA	BUF_ANNEXV,A3
	MOVE.L	A3,BUF_MOVE
	MOVE.L	A3,PT_BUF_MOVE
	MOVE.L	#BUF_RANGV,PT_BUF_RANG
	BSR	MAK_ANNEX
	MOVE.L	SCREEN1,A2
	MOVE.L	SCREEN2,A4
	MOVE.W	HAUT_2,D7
	LEA	BUF_RANG2,A6
	LEA	BUF_ANNEX2,A5
	LEA	BUF_ANNEXV2,A3
	MOVE.L	A3,BUF_MOVE
	MOVE.L	A3,PT_BUF_MOVE
	MOVE.L	#BUF_RANGV2,PT_BUF_RANG
	BSR	MAK_ANNEX
	MOVE.W	HAUT_2,D7
	BSR	MAK_ANNEX
	MOVE.L	SCREEN1,A2
	MOVE.L	SCREEN2,A4
	MOVE.W	HAUT_3,D7
	LEA	BUF_RANG3,A6
	LEA	BUF_ANNEX3,A5
	LEA	BUF_ANNEXV3,A3
	MOVE.L	A3,BUF_MOVE
	MOVE.L	A3,PT_BUF_MOVE
	MOVE.L	#BUF_RANGV3,PT_BUF_RANG
	BSR	MAK_ANNEX
	MOVE.W	HAUT_3,D7
	BSR	MAK_ANNEX
	MOVE.W	HAUT_3,D7
	BSR	MAK_ANNEX
	MOVE.W	HAUT_3,D7
	BSR	MAK_ANNEX
	MOVE.L	SCREEN1,A2
	MOVE.L	SCREEN2,A4
	MOVE.W	HAUT_4,D7
	LEA	BUF_RANG4,A6
	LEA	BUF_ANNEX4,A5
	LEA	BUF_ANNEXV4,A3
	MOVE.L	A3,BUF_MOVE
	MOVE.L	A3,PT_BUF_MOVE
	MOVE.L	#BUF_RANGV4,PT_BUF_RANG
	BSR	MAK_ANNEX
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX
	MOVE.W	HAUT_4,D7
	BSR	MAK_ANNEX

	LEA	BUF_RANGM,A0
	LEA	BUF_RANGM2,A1
	LEA	BUF_RANGM3,A2
	LEA	BUF_RANGM4,A3
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#7,D7
RECOM_1	ADD.W	4(A0),D0
	ADDQ.W	#6,A0
	DBRA	D7,RECOM_1
	MOVEQ	#15,D7
RECOM_2	ADD.W	4(A1),D1
	ADDQ.W	#6,A1
	DBRA	D7,RECOM_2
	MOVEQ	#31,D7
RECOM_3	ADD.W	4(A2),D2
	ADDQ.W	#6,A2
	DBRA	D7,RECOM_3
	MOVEQ	#63,D7
RECOM_4	ADD.W	4(A3),D3
	ADDQ.W	#6,A3
	DBRA	D7,RECOM_4
	MOVE.W	NB_ANDS_FINAL,D4
	MOVE.W	D4,D5
	MOVE.W	D4,D6
	MOVE.W	D4,D7
	SUB.W	D0,D4
	SUB.W	D1,D5
	SUB.W	D2,D6
	SUB.W	D3,D7
	MULU.W	#12,D0
	MULU.W	#12,D1
	MULU.W	#12,D2
	MULU.W	#12,D3
	LSL	#4,D4
	LSL	#4,D5
	LSL	#4,D6
	LSL	#4,D7
	ADD.W	D4,D0
	ADD.W	D5,D1
	ADD.W	D6,D2
	ADD.W	D7,D3
	SUBI.W	#19,D0	;TEMPS MACHINE DU MASQUAGE
	SUBI.W	#38,D1	;DU SPRITE ET DU DECALAGE CONSIDERE
	SUBI.W	#76,D2	;D0=1 SEPARATION,D1=2 SEPARATIONS
	SUBI.W	#152,D3	;D2=4 SEPARATIONS,D3=8 SEPARATIONS
	CMP.W	D0,D1
	BLT.S	_2_INF_1
	CMP.W	D0,D2
	BLT.S	_3_INF_2
	CMP.W	D0,D3
	BLT.S	_4_INF
	MOVE.W	D0,D4
	MOVEQ	#1,D5
	LEA	BUF_RANGM,A5
	BRA.S	_FIND_LOWER
_2_INF_1	CMP.W	D1,D2
	BLT.S	_3_INF_2
	CMP.W	D1,D3
	BLT.S	_4_INF
	MOVE.W	D1,D4
	MOVEQ	#2,D5
	LEA	BUF_RANGM2,A5
	BRA.S	_FIND_LOWER
_3_INF_2	CMP.W	D2,D3
	BLT.S	_4_INF
	MOVE.W	D2,D4
	MOVEQ	#4,D5
	LEA	BUF_RANGM3,A5
	BRA.S	_FIND_LOWER
_4_INF	MOVE.W	D3,D4
	MOVEQ	#8,D5
	LEA	BUF_RANGM4,A5

_FIND_LOWER	MOVE.L	PT_OPT,A6
	MOVE.W	D5,(A6)+
	LSL	#3,D5
	SUBQ.W	#1,D5
RECOP_OPTS	MOVE.L	(A5),(A6)+
	ADDQ.W	#6,A5
	DBRA	D5,RECOP_OPTS
	MOVE.L	A6,PT_OPT

	MOVE.L	SCREEN1,A0	;SPRITE
	MOVE.L	SCREEN2,A1	;MASQUE
	MOVEQ	#0,D0	;D0=TEMPS MACHINE EN NOPS DES ORS
	MOVE.W	HAUT_1,D6
	SUBQ.W	#1,D6
.TEST_LONG_Y	MOVE.W	LONG,D7
	ADD.W	D7,D7
	ADDQ.W	#1,D7	;2n-1
.TEST_LONG_X	TST.L	(A1)
	BEQ.S	.GO_MOVE
	CMPI.L	#-1,(A1)
	BEQ.S	.GO_RIEN_A_AFFICHER
	TST.L	(A0)
	BEQ.S	.OR_ZERO
	TST.W	(A0)
	BEQ.S	.OR_WORD
	TST.W	2(A0)
	BEQ.S	.OR_WORD
.OR_LONG	ADDQ.W	#8,D0	;ORI.L #$Imm,d(A0) = 8 NOPS
	BRA.S	.FIN_LONG
.OR_WORD	ADDQ.W	#6,D0	;ORI.W #$Imm,d(A0) = 6 NOPS
;	BRA.S	.FIN_LONG
.OR_ZERO
.GO_MOVE
.GO_RIEN_A_AFFICHER
.FIN_LONG	ADDQ.W	#4,A0
	ADDQ.W	#4,A1
	DBRA	D7,.TEST_LONG_X
	ADDA.W	OFFSET_FIN_LIG,A0
	ADDA.W	OFFSET_FIN_LIG,A1
	DBRA	D6,.TEST_LONG_Y
	;ICI D0 EST LE TEMPS MACHINE DES ORI

	LEA	RANG_TIMES,A5
	MOVE.L	D0,(A5)+

	LEA	BUF_RANG,A0
	MOVE.W	HAUT_1,D2
	MOVEQ	#0,D3	;1 SEPARATIONS
	MOVE.L	D0,-(SP)	;ON SAUVE LE TEMPS MACHINE INITIAL
	BSR	FIND_CPU
	MOVE.L	D0,(A5)
	ADD.L	#19,(A5)+
	MOVE.L	(SP)+,D0
	LEA	BUF_RANG2,A0
	MOVE.W	HAUT_2,D2
	MOVEQ	#1,D3	;2 SEPARATIONS
	MOVE.L	D0,-(SP)	;ON SAUVE LE TEMPS MACHINE INITIAL
	BSR	FIND_CPU
	MOVE.L	D0,(A5)
	ADD.L	#19*2,(A5)+
	MOVE.L	(SP)+,D0
	LEA	BUF_RANG3,A0
	MOVE.W	HAUT_3,D2
	MOVEQ	#3,D3	;4 SEPARATIONS
	MOVE.L	D0,-(SP)	;ON SAUVE LE TEMPS MACHINE INITIAL
	BSR	FIND_CPU
	MOVE.L	D0,(A5)
	ADD.L	#19*4,(A5)+
	MOVE.L	(SP)+,D0
	LEA	BUF_RANG4,A0
	MOVE.W	HAUT_4,D2
	MOVEQ	#7,D3	;8 SEPARATIONS
	MOVE.L	D0,-(SP)	;ON SAUVE LE TEMPS MACHINE INITIAL
	BSR	FIND_CPU
	MOVE.L	D0,(A5)
	ADD.L	#19*8,(A5)+
	MOVE.L	(SP)+,D0

	LEA	RANG_TIMES2,A6
	LEA	BUF_RANGV,A5
	MOVE.W	HAUT_1,D5
	MOVEQ	#0,D7
	BSR	FIND_CPU_MOVE
	MOVE.L	D3,(A6)	;ON ADDITIONNE LE TEMPS DES MOVES AU TEMPS DES ORS
	ADD.L	#11,(A6)+	;+1 MOVEM.L
	LEA	BUF_RANGV2,A5
	MOVE.W	HAUT_2,D5
	MOVEQ	#1,D7
	BSR	FIND_CPU_MOVE
	MOVE.L	D3,(A6)	;ON ADDITIONNE LE TEMPS DES MOVES AU TEMPS DES ORS
	ADD.L	#2*11,(A6)+	;+2 MOVEM.L
	LEA	BUF_RANGV3,A5
	MOVE.W	HAUT_3,D5
	MOVEQ	#3,D7
	BSR	FIND_CPU_MOVE
	MOVE.L	D3,(A6)	;ON ADDITIONNE LE TEMPS DES MOVES AU TEMPS DES ORS
	ADD.L	#11*4,(A6)+	;+3 MOVEM.L
	LEA	BUF_RANGV4,A5
	MOVE.W	HAUT_4,D5
	MOVEQ	#7,D7
	BSR	FIND_CPU_MOVE
	MOVE.L	D3,(A6)	;ON ADDITIONNE LE TEMPS DES MOVES AU TEMPS DES ORS
	ADD.L	#11*8,(A6)+	;+4 MOVEM.L

	MOVE.L	PT_OPT,A6

	MOVEM.L	RANG_TIMES+4,D0-D3   ;ON CHARGE LES TEMPS DES ORS
	CMP.W	D0,D1
	BLT.S	.2_INF_1
	CMP.W	D0,D2
	BLT.S	.3_INF_2
	CMP.W	D0,D3
	BLT.S	.4_INF
	LEA	BUF_RANG,A0
	MOVEQ	#8,D7
	BRA.S	INF_CIBLê_ORS
.2_INF_1	CMP.W	D1,D2
	BLT.S	.3_INF_2
	CMP.W	D1,D3
	BLT.S	.4_INF
	LEA	BUF_RANG2,A0
	MOVEQ	#16,D7
	BRA.S	INF_CIBLê_ORS
.3_INF_2	CMP.W	D2,D3
	BLT.S	.4_INF
	LEA	BUF_RANG3,A0
	MOVEQ	#32,D7
	BRA.S	INF_CIBLê_ORS
.4_INF	LEA	BUF_RANG4,A0
	MOVEQ	#64,D7
INF_CIBLê_ORS	MOVEM.L	RANG_TIMES2,D0-D3   ;ON CHARGE LES TEMPS DES MOVES
	CMP.W	D0,D1
	BLT.S	.2_INF_1
	CMP.W	D0,D2
	BLT.S	.3_INF_2
	CMP.W	D0,D3
	BLT.S	.4_INF
	LEA	BUF_RANGV,A1
	MOVEQ	#4,D6
	BRA.S	INF_CIBLê
.2_INF_1	CMP.W	D1,D2
	BLT.S	.3_INF_2
	CMP.W	D1,D3
	BLT.S	.4_INF
	LEA	BUF_RANGV2,A1
	MOVEQ	#8,D6
	BRA.S	INF_CIBLê
.3_INF_2	CMP.W	D2,D3
	BLT.S	.4_INF
	LEA	BUF_RANGV3,A1
	MOVEQ	#16,D6
	BRA.S	INF_CIBLê
.4_INF	LEA	BUF_RANGV4,A1
	MOVEQ	#32,D6
INF_CIBLê	MOVEM.W	D6-D7,-(SP)
	LSR	#3,D7
	MOVE.W	D7,(A6)+	;NB DE SEPARATIONS ORS
	LSR	#2,D6
	MOVE.W	D6,(A6)+	;NB DE SEPARATIONS MOVES
	MOVEM.W	(SP)+,D6-D7
.RECOM_COPY	SUBQ.W	#1,D7
.COPY_ORS	MOVE.L	(A0),(A6)+
	ADDQ.W	#6,A0
	DBRA	D7,.COPY_ORS
.TRY_MOVES	SUBQ.W	#1,D6
.COPY_MOVES	MOVE.L	(A1),(A6)+
	ADDQ.W	#6,A1
	DBRA	D6,.COPY_MOVES
	MOVE.L	A6,PT_OPT

	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVE.W	#7999,D7
.EFF_SCREENS	CLR.L	(A0)+
	CLR.L	(A1)+
	DBRA	D7,.EFF_SCREENS

	MOVE.W	NB_SPR,D7
	DBRA	D7,REPEAT_SPR

FIN_MAKE_OPT	;LE FICHIER A SAUVER EST FIC_OPT-->(A6-1)

	CLR.W	-(SP)
	PEA	FIC_NAME
	MOVE.W	#$3C,-(SP)
	TRAP	#1
	ADDQ.W	#8,SP
	MOVE.W	D0,HANDLE

	LEA	FIC_OPT,A0
	MOVE.L	PT_OPT,A1
	SUB.L	A0,A1
	PEA	FIC_OPT
	MOVE.L	A1,-(SP)
	MOVE.W	HANDLE,-(SP)
	MOVE.W	#$40,-(SP)
	TRAP	#1
	LEA	12(SP),SP

	MOVE.W	HANDLE,-(SP)
	MOVE.W	#$3E,-(SP)
	TRAP	#1
	ADDQ.W	#4,SP

	MOVE.L	SAUV_SP,-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR.W	-(SP)
	TRAP	#1

NB_SPR	DS.W	1
HANDLE	DS.W	1

FIC_NAME	DC.B	"A_DEAD.OPT",0
	EVEN
PT_OPT	DS.L	1
RANG_TIMES	DS.L	5
RANG_TIMES2	DS.L	4
FIC_OPT	DS.W	10000

;AND = 8 REGISTRES
;OR  = 8 REGISTRES
;MOVE= 4 REGISTRES

*** ROUTINE QUI CALCULE LE TEMPS MACHINE DE TOUT LES MOVES D'UN SPRITE
*** ENTRêES = A5:ADRESSE DU BUFFER ACTUEL D'OPT DES MOVES
***           D5:HAUTEUR
***           D7:NB D'ITERATIONS (1,2,4 OU 8)-1
FIND_CPU_MOVE	MOVE.L	SCREEN2,A0	;MASQUE
	MOVE.L	SCREEN1,A1	;SPRITE
	MOVEQ	#0,D3	;TEMPS MACHINE DES MOVES !!
	MOVE.W	D5,PLACE_415+2
RECOM_ITER
PLACE_415	MOVE.W	#$1234,D5
	SUBQ.W	#1,D5
NEXT_LINE	MOVE.W	LONG,D6
	ADD.W	D6,D6
	ADDQ.W	#1,D6	;2n-1
	MOVE.W	D6,-(SP)
	MOVEQ	#0,D0
.REGARD_LINE	CMPI.L	#-1,(A0)
	BEQ.S	.RIEN_AFFICH
	TST.L	(A0)
	BNE.S	.AFFICH_OR
.AFFICH_MOVE	ADDQ.W	#1,D0
.AFFICH_OR
.RIEN_AFFICH	ADDQ.W	#4,A0
	ADDQ.W	#4,A1
	DBRA	D6,.REGARD_LINE
NOW_TEST	CMPI.W	#6,D0	;6 .L MINIMUM !!!
	BGE.S	.TROP_GRAND	;SI >=6 ALORS PAS MOVE MAIS MOVEM !!
	TST.W	D0
	BEQ.S	.TROP_GRAND	;SI =0 ALORS AUCUN MOVE N'A êTê DêTECTê
	MOVE.W	LONG,D6	;SINON ON TESTE LES OPTS SUR LES MOVES
	ADDQ.W	#1,D6
	LSL	#3,D6
	SUBA.W	D6,A0	;ON REVIENT AU DEBUT DE LA LIGNE DU MASQUE
	SUBA.W	D6,A1	;ON REVIENT AU DEBUT DE LA LIGNE DU SPRITE
	MOVE.W	(SP),D6
.CONT_LIG	CMPI.L	#-1,(A0)
	BEQ.S	.AFFICH_RIEN
	TST.L	(A0)
	BNE.S	.AFFICH_OR
.AFFICH_MOVE	MOVE.L	A5,A2
	MOVEQ	#3,D4
.RECOM_OPT	MOVE.L	(A2),D0
	TST.W	(A2)
	BEQ.S	.SEARCH_W
.SEARCH_L	CMP.L	(A1),D0
	BEQ.S	.TROUVê_1
	TST.W	(A1)
	BNE.S	.PAS_TROUVê_2
	CMP.W	2(A1),D0
	BEQ.S	.TROUVê_1
	BRA.S	.PAS_TROUVê_1
.PAS_TROUVê_2	TST.W	2(A1)
	BNE.S	.PAS_TROUVê_1
	CMP.W	(A1),D0
	BNE.S	.PAS_TROUVê_1
.TROUVê_1	ADDQ.W	#4,D3	;4 NOPS=MOVE.L Dn,d(A0)
	BRA.S	.EXIT_FACILE
.PAS_TROUVê_1	ADDQ.W	#6,A2	;PROCHAINE OPT
	DBRA	D4,.RECOM_OPT
	ADDQ.W	#6,D3	;6 NOPS=MOVE.L #Imm,d(A0)
	BRA.S	.EXIT_FACILE
.SEARCH_W	MOVE.L	D0,D1
	SWAP	D1
	CMP.L	(A1),D0
	BEQ.S	.TROUVê_2
	CMP.L	(A1),D1
	BNE.S	.PAS_TROUVê_3
.TROUVê_2	ADDQ.W	#3,D3	;MOVE.W Dn,d(A0)=3 NOPS
	BRA.S	.EXIT_FACILE
.PAS_TROUVê_3	ADDQ.W	#6,A2
	DBRA	D4,.RECOM_OPT
	ADDQ.W	#4,D3	;MOVE.W #Imm,d(A0)=4 NOPS
.AFFICH_RIEN
.AFFICH_OR
.EXIT_FACILE	ADDQ.W	#4,A0
	ADDQ.W	#4,A1
	DBRA	D6,.CONT_LIG
.TROP_GRAND	ADDA.W	OFFSET_FIN_LIG,A0
	ADDA.W	OFFSET_FIN_LIG,A1
	ADDQ.W	#2,SP
	DBRA	D5,NEXT_LINE
	LEA	6*8(A5),A5	;PROCHAINE SERIE D'OPT
	DBRA	D7,RECOM_ITER
	RTS

*** ROUTINES QUI COMPTE LE TEMPS MACHINE DES ORS
*** ENTRêES D0=TEMPS MACHINE INITIAL A DECREMENTER
***         D2=HAUTEUR
***         D3=NB DE SEPARATIONS (1,2,4 OU 8) -1
***         A0=BUFFER DE RANGEMENT DES OPTS
FIND_CPU	MOVE.W	LONG,D5
	ADD.W	D5,D5
	ADDQ.W	#1,D5
	MOVE.L	SCREEN1,A2
	MOVE.W	D2,.RECOM_OPT+2
	MOVE.W	D2,.ENCORE_CHANGE+2
.RECOM_OPT_2	MOVEQ	#7,D4
.RECOM_OPT	MOVE.W	#$1234,D6
	SUBQ.W	#1,D6
	MOVE.L	A2,A1
	MOVE.L	(A0),D1
	TST.W	(A0)
	BEQ.S	.SEARCH_W
	TST.W	2(A0)
	BEQ.S	.SEARCH_W
.SEARCH_L	MOVE.W	D5,D7
	CMP.L	(A1),D1
	BEQ.S	.TROUVê_1
	TST.W	(A1)
	BNE.S	.PAS_TROUVê_4
	CMP.W	2(A1),D1
	BEQ.S	.TROUVê_1
.PAS_TROUVê_4	TST.W	2(A1)
	BNE.S	.PAS_TROUVê_1
	CMP.W	(A1),D1
	BNE.S	.PAS_TROUVê_1
.TROUVê_1	SUBQ.W	#2,D0	;TEMPS MACHINE-2 NOPS !!
.PAS_TROUVê_1	ADDQ.W	#4,A1
	DBRA	D7,.SEARCH_L+2
	ADDA.W	OFFSET_FIN_LIG,A1
	DBRA	D6,.SEARCH_L
	BRA.S	.FIN_SEARCH
.SEARCH_W	MOVE.L	D1,D2
	SWAP	D2
.SEARCH_W_Y	MOVE.W	D5,D7
.SEARCH_W_X	CMP.L	(A1),D1
	BEQ.S	.TROUVê_2
	CMP.L	(A1),D2
	BNE.S	.PAS_TROUVê_3
.TROUVê_2	SUBQ.W	#2,D0	;TEMPS MACHINE -2 NOPS !!
.PAS_TROUVê_3	ADDQ.W	#4,A1
	DBRA	D7,.SEARCH_W_X
	ADDA.W	OFFSET_FIN_LIG,A1
	DBRA	D6,.SEARCH_W_Y
.FIN_SEARCH	ADDQ.W	#6,A0	;PROCHAINE_OPT
	DBRA	D4,.RECOM_OPT
.ENCORE_CHANGE	MOVE.W	#$1234,D7
	MULU.W	#160,D7
	ADDA.W	D7,A2
	DBRA	D3,.RECOM_OPT_2
	RTS

MAK_ANNEX_M	SUBQ.W	#1,D7
	MOVE.L	A5,A3
	CLR.W	NB_ANDS
RECOMM_TEST_Y	MOVE.W	LONG,D6
RECOMM_TEST_X	TST.L	(A2)
	BEQ.S	L_SUIVANTM
	CMPI.L	#-1,(A2)
	BEQ.S	L_SUIVANTM
	MOVE.L	(A2),D0
	ADDQ.W	#1,NB_ANDS
	BRA	SEARCH_LM
L_SUIVANTM	ADDQ.W	#8,A2
	DBRA	D6,RECOMM_TEST_X
	ADDA.W	OFFSET_FIN_LIG,A2
	DBRA	D7,RECOMM_TEST_Y

.RECOM_TOTAL	MOVE.L	A5,A4
.RECOM_TRI	CMPA.L	A3,A4
	BEQ.S	.TRI_FINI
	MOVE.W	10(A4),D0
	CMP.W	4(A4),D0
	BLE.S	.OK
	MOVE.W	4(A4),10(A4)
	MOVE.W	D0,4(A4)
	MOVE.L	6(A4),D0
	MOVE.L	(A4),6(A4)
	MOVE.L	D0,(A4)
	BRA.S	.RECOM_TOTAL
.OK	ADDQ.W	#6,A4
	BRA.S	.RECOM_TRI
.TRI_FINI	MOVE.L	A5,A4
	REPT	8
	MOVE.L	(A4)+,(A6)+
	MOVE.W	(A4)+,(A6)+
	ENDR
	RTS

MAK_ANNEX	CLR.W	NB_ORS
	SUBQ.W	#1,D7
	MOVE.L	A5,A3
RECOM_TEST_Y	MOVE.W	LONG,D6
	ADD.W	D6,D6
	ADDQ.W	#1,D6	;2n-1
RECOM_TEST_X	TST.L	(A4)	;MASK=0 ?
	BEQ	COIN_MOVES
	CMPI.L	#-1,(A4)	;MASK=-1 ?
	BEQ.S	L_SUIVANT
	TST.L	(A2)
	BEQ.S	L_SUIVANT
	ADDQ.W	#1,NB_ORS
	TST.W	(A2)
	BNE.S	.LONGINT
	MOVEQ	#0,D0
	MOVE.W	2(A2),D0
	BRA	SEARCH_W
.LONGINT	TST.W	2(A2)
	BNE.S	.REAL_LONGINT
	MOVEQ	#0,D0
	MOVE.W	(A2),D0
	BRA	SEARCH_W
.REAL_LONGINT	MOVE.L	(A2),D0
	BRA	SEARCH_L
L_SUIVANT	ADDQ.W	#4,A2
	ADDQ.W	#4,A4
	DBRA	D6,RECOM_TEST_X
	BSR	GEST_MOVES
	ADDA.W	OFFSET_FIN_LIG,A2
	ADDA.W	OFFSET_FIN_LIG,A4
	DBRA	D7,RECOM_TEST_Y

	MOVE.L	A4,-(SP)

.RECOM_TOTAL	MOVE.L	A5,A4
.RECOM_TRI	CMPA.L	A3,A4
	BEQ.S	.TRI_FINI
	MOVE.W	10(A4),D0
	CMP.W	4(A4),D0
	BLE.S	.OK
	MOVE.W	4(A4),10(A4)
	MOVE.W	D0,4(A4)
	MOVE.L	6(A4),D0
	MOVE.L	(A4),6(A4)
	MOVE.L	D0,(A4)
	BRA.S	.RECOM_TOTAL
.OK	ADDQ.W	#6,A4
	BRA.S	.RECOM_TRI
.TRI_FINI	MOVE.L	A5,A4
	REPT	8
	MOVE.L	(A4)+,(A6)+
	MOVE.W	(A4)+,(A6)+
	ENDR
	BSR	TRI_MOVES
	MOVE.L	(SP)+,A4
	RTS

NB_MOVE	DS.W	1

COIN_MOVES	ADDQ.W	#1,NB_MOVE
	BRA	L_SUIVANT

*** GESTION DES MOVES D'UNE LIGNE ENTIERE ( SI < 6 : MOVE, SINON MOVEM ! )
GEST_MOVES	MOVEM.L	D0-A6,-(SP)
	MOVE.L	BUF_MOVE,A5
	MOVE.L	PT_BUF_MOVE,A3
	CMPI.W	#6,NB_MOVE
	BGE.S	FIN_GEST_MOVES
	TST.W	NB_MOVE
	BEQ.S	FIN_GEST_MOVES
	MOVE.W	LONG,D7	;n-1
	ADD.W	D7,D7
	ADDQ.W	#1,D7	;2n-1
	MOVE.W	D7,D6
	ADDQ.W	#1,D6
	ADD.W	D6,D6
	ADD.W	D6,D6	;LONGUEUR D'UNE LIGNE EN OCTETS
	SUBA.W	D6,A4	;A4=MASK
	SUBA.W	D6,A2	;A2=SPRITE
.RECOM_MOVES	CMPI.L	#-1,(A4)
	BEQ.S	.MASK_OFF
	TST.L	(A4)
	BNE.S	.MASK_OFF
	TST.L	(A2)
	BEQ.S	.MASK_OFF
	SUBQ.W	#1,NB_MOVE
	TST.W	(A2)
	BNE.S	.LONGINT
	MOVEQ	#0,D0
	MOVE.W	2(A2),D0
	LEA	.MASK_OFF,A1
	BRA	SEARCH_WV
.LONGINT	TST.W	2(A2)
	BNE.S	.R_LONGINT
	MOVEQ	#0,D0
	MOVE.W	(A2),D0
	LEA	.MASK_OFF,A1
	BRA	SEARCH_WV
.R_LONGINT	MOVE.L	(A2),D0
	LEA	.MASK_OFF,A1
	BRA	SEARCH_LV
.MASK_OFF	ADDQ.W	#4,A2
	ADDQ.W	#4,A4
	TST.W	NB_MOVE
	BGT.S	.RECOM_MOVES
FIN_GEST_MOVES	CLR.W	NB_MOVE
	MOVE.L	A3,PT_BUF_MOVE
	MOVEM.L	(SP)+,D0-A6
	RTS

TRI_MOVES	MOVEM.L	D0-A6,-(SP)
	MOVE.L	BUF_MOVE,A5
	MOVE.L	PT_BUF_RANG,A2
	MOVE.L	PT_BUF_MOVE,A3
.RECOM_TOTAL	MOVE.L	A5,A4
.RECOM_TRI	CMPA.L	A3,A4
	BEQ.S	.TRI_FINI
	MOVE.W	10(A4),D0
	CMP.W	4(A4),D0
	BLE.S	.OK
	MOVE.W	4(A4),10(A4)
	MOVE.W	D0,4(A4)
	MOVE.L	6(A4),D0
	MOVE.L	(A4),6(A4)
	MOVE.L	D0,(A4)
	BRA.S	.RECOM_TOTAL
.OK	ADDQ.W	#6,A4
	BRA.S	.RECOM_TRI
.TRI_FINI	MOVE.L	A5,A4
	REPT	8
	MOVE.L	(A4)+,(A2)+
	MOVE.W	(A4)+,(A2)+
	ENDR
	MOVE.L	A2,PT_BUF_RANG
	MOVEM.L	(SP)+,D0-A6
	RTS

BUF_MOVE	DS.L	1
PT_BUF_MOVE	DS.L	1
PT_BUF_RANG	DS.L	1

SEARCH_W	MOVE.L	A4,-(SP)
	MOVE.L	A5,A4
.RECOM_SEARCH	CMPA.L	A4,A3
	BEQ.S	FIN_11
	CMP.W	2(A4),D0
	BEQ.S	FIN_12
	ADDQ.W	#6,A4
	BRA.S	.RECOM_SEARCH
FIN_11	MOVE.L	D0,(A3)+
	MOVE.W	#1,(A3)+
	MOVE.L	(SP)+,A4
	BRA	L_SUIVANT
FIN_12	ADDQ.W	#1,4(A4)
	MOVE.L	(SP)+,A4
	BRA	L_SUIVANT

SEARCH_L	MOVE.L	A4,-(SP)
	MOVE.L	A5,A4
.RECOM_SEARCH	CMPA.L	A4,A3
	BEQ.S	FIN_21
	CMP.L	(A4),D0
	BEQ.S	FIN_22
	ADDQ.W	#6,A4
	BRA.S	.RECOM_SEARCH
FIN_21	MOVE.L	D0,(A3)+
	MOVE.W	#1,(A3)+
	MOVE.L	(SP)+,A4
	BRA	L_SUIVANT
FIN_22	ADDQ.W	#1,4(A4)
	MOVE.L	(SP)+,A4
	BRA	L_SUIVANT

SEARCH_WV	MOVE.L	A4,-(SP)
	MOVE.L	A5,A4
.RECOM_SEARCH	CMPA.L	A4,A3
	BEQ.S	.FIN_11
	CMP.W	2(A4),D0
	BEQ.S	.FIN_12
	ADDQ.W	#6,A4
	BRA.S	.RECOM_SEARCH
.FIN_11	MOVE.L	D0,(A3)+
	MOVE.W	#1,(A3)+
	MOVE.L	(SP)+,A4
	JMP	(A1)
.FIN_12	ADDQ.W	#1,4(A4)
	MOVE.L	(SP)+,A4
	JMP	(A1)

SEARCH_LV	MOVE.L	A4,-(SP)
	MOVE.L	A5,A4
.RECOM_SEARCH	CMPA.L	A4,A3
	BEQ.S	.FIN_21
	CMP.L	(A4),D0
	BEQ.S	.FIN_22
	ADDQ.W	#6,A4
	BRA.S	.RECOM_SEARCH
.FIN_21	MOVE.L	D0,(A3)+
	MOVE.W	#1,(A3)+
	MOVE.L	(SP)+,A4
	JMP	(A1)
.FIN_22	ADDQ.W	#1,4(A4)
	MOVE.L	(SP)+,A4
	JMP	(A1)

SEARCH_LM	MOVE.L	A5,A4
.RECOM_SEARCH	CMPA.L	A4,A3
	BEQ.S	FIN_31
	CMP.L	(A4),D0
	BEQ.S	FIN_32
	ADDQ.W	#6,A4
	BRA.S	.RECOM_SEARCH
FIN_31	MOVE.L	D0,(A3)+
	MOVE.W	#1,(A3)+
	BRA	L_SUIVANTM
FIN_32	ADDQ.W	#1,4(A4)
	BRA	L_SUIVANTM

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

PREP_ECR	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000,D0
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

INF	INCBIN	A_DEAD.INF
SPR	INCBIN	A_DEAD.SPR

TABLE_MSK	DC.L	0,$80008000,$C000C000,$E000E000,$F000F000
	DC.L	$F800F800,$FC00FC00,$FE00FE00,$FF00F00
	DC.L	$FF80FF80,$FFC0FFC0,$FFE0FFE0,$FFF0FFF0
	DC.L	$FFF8FFF8,$FFFCFFFC,$FFFEFFFE,$FFFFFFFF

ANIM_A_FAIRE	DC.W	39,13
	DC.W	121,12
	DC.W	26,20
	DC.W	146,25
	DC.W	48,0
	DC.W	74,1

	SECTION	BSS
PT_ANIM	DS.L	1
SAUV_SP	DS.L	1
LONG	DS.W	1
HAUT_1	DS.W	1
HAUT_2	DS.W	1
HAUT_3	DS.W	1
HAUT_4	DS.W	1
OFFSET_FIN_LIG	DS.W	1
NB_ANDS	DS.W	1
NB_ANDS_FINAL	DS.W	1
NB_ORS	DS.W	1
BUF_ANNEX	DS.L	5000
BUF_ANNEX2	DS.L	5000
BUF_ANNEX3	DS.L	5000
BUF_ANNEX4	DS.L	5000
BUF_RANG	DS.W	3*8
BUF_RANG2	DS.W	3*8*2
BUF_RANG3	DS.W	3*8*4
BUF_RANG4	DS.W	3*8*8
BUF_ANNEXV	DS.L	5000
BUF_ANNEXV2	DS.L	5000
BUF_ANNEXV3	DS.L	5000
BUF_ANNEXV4	DS.L	5000
BUF_RANGV	DS.W	3*8
BUF_RANGV2	DS.W	3*8*2
BUF_RANGV3	DS.W	3*8*4
BUF_RANGV4	DS.W	3*8*8
BUF_ANNEXM	DS.L	5000
BUF_ANNEXM2	DS.L	5000
BUF_ANNEXM3	DS.L	5000
BUF_ANNEXM4	DS.L	5000
BUF_RANGM	DS.W	3*8
BUF_RANGM2	DS.W	3*8*2
BUF_RANGM3	DS.W	3*8*4
BUF_RANGM4	DS.W	3*8*8
	DS.B	256
BUFFER	DS.L	16000
SCREEN1	DS.L	1
SCREEN2	DS.L	1