;a utiliser plutot pour les credits en tout dernier ou en reset
;comme dans la Hardwired

;fin: .S et tout

NB_PTS = 2304
NB_PASSES = 20
DEBUT:
	PEA	0.W
	MOVE 	#$20,-(SP)
	TRAP 	#1
	ADDQ.L 	#6,SP

	CLR.W 	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE 	#5,-(SP)
	TRAP 	#14
	LEA.L 	12(SP),SP

	MOVE.L	#FIN,$008.W
	MOVE.L	#FIN,$00C.W
	MOVE.L	#FIN,$010.W
	MOVE.L	#FIN,$014.W

	move.l	#BUFFER,d0
	CLR.B	D0
	move.l	d0,SCREEN1
	add.l	#32000,d0
	move.l	d0,SCREEN2

	move.l	SCREEN1,d0
;	MOVE.L	SCREEN2,SCREEN1
;	MOVE.L	D0,SCREEN2
	lsr.l	#8,d0
	move.l	#$ffff8201,a0
	movep	d0,(a0)

***********
WRAP	
	CLR.L	COMPTE_PTS
	CLR.L	PETIT_PNT
	LEA	MODIF1,A0
	LEA	MODIF2,A1
	LEA	MODIF3,A2
	MOVE	#(4*9)-1,D0
NOPY	MOVE	#$4E71,(A0)+
	MOVE	#$4E71,(A1)+
	MOVE	#$4E71,(A2)+
	DBF	D0,NOPY

;	MOVE.L	SCREEN1,A0
	LEA	IMG_DEP,A1
	MOVE	#7999,D0
T	CLR.L	(A1)+
	DBF	D0,T

	LEA	IMG_FIN,A1
	MOVE	#7999,D0
T2	CLR.L	(A1)+
	DBF	D0,T2

	LEA	IMG_DEP,A5
	LEA	MESSAGE,A0
	ADDA.L	PNT_MESSAGE,A0
	JSR	AFF_TXT
	LEA	HASARD,A0
	ADDA.L	PNT_HASARD,A0
	MOVE	(A0),MOD_HASARD
	LEA	MESSAGE,A0
	LEA	9(A0),A0
	ADDA.L	PNT_MESSAGE,A0
	LEA	IMG_FIN,A5
	JSR	AFF_TXT

	CLR	COORD_X
	CLR	COORD_Y
;	MOVE.L	SCREEN1,A0
	LEA	IMG_DEP,A0
	LEA	FORME_DEP_X,A1
	LEA	FORME_DEP_Y,A2
	LEA	FORME_DEP,A3
	JSR	CALCUL
	MOVE.L	A1,SAVE_A1
	MOVE.L	A2,SAVE_A2
	MOVE.L	A3,SAVE_A3
	MOVE.L	COMPTE_PTS,SAVE_PTS
	CLR.L	COMPTE_PTS

	CLR	COORD_X
	CLR	COORD_Y
;	MOVE.L	SCREEN1,A0
	LEA	IMG_FIN,A0
	LEA	FORME_FIN_X,A1
	LEA	FORME_FIN_Y,A2
	LEA	FORME_FIN,A3
	JSR	CALCUL
	MOVE.L	COMPTE_PTS,D0	;Nombre de pts forme finale
	MOVE.L	SAVE_PTS,D1	;Nombre de pts forme initiale
	CMP.L	D0,D1
	BEQ	IMPECCABLE	;TRES, TRES improbable!
	BGT	D1_PLUS_GRD
D0_PLUS_GRD	;d0=nb de pts de l'animation
	MOVE	D0,SAVE_NB_PTS
	SUB.L	D1,D0	D0 = nb de pts manquants
	LEA	FORME_DEP_X,A3
	LEA	FORME_DEP_Y,A4
	LEA	FORME_DEP,A5
	MOVE.L	SAVE_A1,A1
	MOVE.L	SAVE_A2,A2
	MOVE.L	SAVE_A3,A6
	SUBQ.L	#1,D0
COMPLETE_IT	MOVE.B	(A3)+,(A1)+
	MOVE	(A4)+,(A2)+
	MOVE.L	(A5)+,(A6)+
	DBF	D0,COMPLETE_IT
	BRA	IMPECCABLE

D1_PLUS_GRD	;d1=nb de pts de l'animation
	MOVE	D1,SAVE_NB_PTS
	SUB.L	D0,D1	D1 = nb de pts manquants
	MOVE.L	A3,A6
	LEA	FORME_FIN_X,A3
	LEA	FORME_FIN_Y,A4
	LEA	FORME_FIN,A5
	SUBQ.L	#1,D1
COMPLETE	MOVE.B	(A3)+,(A1)+
	MOVE	(A4)+,(A2)+
	MOVE.L	(A5)+,(A6)+
	DBF	D1,COMPLETE
IMPECCABLE	;Tout est bon pour commencer la mÇtamorphose...
******************************************************************
	MOVEQ	#0,D0
	MOVE	SAVE_NB_PTS,D0
	MOVE.L	D0,D1
	DIVU	#10,D1
	SUBQ	#1,D1
	MOVE	D1,MODPTS1
	MOVE.L	D0,MODPTS2
	MOVE	D0,MODPTS4
	MOVE	D0,MODPTS5
	ADD	D0,MODPTS5
	MOVE.L	D0,D1
	SUBQ	#1,D1
	MOVE	D1,MODPTS3
	MOVE.L	D0,D1
	MULU	#NB_PASSES,D1
	MOVE.L	D1,MODPTS6
	MOVE.L	D0,MODPTS5B

	LEA	BUF_COD,A0
MODPTS1	EQU	*+2
	MOVE	#(NB_PTS/10)-1,D0
CSTR_COD	MOVE.L	#$10183219,(A0)+	;MOVE.B (A0)+,D0/MOVE (A1)+,D1
	MOVE.L	#$81341000,(A0)+	;OR.B D0,(A4,D1.W)
	DBF	D0,CSTR_COD
	MOVE	#$4E75,(A0)
MODPTS2	EQU	*+2
	MOVE.L	#NB_PTS,D0
	DIVU	#10,D0
	SWAP	D0
	TST	D0
	BEQ	NO_PROB
	SUBQ	#1,D0
	LEA	MODIF1,A0
	LEA	MODIF2,A1
	LEA	MODIF3,A2
CSTR2_COD	MOVE.L	#$10183219,(A0)+	;MOVE.B (A0)+,D0/MOVE (A1)+,D1
	MOVE.L	#$10183219,(A1)+	;MOVE.B (A0)+,D0/MOVE (A1)+,D1
	MOVE.L	#$10183219,(A2)+	;MOVE.B (A0)+,D0/MOVE (A1)+,D1
	MOVE.L	#$81341000,(A0)+	;OR.B D0,(A4,D1.W)
	MOVE.L	#$81341000,(A1)+	;OR.B D0,(A4,D1.W)
	MOVE.L	#$81341000,(A2)+	;OR.B D0,(A4,D1.W)
	DBF	D0,CSTR2_COD
NO_PROB

******************************************************************

	LEA	FORME_DEP,A4
	LEA	FORME_FIN,A5

MODPTS3	EQU	*+2
	MOVE	#NB_PTS-1,D4	NB_PTS
DO_A_LINE	
	LEA	BUFFER_COORD,A1
	ADDA.L	PETIT_PNT,A1
	LEA	BUFFER_COORD2,A2
	ADDA.L	PETIT_PNT,A2
	ADDA.L	PETIT_PNT,A2

	MOVEQ	#1,D5
DO_A_COORD	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE	(A4)+,D0
	MOVE	(A5)+,D1
	LEA	SOUS_BUFFER,A0
;MOD_R	EQU	*+2
;	LEA	0(A0),A0
MOD_T	EQU	*+2
	LEA	0(A0),A0
	JSR	DO_TRANS
	ADD	#2,MOD_T
	DBF	D5,DO_A_COORD
	CLR	MOD_T
;GERE SOUS BUFFER
	LEA	SOUS_BUFFER,A0
	MOVE	#NB_PASSES-1,D7
	LEA	TABLE_Y,A6
	LEA	TABLE_X,A3

TRANS	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE	(A0)+,D0
	MOVE	(A0)+,D1

	ADD	D1,D1
	MOVE	(A6,D1.W),D1

	SUBQ	#1,D0
	ADD	D0,D0
	ADD	D0,D0
	ADD	(A3,D0.W),D1
	MOVE.B	2(A3,D0.W),(A1)
	MOVE	D1,(A2)

MODPTS4	EQU	*+2
	LEA	NB_PTS(A1),A1
MODPTS5	EQU	*+2
	LEA	NB_PTS*2(A2),A2
	DBF	D7,TRANS
	ADDQ.L	#1,PETIT_PNT
;	ADD	#NB_PASSES*8,MOD_R
	DBF	D4,DO_A_LINE
FINITO	BRA	ALL_IS_OVER
PETIT_PNT	DC.L	0

***************************************************************
;	MOVE.L	#0,D0	DEPART
;	MOVE.L	#319,D1	ARRIVEE
;	LEA	COORD,A0
DO_TRANS
	MOVE.L	#NB_PASSES,D2	EN 'D2' PASSES
	MOVE.L	D2,D6
	MOVE	D2,MODIF
	MOVE	D2,MODIF_

	LSL.L	#8,D0
	LSL.L	#8,D1
	CMP.L	D0,D1
	BGT.S	ROUTY1
ROUTY2	;D1 PLUS PETIT
	MOVE.L	D0,D2
	SUB.L	D1,D0	D1=AMPLITUDE
	DIVU	D6,D0
	SWAP	D0
	CLR	D0
	SWAP	D0
MODIF_	EQU	*+2
	MOVE	#0,D7
	SUBQ	#1,D7
DO_IT_AGAIN_	SUB.L	D0,D2
	MOVE.L	D2,D3
	LSR.L	#8,D3	CA EN FAIT UN
	MOVE	D3,(A0)
	ADDQ.L	#4,A0
	DBF	D7,DO_IT_AGAIN_
FINI2	RTS
****
	
ROUTY1	;D0 PLUS PETIT
	MOVE.L	D0,D2
	SUB.L	D0,D1	D1=AMPLITUDE
	DIVU	D6,D1
	SWAP	D1
	CLR	D1
	SWAP	D1
MODIF	EQU	*+2
	MOVE	#0,D7
	SUBQ	#1,D7
DO_IT_AGAIN	ADD.L	D1,D2
	MOVE.L	D2,D3
	LSR.L	#8,D3	CA EN FAIT UN
	MOVE	D3,(A0)
	ADDQ.L	#4,A0
	DBF	D7,DO_IT_AGAIN
FINITED	RTS


FIN	MOVE.L	4.W,(A0)
	JMP	(A0)
SAVE_A1	DC.L	0
SAVE_A2	DC.L	0
SAVE_A3	DC.L	0
SAVE_PTS	DC.L	0
CALCUL
BOUCLE0	MOVE	(A0),D0
	BNE.S	PLAN_NON_VIDE
BOUCLE1	ADDQ.L	#8,A0
	ADD	#16,COORD_X
	CMPI	#320,COORD_X
	BNE.S	BOUCLE0
	CLR	COORD_X
	ADDQ	#1,COORD_Y
	CMPI	#200,COORD_Y
	BNE.S	BOUCLE0
	BRA	FINI
PLAN_NON_VIDE	MOVEQ	#15,D1
	MOVE	COORD_X,D2
LOOP0	BTST	D1,D0
	BNE.S	ALLUMê
BOUCLE2	ADDQ	#1,D2
	DBF	D1,LOOP0
	BRA.S	BOUCLE1
ALLUMê	ADDQ.L	#1,COMPTE_PTS
	MOVE	D2,(A3)+
	MOVE	COORD_Y,(A3)+
	MOVEM.L	D0-A0/A4-A6,-(SP)
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE	D2,D0
	MOVE	COORD_Y,D1

	MULU	#160,D1
	DIVS	#16,D0
	MOVE	D0,D2
	MULU	#8,D2
	ADD.L	D2,D1
	SWAP	D0
	CMPI	#$7,D0
	BGT.S	PLUS_UN
	BRA.S	PLUS_LOIN
PLUS_UN	ADD.L	#1,D1
	SUB.L	#8,D0
PLUS_LOIN
	LEA	KK,A0
	LSL	#3,D0
	JSR	(A0,D0.W)

;	CMPI	#-25,ZA
;	BGT.S	PLD
;	BRA.S	NOPLD
;PLD	ADD	#2,D1
;NOPLD
;	CMPI	#0,ZA
;	BGT.S	PLD2
;	BRA.S	NOPLD2
;PLD2	ADD	#2,D1
;NOPLD2	CMPI	#25,ZA
;	BGT.S	PLD3
;	BRA.S	NOPLD3
;PLD3	ADD	#2,D1
;NOPLD3
;
;	SUB.L	#23000,D1
	MOVE	D1,(A2)+
	MOVEM.L	(SP)+,D0-A0/A4-A6
	BRA.S	BOUCLE2

KK	MOVE.B	#%10000000,(A1)+
	NOP
	RTS
	MOVE.B	#%01000000,(A1)+
	NOP
	RTS
	MOVE.B	#%00100000,(A1)+
	NOP
	RTS	
	MOVE.B	#%00010000,(A1)+
	NOP
	RTS	
	MOVE.B	#%00001000,(A1)+
	NOP
	RTS	
	MOVE.B	#%00000100,(A1)+
	NOP
	RTS
	MOVE.B	#%00000010,(A1)+
	NOP
	RTS
	MOVE.B	#%00000001,(A1)+
	NOP
	RTS
FINI	RTS
ALL_IS_OVER	NOP
;	JSR	EFF
	CLR.L	PNT_PLAN
	MOVE.L	#VBL_DEP,$70.W
BARRAGE	BRA.S	BARRAGE
	MOVE	#$60FE,BARRAGE
	ADD.L	#9,PNT_MESSAGE
	ADDQ.L	#2,PNT_HASARD
	BRA	WRAP
PNT_MESSAGE	DC.L	0
PNT_HASARD	DC.L	0
VBL_DEP	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	NOT0
	MOVE	#$001,$FFFF8240.W
NOT0
	SF	$FFFF8242.W

	MOVEA.L	SCREEN1,A4
	JSR	EFF

	LEA	FORME_DEP_X,A0
	LEA	FORME_DEP_Y,A1

	REPT	10
	JSR	BUF_COD
	ENDR
;	REPT	NB_PTS
;	MOVE.B	(A0)+,D0
;	MOVE	(A1)+,D1
;	OR.B	D0,(A4,D1.W)
;	ENDR
MODIF1	DCB	4*9,$4E71

	move.l	SCREEN1,d0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	lsr.l	#8,d0
	move.l	#$ffff8201,a0
	movep	d0,(a0)

	ST	$ffff8240.w
	ADDQ.L	#1,TIME
	CMPI.L	#3,TIME
	BNE.S	CRACK
	CLR.L	TIME
	MOVE.L	#VBL_DO_IT,$70.W
CRACK	RTE
TIME	DC.L	0
VBL_DO_IT	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	NOTI
	MOVE	#$001,$FFFF8240.W
NOTI
	SF	$FFFF8242.W
;	MOVE	#$222,$FFFF8244.W
	
;	MOVE	#$222,$FFFF8246.W

;	MOVE	#$444,$FFFF8248.W

;	MOVE	#$444,$FFFF824A.W
;	MOVE	#$444,$FFFF824C.W
;	MOVE	#$444,$FFFF824E.W

;	MOVE	#$666,$FFFF8250.W
;	MOVE	#$666,$FFFF8252.W
;	MOVE	#$666,$FFFF8254.W
;	MOVE	#$666,$FFFF8256.W
;	MOVE	#$666,$FFFF8258.W
;	MOVE	#$666,$FFFF825A.W
;	MOVE	#$666,$FFFF825C.W
;	MOVE	#$666,$FFFF825E.W


	cmpi.b	#$1,$fffffc02.w
	beq	poi

	MOVEA.L	SCREEN1,A4

;	ADDA.L	PNT_PLAN,A4
;	ADDA.L	PNT_PLAN,A0
;	CMPI.L	#4,PNT_PLAN
;	BNE.S	JJ
;	ADDQ.L	#4,A0
;	BRA.S	JJJ
;JJ	SUBQ.L	#4,A0
;JJJ
	LEA	BUFFER_COORD2,A1
	ADD.L	CNT,A1
	ADD.L	CNT,A1

;	MOVEQ	#0,D0

;	REPT	NB_PTS
;	MOVE	(A1)+,D1
;	MOVE.B	D0,(A4,D1.W)
;	ENDR
	JSR	EFF

MODPTS5B	EQU	*+2
	ADD.L	#NB_PTS,CNT
MODPTS6	EQU	*+2
	CMPI.L	#NB_PTS*NB_PASSES,CNT
	BNE.S	CA_TOURNE
	CLR.L	TIME
	CLR.L	CNT
	MOVE.L	#VBL_FIN,$70.W
	RTE
CA_TOURNE	LEA	BUFFER_COORD,A0
	ADD.L	CNT,A0
	LEA	BUFFER_COORD2,A1
	ADD.L	CNT,A1
	ADD.L	CNT,A1
;	CMPI.B	#-1,NB_PTS(A0)
;	BNE.S	OKOK
;	CLR.L	CNT
;	LEA	BUFFER_COORD2,A1
;	LEA	BUFFER_COORD,A0
OKOK	

;	REPT	NB_PTS
;	MOVE.B	(A0)+,D0
;	MOVE	(A1)+,D1
;	OR.B	D0,(A4,D1.W)
;	ENDR
	REPT	10
	JSR	BUF_COD
	ENDR
MODIF2	DCB	4*9,$4E71

	MOVE.L	A0,-(SP)
	move.l	SCREEN1,d0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	lsr.l	#8,d0
	move.l	#$ffff8201,a0
	movep	d0,(a0)
	MOVE.L	(SP)+,A0
poi
	ST	$FFFF8240.W
	
;	ADDQ.L	#2,PNT_PLAN
;	CMPI.L	#8,PNT_PLAN
;	BNE.S	DF
;	CLR.L	PNT_PLAN
DF	RTE
VBL_FIN	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	NOT1
	MOVE	#$001,$FFFF8240.W
NOT1
	SF	$FFFF8242.W

	MOVEA.L	SCREEN1,A4
	JSR	EFF

	LEA	FORME_FIN_X,A0
	LEA	FORME_FIN_Y,A1
	
;	REPT	NB_PTS
;	MOVE.B	(A0)+,D0
;	MOVE	(A1)+,D1
;	OR.B	D0,(A4,D1.W)
;	ENDR
	REPT	10
	JSR	BUF_COD
	ENDR
MODIF3	DCB	4*9,$4E71

	move.l	SCREEN1,d0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	lsr.l	#8,d0
	move.l	#$ffff8201,a0
	movep	d0,(a0)

	ST	$ffff8240.w
	ADDQ.L	#1,TIME
	CMPI.L	#3,TIME
	BNE.S	CRACK2
	CLR.L	TIME
	CLR.L	PNT_PLAN
;	JSR	EFF
;	move.l	SCREEN1,d0
;	MOVE.L	SCREEN2,SCREEN1
;	MOVE.L	D0,SCREEN2
;	JSR	EFF

;	MOVE.L	#VBL_DEP,$70.W
	MOVE.L	#VBL_RIEN,$70.W
	MOVE	#$4E71,BARRAGE
CRACK2	RTE
VBL_RIEN	RTE
EFF	MOVEM.L	D0-A6,-(SP)
	movea.l	SCREEN1,a0

	moveq	#0,d0
	moveq	#0,d1
	moveq	#0,d2
	moveq	#0,d3
	moveq	#0,d4
	moveq	#0,d5
	moveq	#0,d6
	moveq	#0,d7
	sub.l	a1,a1
	sub.l	a2,a2
	sub.l	a3,a3
	sub.l	a4,a4
	sub.l	a5,a5
	sub.l	a6,a6
efecr1	
	MOVE	#199,D1
CLS
N	SET	0
	REPT	20
	MOVE	D0,N(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D1,CLS
	MOVEM.L	(SP)+,D0-A6
	RTS

AFF_TXT	MOVE.L	A5,A4
;MOD_ADR	EQU	*+2
;	LEA	MESSAGE,A0
;	CMPI.B	#-1,(A0)
;	BEQ	TERMINê
	MOVE	#9-1,D6
ICI	MOVEQ	#0,D0
	;MOVE.L	SCREEN1,A5
	;LEA	160*60(A5),A5
	MOVE.L	A4,A5
	LEA	5*8(A5),A5
MOD_HASARD	EQU	*+2
	LEA	0(A5),A5
	LEA	CORRES,A2
MOD	EQU	*+2
	LEA	0(A5),A5
MOD2	EQU	*+2
	LEA	0(A5),A5
	MOVE.B	(A0)+,D0
	SUBI.B	#32,D0
GO	LSL.L	#2,D0
	ADDA.L	D0,A2
	MOVE.L	(A2),A2
	MOVEQ	#15,D0
AFF_A_LETTER	MOVE	(A2),(A5)
	LEA	160(A2),A2
	LEA	160(A5),A5
	DBF	D0,AFF_A_LETTER
	ADDQ	#8,MOD
	CMPI	#160,MOD
	BNE.S	OKAY_MAN
	CLR	MOD
	ADD	#160*16,MOD2
OKAY_MAN	DBF	D6,ICI
	CLR	MOD
	CLR	MOD2
	;MOVE.L	A0,MOD_ADR
TERMINê	RTS

	DATA

	*	'         '
MESSAGE
	DC.B	'A        '
	DC.B	'        B'
	DC.B	'C        '
	DC.B	'        D'
	DC.B	'E        '
	DC.B	'        F'
	DC.B	'G        '
	DC.B	'        H'
	DC.B	'I        '
	DC.B	'        J'
	DC.B	'K        '
	DC.B	'        L'
	DC.B	'M        '
	DC.B	'        N'
	DC.B	'O        '
	DC.B	'        P'
	DC.B	'Q        '
	DC.B	'        R'
	DC.B	'S        '
	DC.B	'        T'
	DC.B	'U        '
	DC.B	'        V'
	DC.B	'W        '
	DC.B	'        X'
	DC.B	'Y        '
	DC.B	'        Z'

	DC.B	'-WELCOME-'
	DC.B	'  IN THE '
	DC.B	' REALM OF'
	DC.B	'THE DREAM'
	DC.B	'    .    '
	DC.B	"LET'S GO!"
	DC.B	'GREETINGS'
	DC.B	' ARE SENT'
	DC.B	' TO ...  '
	DC.B	' MJJ PROD'
	DC.B	' ABSTRACT'
	DC.B	'-EQUINOX-'
	DC.B	'THE UNION'
	DC.B	'LOST BOYS'
	DC.B	'-TEX-ULM-'
	DC.B	'-ACF-NPG-'
	DC.B	'NGC-ACCS '
	DC.B	'-MASTERS-'
	DC.B	'...ETC...'
	DC.B	" JENNY'S "
	DC.B	'FAVORITE '
	DC.B	' DEMO IS '
	DC.B	'HARDWIRED'
	DC.B	'  SO ... '
	DC.B	"DON'T BE "
	DC.B	'SURPRISED'
	DC.B	' TO SEE  '
	DC.B	'DIS COOL '
	DC.B	'EFFECT IN'
	DC.B	'HER DREAM'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	'.........'
	DC.B	-1,-1,-1,-1
	DC.B	'         '
	DC.B	'         '
	DC.B	'         '
	DC.B	'         '
	EVEN
CORRES
N	SET	0
	REPT	20
	DC.L	FONTES+N
N	SET	N+8
	ENDR

N	SET	0
	REPT	20
	DC.L	FONTES+N+(160*15)
N	SET	N+8
	ENDR

N	SET	0
	REPT	20
	DC.L	FONTES+N+(160*30)
N	SET	N+8
	ENDR
FONTES	INCBIN	FNT.COD
	DS.B	160
	EVEN
HASARD	
	REPT	30
	DC	-40
	DC	40
	ENDR
;AI_CHAN.PI1 = 703 PTS
;ZAPPY.PI1 = 240
;CHOICE.PI1 = 708
;GEN4.PI1 = 1617
;GOKU1P.PI1 = 1946
;INTRO1.PI1 = 2948
;KIMAGURE.PI1 = 2032
;MADOKA.PI1 = 3345
TABLE_Y	
N	SET	0
	REPT	200
	DC	N
N	SET	N+160
	ENDR

TABLE_X

N	SET	0
	REPT	20
	DC	N
	DC.B	%10000000

	DC	N
	DC.B	%01000000

	DC	N
	DC.B	%00100000

	DC	N
	DC.B	%00010000

	DC	N
	DC.B	%00001000

	DC	N
	DC.B	%00000100

	DC	N
	DC.B	%00000010

	DC	N
	DC.B	%00000001

	DC	N+1
	DC.B	%10000000

	DC	N+1
	DC.B	%01000000

	DC	N+1
	DC.B	%00100000

	DC	N+1
	DC.B	%00010000

	DC	N+1
	DC.B	%00001000

	DC	N+1
	DC.B	%00000100

	DC	N+1
	DC.B	%00000010

	DC	N+1
	DC.B	%00000001

N	SET	N+8
	ENDR
	EVEN


	BSS
IMG_FIN	DS.B	32000
IMG_DEP	DS.B	32000

SAVE_NB_PTS	DS.L	1
PNT_PLAN	DS.L	1
CNT	DS.L	1
COMPTE_PTS	DS.L	1
COORD_X	DS	1
COORD_Y	DS	1
SCREEN1	DS.L	1
SCREEN2	DS.L	1
BUF_COD	DS.B	8*(2304/10)+2
	DS.B	256
BUFFER	DS.B	32000*2
FORME_DEP_X	DS.B	NB_PTS
	EVEN
FORME_DEP_Y	DS.B	NB_PTS*2
FORME_FIN_X	DS.B	NB_PTS
	EVEN
FORME_FIN_Y	DS.B	NB_PTS*2
FORME_DEP	DS.B	NB_PTS*4
FORME_FIN	DS.B	NB_PTS*4
SOUS_BUFFER	DS.B	NB_PASSES*4
BUFFER_COORD	DS.B	NB_PASSES*NB_PTS
BUFFER_COORD2	DS.B	NB_PASSES*NB_PTS*2
