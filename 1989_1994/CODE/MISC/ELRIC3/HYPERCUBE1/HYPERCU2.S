;HYPER-CUBE Version II . CODêE LE 14-05-93
PAS_X = 20
PAS_Y = 15
PAS_Z = 16
NB_PT_X = 12
NB_PT_Y = 10
AMP_X = 110
AMP_Y = 26
NB_SIN_X = 160
NB_SIN_Y = 100
HYPER_EFFECT = 2

	RSRESET
	RS.B	64*6
CORES_X2	RS.B	64*26
	RS.B	256
BUFFER2	RS.B	32000
ADR	RS.L	2
NB	RS.W	NB_PT_X+NB_PT_Y-1
COOR_DRAPEAU	RS.L	NB_PT_X*NB_PT_Y
COOR_GEN	RS.W	3*NB_PT_X*NB_PT_Y*10*2
SIN_X	RS.W	NB_SIN_X+100
SIN_Y	RS.W	(NB_SIN_Y+100)*10
BUF_SIN_X	RS.W	(1+NB_SIN_X*2)*10
BUF_SIN_Y	RS.W	(1+NB_SIN_Y*2)*10
TABLE_SIN_X	RS.L	3*10
TABLE_SIN_Y	RS.L	3*10
BUF_COD_DRAP	RS.B	2966
LONG_BSS_HYPER	RS.B	1

MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR.W	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE.W	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP

	BSR	PREP_ECR
	BSR	PREP_DRAPEAUX
;	MOVEQ	#1,D0
;	JSR	ZIK

	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	LEA	VBLR(PC),A0
	MOVE.L	A0,$70.W
	MOVE.W	#$2300,SR

IT_VBL	;JSR	ZIK+8
	MOVE.W	#$7,$FFFF8242.W
	MOVE.W	#$777,$FFFF8244.W
	MOVE.W	#$777,$FFFF8246.W
	MOVE.W	#$700,$FFFF8248.W
	MOVE.W	#$700,$FFFF824A.W
	MOVE.W	#$700,$FFFF824C.W
	MOVE.W	#$700,$FFFF824E.W
	BSR	VSYNC
	BSR	EFFAC_ECRAN
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.PAS_TAB
	MOVE.W	#$300,$FFFF8240.W
.PAS_TAB	BSR	GEST_DRAPEAUX
	CLR.W	$FFFF8240.W
	BSR	SWAPEC
	BRA	IT_VBL

GEST_DRAPEAUX	MOVE.L	ADR_COOR+4,A0
	LEA	BSS_HYPER+TABLE_SIN_X,A5
	LEA	BSS_HYPER+TABLE_SIN_Y,A6
	MOVE.L	ADR_EFF,A4
	ADDQ.W	#2,A4
	MOVEQ	#10-1,D7
.VACHEMENT_COOL	MOVE.L	SCREEN2,A1
	MOVE.L	(A5),A2
	MOVE.L	(A6),A3
	JSR	BSS_HYPER+BUF_COD_DRAP
	MOVE.L	(A5),A1
	ADDQ.W	#4,A1
	MOVE.W	4(A5),D0
	ADDQ.W	#2,D0
	CMPI.W	#NB_SIN_X,D0
	BLT.S	.OK_1
	MOVEQ	#0,D0
	MOVE.L	6(A5),A1
.OK_1	MOVE.L	A1,(A5)+
	MOVE.W	D0,(A5)+
	ADDQ.W	#4,A5

	MOVE.L	(A6),A1
	ADDQ.W	#4,A1
	MOVE.W	4(A6),D0
	ADDQ.W	#2,D0
	CMPI.W	#NB_SIN_Y,D0
	BLT.S	.OK_2
	MOVEQ	#0,D0
	MOVE.L	6(A6),A1
.OK_2	MOVE.L	A1,(A6)+
	MOVE.W	D0,(A6)+
	ADDQ.W	#4,A6

	DBRA	D7,.VACHEMENT_COOL

	LEA	ADR_COOR,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0),-(A0)
	MOVE.L	D0,4(A0)
	LEA	ADR_EFF,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0),-(A0)
	MOVE.L	D0,4(A0)
	RTS

EFFAC_ECRAN	MOVE.L	SCREEN2,A0
	MOVE.L	ADR_EFF,A1
	MOVEQ	#0,D0
	JSR	(A1)
	RTS

RT_EFF_D_1	REPT	1200
	MOVE.W	D0,0(A0)
	ENDR
	RTS

RT_EFF_D_2	REPT	1200
	MOVE.W	D0,0(A0)
	ENDR
	RTS

VSYNC	CMPI.W	#1,NB_VBL
	BLT.S	VSYNC
	CLR.W	NB_VBL
	RTS

VBLR	ADDQ.W	#1,NB_VBL
	RTE

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

PREP_ECR	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	MOVE.L	#BUFFER2+BSS_HYPER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN2
	MOVE.L	SCREEN1,A0
	BSR	EFF_SCR
	MOVE.L	SCREEN2,A0
	BSR	EFF_SCR
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

EFF_SCR	MOVE.W	#7999,D7
.EFF	CLR.L	(A0)+
	DBRA	D7,.EFF
	RTS

PREP_DRAPEAUX	LEA	BSS_HYPER+COOR_DRAPEAU,A0
	LEA	BSS_HYPER+NB,A1
	MOVEQ	#0,D0	;D0=X_STOP
	MOVEQ	#0,D1  ;D1=X_DEP
	MOVEQ	#0,D3  ;D3=Y_DEP
	MOVE.W	#NB_PT_X+NB_PT_Y-1,D7  ;D7=NB DE DIAGONALES
	SUBQ.W	#1,D7
RECOM_DIAG	MOVEQ	#0,D5	;COMPTEUR DE PTS A 0
	MOVE.W	D1,D2	;D2=X_ACT
	MOVE.W	D3,D4	;D4=Y_ACT
CONT_X	MOVE.W	D2,D6
	SUBI.W	#-10+(PAS_X*NB_PT_X)/2,D6
	MOVE.W	D6,(A0)+	;ON POSE LE X (3D!)
	MOVE.W	D4,D6
	SUBI.W	#-5+(PAS_Y*NB_PT_Y)/2,D6
	MOVE.W	D6,(A0)+	;ON POSE LE Y (3D!)
	ADDQ.W	#1,D5
	CMP.W	D2,D0
	BEQ.S	FIN_X
	SUBI.W	#PAS_Y,D4	;ON MONTE Y_ACT
	ADDI.W	#PAS_X,D2	;ON FAIT AVANCER X_ACT
	BRA.S	CONT_X
FIN_X	
	CMPI.W	#PAS_X*(NB_PT_X-1),D0
	BGE.S	OK_X_STOP
	ADDI.W	#PAS_X,D0	;ON MONTE X_STOP
OK_X_STOP
	CMPI.W	#PAS_Y*(NB_PT_Y-1),D3
	BGE.S	OK_Y_DEP
	ADDI.W	#PAS_Y,D3	;ON BAISSE Y_DEP
	BRA.S	APRES_TEST
OK_Y_DEP	ADDI.W	#PAS_X,D1
APRES_TEST	SUBQ.W	#1,D5
	MOVE.W	D5,(A1)+	;ON POSE LE NB DE PTS -1
	DBRA	D7,RECOM_DIAG
	MOVE.W	#$1234,(A0)

	LEA	SINUS(PC),A0
	LEA	BSS_HYPER+SIN_X,A1
	MOVE.W	#AMP_X*2,D0
.RECOM_SIN	MOVE.W	(A0),D2	;SINUS*2^15
	MULS.W	D0,D2
	SWAP	D2
	MOVE.W	D2,(A1)+
	LEA	(1600/NB_SIN_X)*2(A0),A0
	CMPI.W	#$1234,(A0)
	BNE.S	.RECOM_SIN

	LEA	SINUS(PC),A0
	LEA	BSS_HYPER+SIN_Y,A2
	MOVE.W	#AMP_Y*2,D1
.RECOM_2_SIN	MOVE.W	(A0),D2
	MULS.W	D1,D2
	SWAP	D2
	MOVE.W	D2,(A2)+
	LEA	(1600/NB_SIN_Y)*2(A0),A0
	CMPI.W	#$1234,(A0)
	BNE.S	.RECOM_2_SIN

	LEA	BSS_HYPER+BUF_COD_DRAP,A0
	LEA	BSS_HYPER+NB,A1
	LEA	ROUTINE_TYPE(PC),A2
	MOVE.W	#NB_PT_X+NB_PT_Y-1-1,D6
.RECOM_DIAG	MOVE.W	(A1)+,D0	;NB DE PTS PAR DIAGONALE -1
	MOVE.W	#$361A,(A0)+	;MOVE.W (A2)+,D3
	MOVE.W	#$381B,(A0)+	;MOVE.W (A3)+,D4
.RECOM_AGAIN	MOVE.L	A2,A3
	MOVE.W	#LONG_ROUT-1,D7
.RECOP_RT	MOVE.W	(A3)+,(A0)+
	DBRA	D7,.RECOP_RT
	DBRA	D0,.RECOM_AGAIN
	DBRA	D6,.RECOM_DIAG
	MOVE.W	#$4E75,(A0)

	LEA	CORES_X,A5
	LEA	BSS_HYPER+CORES_X2,A6
	MOVE.L	A5,BSS_HYPER+ADR
	MOVE.L	A6,BSS_HYPER+ADR+4
	LEA	-64*6(A5),A5
	LEA	-64*6(A6),A6
	MOVE.W	#-1+32*32,D7
.FUCK	MOVE.W	(A5)+,(A6)+
	DBRA	D7,.FUCK

	LEA	BSS_HYPER+COOR_GEN,A1
	LEA	ADR_COOR,A5
	LEA	BSS_HYPER+ADR,A4
	MOVEQ	#1,D5
.RECOM_ALL	MOVE.L	A1,(A5)+
	MOVE.L	(A4)+,D4
	MOVE.L	SCREEN1,D0
	SUB.L	D0,D4	;HH
	LEA	COLORS_D,A3
	LEA	BSS_HYPER+COOR_DRAPEAU,A0
	MOVE.W	#-1+NB_PT_X*NB_PT_Y,D7
.RECOM_PTS	MOVE.W	(A0)+,D0	;X
	MOVE.W	(A0)+,D1	;Y
	ADDI.W	#160,D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	ADDI.W	#100,D1
	MULU.W	#160,D1	;Y*160
	ADD.W	D4,D0
	MOVE.W	D0,(A1)+	;X*4 +HH
	MOVE.W	D1,(A1)+	;Y*160
	MOVE.W	(A3)+,(A1)+	;COULEUR
	DBRA	D7,.RECOM_PTS

	LEA	BSS_HYPER+COOR_DRAPEAU,A0
	LEA	COEFF_3D+PAS_Z*2,A2
	MOVEQ	#9-1,D6
.NEXT_Z	LEA	BSS_HYPER+COOR_DRAPEAU,A0
	LEA	COLORS_D,A3
	MOVE.W	(A2),D0
	MOVE.W	#-1+NB_PT_X*NB_PT_Y,D7
.RECOM_PTS_Z	MOVE.W	(A0)+,D1	;X
	MOVE.W	(A0)+,D2	;Y
	ADD.W	D1,D1
	ADD.W	D2,D2
	MULS.W	D0,D1
	MULS.W	D0,D2
	SWAP	D1
	SWAP	D2
	ADDI.W	#160,D1
	ADD.W	D1,D1
	ADD.W	D1,D1
	ADDI.W	#100,D2
	MULU.W	#160,D2
	ADD.W	D4,D1
	MOVE.W	D1,(A1)+	;X*4 +HH
	MOVE.W	D2,(A1)+	;Y*160
	MOVE.W	(A3)+,(A1)+	;COULEUR
	DBRA	D7,.RECOM_PTS_Z
	LEA	PAS_Z*2(A2),A2
	DBRA	D6,.NEXT_Z
	BSR	SWAPEC
	DBRA	D5,.RECOM_ALL

	MOVEQ	#0,D4

	LEA	BSS_HYPER+TABLE_SIN_X,A6
	LEA	BSS_HYPER+SIN_X,A0
	LEA	BSS_HYPER+BUF_SIN_X,A3
	MOVE.L	A3,(A6)+
	CLR.W	(A6)+
	MOVE.L	A3,(A6)+
	MOVE.W	#NB_SIN_X-1,D7
.REPEAT_X	MOVE.W	(A0)+,D0	;SIN POUR X
	ADD.W	D0,D0
	ADD.W	D0,D0
	MOVE.W	D0,(A3)+
	DBRA	D7,.REPEAT_X
	LEA	BSS_HYPER+BUF_SIN_X,A1
	MOVE.W	#NB_SIN_X-1,D7
.RECOM_FIN	MOVE.W	(A1)+,(A3)+
	DBRA	D7,.RECOM_FIN
	MOVE.W	#$1234,(A3)+

	MOVE.W	#HYPER_EFFECT,CH_1
	MOVE.W	#HYPER_EFFECT,CH_2

	LEA	COEFF_3D+PAS_Z*2,A1
	MOVEQ	#9-1,D6
.LABEL_2	LEA	BSS_HYPER+SIN_X,A2
	MOVE.L	A3,(A6)
	CLR.W	4(A6)
	MOVE.L	A3,6(A6)
	MOVEQ	#0,D0
CH_1 = *+2
	MOVE.W	#$1234,D0
	MOVE.L	D0,D1
	ADD.W	D1,D1
	ADD.L	D1,(A6)+
	ADD.W	D0,(A6)+
	ADDQ.W	#4,A6
	MOVE.W	(A1),D0	;COEFF
	MOVE.L	A3,A4
	MOVE.W	#NB_SIN_X-1,D7
.LABEL_1	MOVE.W	(A2)+,D1	;SINUS
	ADD.W	D1,D1
	MULS.W	D0,D1
	SWAP	D1
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.W	D1,(A3)+
	DBRA	D7,.LABEL_1
	MOVE.W	#NB_SIN_X-1,D7
.RECOP_FIN_X	MOVE.W	(A4)+,(A3)+
	DBRA	D7,.RECOP_FIN_X
	MOVE.W	#$1234,(A3)+
	LEA	PAS_Z*2(A1),A1
	ADDI.W	#HYPER_EFFECT,CH_1
	DBRA	D6,.LABEL_2

	LEA	BSS_HYPER+TABLE_SIN_Y,A6
	LEA	BSS_HYPER+SIN_Y,A1
	LEA	BSS_HYPER+BUF_SIN_Y,A3
	MOVE.L	A3,(A6)+
	CLR.W	(A6)+
	MOVE.L	A3,(A6)+
	MOVE.W	#NB_SIN_Y-1,D7
.REPEAT_Y	MOVE.W	(A1)+,D0
	MULS.W	#160,D0
	MOVE.W	D0,(A3)+
	DBRA	D7,.REPEAT_Y
	LEA	BSS_HYPER+BUF_SIN_Y,A0
	MOVE.W	#NB_SIN_Y-1,D7
.RECOM_FIN2	MOVE.W	(A0)+,(A3)+
	DBRA	D7,.RECOM_FIN2
	MOVE.W	#$1234,(A3)+

	LEA	COEFF_3D+PAS_Z*2,A1
	MOVEQ	#9-1,D6
.LABEL_3	LEA	BSS_HYPER+SIN_Y,A2
	MOVE.L	A3,(A6)
	CLR.W	4(A6)
	MOVE.L	A3,6(A6)
	MOVEQ	#0,D0
CH_2 = *+2
	MOVE.W	#$1234,D0
	MOVE.L	D0,D1
	ADD.W	D1,D1
	ADD.L	D1,(A6)+
	ADD.W	D0,(A6)+
	ADDQ.W	#4,A6
	MOVE.W	(A1),D0	;COEFF
	MOVE.L	A3,A4
	MOVE.W	#NB_SIN_Y-1,D7
.LABEL_4	MOVE.W	(A2)+,D1	;SINUS
	ADD.W	D1,D1
	MULS.W	D0,D1
	SWAP	D1
	MULS.W	#160,D1
	MOVE.W	D1,(A3)+
	DBRA	D7,.LABEL_4
	MOVE.W	#NB_SIN_Y-1,D7
.RECOP_FIN_Y	MOVE.W	(A4)+,(A3)+
	DBRA	D7,.RECOP_FIN_Y
	MOVE.W	#$1234,(A3)+
	LEA	PAS_Z*2(A1),A1
	ADDI.W	#HYPER_EFFECT,CH_2
	DBRA	D6,.LABEL_3

	LEA	ADR_EFF,A0
	LEA	RT_EFF_D_1(PC),A1
	LEA	RT_EFF_D_2(PC),A2
	MOVE.L	A1,(A0)+
	MOVE.L	A2,(A0)

	RTS

	;A0=COORDONNêES ( X*4, Y*160 )
	;A1=BASE ECRAN
	;A2=SIN X ( X*4 )
	;A3=SIN Y ( Y*160 )
	;A4=TABLE POUR L'EFFACAGE DE L'ECRAN
	;HH=DISTANCE EN b. ENTRE CORES_X ET SCREEN
ROUTINE_TYPE	MOVE.W	(A0)+,D0	;X*4+HH (2 NOPS)
	MOVE.W	(A0)+,D1	;Y*160 (2 NOPS)
	ADD.W	(A0)+,D1	;ON ADD LA COULEUR (0,2,4)
	ADD.W	D3,D0	;ON ADD LES SINUS (1 NOP)
	ADD.W	D4,D1	;X & Y (1 NOP)
	MOVE.W	(A1,D0.W),D2	;MOTIF (4 NOPS)
	ADD.W	2(A1,D0.W),D1	;NEW OFFSET (4 NOPS)
	OR.W	D2,(A1,D1.W)	;AFFICH. (5 NOPS)
	MOVE.W	D1,(A4)	;ON SAUVE L'OFF ECRAN
	ADDQ.W	#4,A4
	;TOTAL = 21 NOPS
LONG_ROUT = (*-ROUTINE_TYPE)/2   ; LONGUEUR EN MOTS

SINUS	INCBIN	SINUSGE2.DAT
	DC.W	$1234

COLORS_D	DCB.W	10,0
	DC.W	0,0,0,0,2
	DC.W	0,0,0,0,2,2
	DC.W	0,0,0,0,2,2,2
	DC.W	0,0,0,0,2,2,2,2
	DC.W	0,0,0,0,2,2,2,2,4
	DC.W	0,0,0,0,2,2,2,2,4,4
	DC.W	0,0,0,2,2,2,2,4,4,4
	DC.W	0,0,2,2,2,2,4,4,4,4
	DC.W	0,2,2,2,2,4,4,4,4
	DC.W	2,2,2,2,4,4,4,4
	DC.W	2,2,2,4,4,4,4
	DC.W	2,2,4,4,4,4
	DC.W	2,4,4,4,4
	DCB.W	10,4

COEFF_3D	INCBIN	COEFF.3D

NB_VBL	DS.W	1
SCREEN1	DS.L	1
SCREEN2	DS.L	1
ADR_EFF	DS.L	2
ADR_COOR	DS.L	2

	DCB.W	32*6,0
N	SET	0
CORES_X	REPT	20
	DC.W	32768,N,16384,N,8192,N,4096,N,2048,N,1024,N,512,N,256,N,128,N,64,N,32,N,16,N,8,N,4,N,2,N,1,N
N	SET	N+8
	ENDR
	DCB.W	32*6,0

	SECTION	BSS
	DS.B	256
BUFFER	DS.B	32000
BSS_HYPER	DS.B	LONG_BSS_HYPER