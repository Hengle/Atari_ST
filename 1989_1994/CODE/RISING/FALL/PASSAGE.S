LARG = 160

NB_BALLS = 1

BORD_GAUCHE	MACRO
	MOVE.W	A7,(A7)	;$8260
	MOVE.B	#0,(A7)
	ENDM

BORD_DROIT	MACRO
	MOVE.B	#0,(A6)	;$820A
	MOVE.W	A7,(A6)
	ENDM

STAB	MACRO
	MOVE.W	A7,(A7)	;$8260
	MOVE.B	#0,(A7)
	ENDM

NP	MACRO
	REPT	\1
	NOP
	ENDR
	ENDM

;   BOULOT-BOULOT :    CODAGE DES ROND (FAIT)
;                      DECALAGES DES RONDS (FAIT)
;                      CODAGE DU CODE POUR L'AFFICHAGE DES POINTS (FAIT)
;	       DECALAGES DES POINTS (FAIT)
;                      INTEGRATION DES RONDS (FAIT)
;	       INTEGRATION DES POINTS (FAIT)

MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR.W	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE.W	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP

	BSR	PREP_ECR
	BSR	PREP_BALLS
	BSR	PREP_DOTS
	BSR	PREP_POINTS
	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVE.W	#40*200-1,D7
.REMP_DEP	CLR.L	(A0)+
	CLR.L	(A1)+
	DBRA	D7,.REMP_DEP

	CLR.W	$FFFF8240.W
	MOVE.W	#$777,$FFFF8242.W

	LEA	ADR_POS,A0
	LEA	BUF_POS,A1
	LEA	20+20*NB_BALLS(A1),A2
	MOVE.L	A1,(A0)+
	MOVE.L	A2,(A0)

	LEA	ADR_EFF,A0
	LEA	BUF_EFF,A1
	LEA	12+12*NB_BALLS(A1),A2
	LEA	12+12*NB_BALLS(A2),A3
	MOVE.L	A1,(A0)+
	MOVE.L	A2,(A0)+
	MOVE.L	A3,(A0)+
	CLR.L	(A1)+
	CLR.L	(A1)+
	MOVE.L	#LIGNE_STOP2,(A1)+
	CLR.L	(A2)+
	CLR.L	(A2)+
	MOVE.L	#LIGNE_STOP2,(A2)+
	CLR.L	(A3)+
	CLR.L	(A3)+
	MOVE.L	#LIGNE_STOP2,(A3)+

	MOVE.W	#$2700,SR
	MOVE.L	#INTER_RTE,$68.W
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	CLR.B	$FFFFFA13.W
	CLR.B	$FFFFFA15.W
	MOVE.L	#VBLR,$70.W
	MOVE.W	#$2300,SR

J	JMP	J

VBL_ARTI	BSR	VSYNC
	BRA	VBL_ARTI

RIEN	RTS

ADR_REGS	DC.L	REG_DEC_1,REG_DEC_2,REG_DEC_3,REG_DEC_4
	DC.L	REG_DEC_11,REG_DEC_12,REG_DEC_13,REG_DEC_14

REG_DEC_1	DC.W	$80,$40,$20,$10,8,4,2,1 ;VALEURS DE Dn
	DC.W	0,0,1,1	        ;INCREMENTS DES An
REG_DEC_2	DC.W	8,4,2,1,$80,$40,$20,$10
	DC.W	0,1,1,8
REG_DEC_3	DC.W	$80,$40,$20,$10,8,4,2,1
	DC.W	1,1,8,8
REG_DEC_4	DC.W	8,4,2,1,$80,$40,$20,$10
	DC.W	1,8,8,9

REG_DEC_11	DC.W	0,0,0,0,0,0,0,0 ;VALEURS DE Dn
	DC.W	0,0,1,1	        ;INCREMENTS DES An
REG_DEC_12	DC.W	0,0,0,0,0,0,0,0 ;VALEURS DE Dn
	DC.W	0,1,1,8
REG_DEC_13	DC.W	0,0,0,0,0,0,0,0 ;VALEURS DE Dn
	DC.W	1,1,8,8
REG_DEC_14	DC.W	0,0,0,0,0,0,0,0 ;VALEURS DE Dn
	DC.W	1,8,8,9

ADR_POS	DS.L	2
	;SCHEMA D'UNE STRUCTURE <POSITION> :
	;          - 1.L : ADRESSE ECRAN
	;          - 1.L : ADRESSE POUR LES REG, Dn ET An
	;          - 1.L : ADRESSE DU CODE POUR LES POINTS
	;          - 1.L : ADRESSE ECRAN
	;          - 1.L : ADRESSE DU CODE POUR LE ROND
BUF_POS	DS.W	10*NB_BALLS*2+20

ADR_EFF	DS.L	3
BUF_EFF	DS.L	3*NB_BALLS*3+50

VSYNC	CMPI.W	#1,NB_VBL
	BLT.S	VSYNC
	CLR.W	NB_VBL
	RTS

VBLR	MOVE.B	#0,$FFFFFA19.W
	MOVE.B	#99,$FFFFFA1F.W       ; BORDER HAUT
	MOVE.B	#4,$FFFFFA19.W
	BCLR	#3,$FFFFFA17.W
	MOVE.L	#INTER_TMA,$134.W
	ORI.B	#$20,$FFFFFA13.W
	ORI.B	#$20,$FFFFFA07.W
	;ICI 33 LIGNES DE LIBRES
	LEA	POINTEURS,A0
	LEA	BUF_COURBE,A1
	MOVE.L	SCREEN2,D6
	MOVE.L	ADR_POS,A4
	LEA	ADR_REGS,A3
	LEA	TABLE_ADR_ROND,A5
	LEA	TABLE_ADR,A6
	LEA	TABLE_ADR2,A2
	MOVE.L	ADR_EFF,D5

	MOVEQ	#NB_BALLS-1,D7
.CALC_ALL	MOVEQ	#0,D1
	MOVE.W	(A0),D0	;D0=X
;	CMPI.W	#-60,D0
	BLT.S	.TROP_PETIT
	CMPI.W	#260,D0
	BGT.S	.TROP_GRAND
	MOVE.W	2(A0),D1	;D1=PT_Y
	MOVE.W	(A1,D1.W),D1	;D1=Y
	MULS.W	#LARG,D1
	MOVE.W	D0,D2
	ANDI.W	#$FFF0,D2
	LSR.W	#1,D2
	ADD.W	D2,D1	;D1=OFFSET ECRAN
	ADD.L	D6,D1
	MOVE.L	D1,(A4)+	;ADRESSE ECRAN
	ANDI.W	#12,D0
	MOVE.L	(A5,D0.W),(A4)+	;ADRESSE DU CODE POUR LE ROND
	MOVE.L	D1,(A4)+   ;ADRESSE ECRAN
	MOVE.L	(A3,D0.W),D4	;ADRESSE POUR D1-D7,A0-A3
	MOVE.W	D0,D3
	MOVE.L	D4,(A4)+
	MOVE.W	4(A0),D0
	LEA	TABLE_ADR,A6
	MOVE.L	(A6,D0.W),(A4)+	;ADRESSE DU CODE POUR LES POINTS

	MOVE.L	D5,A6
	MOVE.L	D1,(A6)+
	MOVE.L	16(A3,D3.W),(A6)+
	MOVE.L	(A2,D0.W),(A6)+
	MOVE.L	A6,D5

	ADDQ.W	#4,D0
	CMPI.W	#140*4,D0
	BLT.S	.OK
	MOVEQ	#0,D0
.OK	MOVE.W	D0,4(A0)
	
.TROP_GRAND	;SUBQ.W	#4,(A0)
	ADDQ.W	#2,2(A0)
.TROP_PETIT	ADDQ.W	#6,A0
	DBRA	D7,.CALC_ALL
	CLR.L	(A4)+
	MOVE.L	#LIGNE_STOP,(A4)+
	MOVE.L	D5,A6
	CLR.L	(A6)+
	CLR.L	(A6)+
	MOVE.L	#LIGNE_STOP2,(A6)+

	LEA	ADR_EFF,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0)+,D1
	MOVE.L	(A0),D2
	MOVE.L	D1,(A0)
	MOVE.L	D0,-(A0)
	MOVE.L	D2,-(A0)

;	MOVE.W	#$300,$FFFF8240.W
INTER_RTE	RTE

INTER_TMA:	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVE	#$2100,SR
full
	MOVEQ	#16,D0
	LEA	$FFFF8209.W,A0
	LEA	$FFFF820A.W,A6
	LEA	$FFFF8260.W,A3

	MOVEQ	#2,D3
	MOVEQ	#0,D4

	STOP	#$2100

	MOVE	#$2700,SR
	MOVE	#$2300,(SP)

	MOVEQ	#29,D2
SYNCHROA:	DBF	D2,SYNCHROA
	NOP

	MOVE.B	D4,(A6)	;820A
	REPT	6
	NOP
	ENDR
	MOVE.B	D3,(A6)	;820A

	;SYNCHRO ICI...
.SYNCHRO	MOVE.B	(A0),D2
	BEQ.S	.SYNCHRO
	SUB.B	D2,D0
	LSL.W	D0,D0

	DCB.W	97-46-5,$4E71
	MOVE.L	A7,AUTO_MOD1	;5
	MOVE.W	#$8260,A7	;2
	MOVE.W	#$820A,A6	;2
	MOVE.L	ADR_EFF,A4	;5
	MOVE.L	(A4)+,A0	;3
	MOVE.L	A0,A1	;1
	MOVE.L	A0,A2	;1
	MOVE.L	A0,A3	;1
	MOVE.L	(A4)+,A5	;3
	MOVEM.W	(A5)+,D0-D7	;11
	ADDA.W	(A5)+,A0	;3
	ADDA.W	(A5)+,A1	;3
	ADDA.W	(A5)+,A2	;3
	ADDA.W	(A5)+,A3	;3
	MOVE.L	(A4)+,A5   ;3;A5=ADRESSE DU CODE DES POINTS
	JMP	(A5)	;2

LIGNE_STOP2	BORD_GAUCHE
	NP	88
	BORD_DROIT
	MOVE.L	ADR_POS,A4	;5
	MOVEQ	#0,D0	;1
	MOVE.L	(A4)+,A0	;3
	MOVE.L	(A4)+,A5	;3
	NOP
	STAB
	NP	12-2
	JMP	(A5)	;2
LIGNE_STOP
AUTO_MOD1 = *+2
	LEA	$12345678,A7
	BSR	SWAPEC

	ST	$FFFF8240.W
	DCB.W	128,$4E71
	SF	$FFFF8240.W

	LEA	ADR_POS,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0),-(A0)
	MOVE.L	D0,4(A0)

	RTE

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

PREP_ECR	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#64000,D0
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

PREP_POINTS	;ON GENERE LES POINTEURS D'ANIMATION ET D'EMPLACEMENT
	;DES SPHERES
	LEA	POINTEURS,A0
	LEA	RANDOM,A1
	MOVEQ	#NB_BALLS-1,D7
.SORT_TOUT	MOVE.W	#260,D0
	ADD.W	D0,D0
	MULS.W	(A1)+,D0
	SWAP	D0
	ANDI.W	#$FFFC,D0
	MOVE.W	D0,(A0)+	;X AU HASARD
	MOVE.W	#LONG_CRB+1,D0
	ADD.W	D0,D0
	MULS.W	(A1)+,D0
	SWAP	D0
	ANDI.W	#$FFFE,D0
	MOVE.W	D0,(A0)+      ;POSITION DU REBOND AU HASARD
	MOVE.W	#140,D0
	ADD.W	D0,D0
	MULS.W	(A1)+,D0
	SWAP	D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	MOVE.W	D0,(A0)+  ;No D'ANIMATION DES SPHERES AU HASARD
	DBRA	D7,.SORT_TOUT
	;ON RECOPIE SUFFISAMMENT DE FOIS LA COURBE DE REBOND EN
	;MEMOIRE POUR NE PAS AVOIR A BOUCLER
	LEA	BUF_COURBE,A1
	MOVEQ	#20-1,D7
.RECOP_ALL	LEA	COURBE_TEST,A0
	MOVE.W	#LONG_CRB,D6
.RECOP_ONE	MOVE.W	(A0)+,(A1)+
	DBRA	D6,.RECOP_ONE
	DBRA	D7,.RECOP_ALL
	RTS

PREP_DOTS	LEA	BUF_COS,A1
	MOVEQ	#2,D7
.RECOP_3_FOIS	LEA	TABLE_COS,A0
	MOVE.W	#LONG_TB,D6
.RECOP_TB	MOVE.W	(A0)+,(A1)+
	DBRA	D6,.RECOP_TB
	DBRA	D7,.RECOP_3_FOIS

	MOVE.L	#BUF_COD_DOTS2,PT_COD2

	LEA	BUF_COS,A0	;PT_COS
	LEA	210(A0),A1	;PT_SIN
	MOVE.L	A0,PT_COS
	MOVE.L	A1,PT_SIN

	LEA	BUF_COD_DOTS,A3
	LEA	TABLE_ADR,A5
	MOVE.W	#140-1,D7
ROTATIONS	MOVE.W	D7,A6
	BSR	MK_ROTATE

	LEA	BUF_ROTATê,A0
	LEA	COEFF_3D,A1
;	MOVE.L	A3,A4
;	ADDQ.W	#2,A3
	MOVE.L	A3,(A5)
	MOVE.L	PT_COD2,140*4(A5)
	MOVE.L	SCREEN1,A3
	MOVE.W	(A0)+,D7
	SUBQ.W	#1,D7
;	MOVEQ	#0,D6
.NEXT_POINT	MOVE.W	(A0)+,D0	;X
	MOVE.W	(A0)+,D1	;Y
	MOVE.W	(A0)+,D2	;Z
	BGE.S	.PAS
	ADD.W	D2,D2
	MOVE.W	(A1,D2.W),D2	;COEFF 3D
	MULS.W	D2,D0
	MULS.W	D2,D1
	ASR.L	#8,D0
	ASR.L	#8,D1
	ADDI.W	#31,D0
	ADDI.W	#31,D1
	TST.W	D0
	BLT.S	.PAS
	MULS.W	#LARG,D1
	MOVE.W	D0,D2
	ANDI.W	#$FFF0,D2
	LSR.W	#1,D2
	ADD.W	D2,D1
	ANDI.W	#15,D0
	ADD.W	D0,D0
	LEA	TABLE_COD_EOR,A2
	MOVE.W	(A2,D0.W),D0	;CODE DU EOR
	MOVE.W	D0,(A3)+
	MOVE.W	D1,(A3)+
;	ADDQ.W	#1,D6
.PAS	DBRA	D7,.NEXT_POINT
	MOVE.L	A3,A4
	LEA	ROUT_TYPE_2(PC),A2
	MOVE.W	#LONG_ROUT2,D7
.RECOP_PRE_ROUT	MOVE.W	(A2)+,(A3)+
	DBRA	D7,.RECOP_PRE_ROUT
	MOVE.W	#$4E75,(A3)+
	MOVE.L	SCREEN1,A0
	MOVE.L	(A5)+,A1
	BSR	INTEGRE
	MOVE.L	A1,MOD_2

	MOVE.L	SCREEN1,A0
.CONTINUTO	CMPA.L	A4,A0
	BEQ.S	.FINITO
	MOVE.W	(A0),D0
	LEA	TABLE_COD_EOR,A2
	LEA	TABLE_COD_MOVE,A3
	MOVEQ	#15,D7
.CACAPABO	CMP.W	(A2)+,D0
	BNE.S	.PROUT
	MOVE.W	(A3)+,(A0)+
	BRA.S	.CACA
.PROUT	ADDQ.W	#2,A3
	DBRA	D7,.CACAPABO
	MOVE.W	#$700,$FFFF8240.W
	ILLEGAL
.CACA	ADDQ.W	#2,A0
	BRA.S	.CONTINUTO
.FINITO
	LEA	ROUT_TYPE_1(PC),A2
	MOVE.W	#LONG_ROUT,D7
.RECOP_PRE_ROUT2
	MOVE.W	(A2)+,(A4)+
	DBRA	D7,.RECOP_PRE_ROUT2
	MOVE.W	#$4E75,(A4)+
	MOVE.L	SCREEN1,A0
	MOVE.L	PT_COD2,A1
	BSR	INTEGRE
	MOVE.L	A1,PT_COD2
MOD_2 = *+2
	LEA	$12345678,A3
	MOVE.W	A6,D7
	ADDI.W	#$123,$FFFF8240.W
	DBRA	D7,ROTATIONS
;	MOVE.W	#$1234,(A5)+

	RTS

TABLE_COD_EOR	DC.W	$B128,$B328,$B528,$B728
	DC.W	$B929,$BB29,$BD29,$BF29
	DC.W	$B12A,$B32A,$B52A,$B72A
	DC.W	$B92B,$BB2B,$BD2B,$BF2B

TABLE_COD_MOVE	DC.W	$1140,$1141,$1142,$1143
	DC.W	$1344,$1345,$1346,$1347
	DC.W	$1540,$1541,$1542,$1543
	DC.W	$1744,$1745,$1746,$1747

MK_ROTATE	MOVE.L	A3,-(SP)
	MOVE.L	PT_COS,A0
	MOVE.L	PT_SIN,A1
	MOVE.W	(A0)+,D5	;COS
	MOVE.W	(A1)+,D6	;SIN
	MOVE.L	A0,PT_COS
	MOVE.L	A1,PT_SIN
	LEA	COOR_SPHERES,A2
	MOVEQ	#0,D7
	LEA	BUF_ROTATê,A4
	MOVE.L	A4,A3
	ADDQ.W	#2,A3
.CONT_ROT	CMPA.L	#FIN_COOR,A2
	BEQ.S	.FIN_ROT
	MOVE.W	(A2)+,D0	;X
	MOVE.W	(A2)+,D1	;Y
	MOVE.W	(A2)+,D2	;Z
	;ROTATION Z
	MOVE.W	D0,D3	;D3=X
	MOVE.W	D1,D4	;D4=Y
	MULS.W	D5,D0	;D0=X*COS T
	MULS.W	D6,D3	;D3=X*SIN T
	MULS.W	D5,D1	;D1=Y*COS T
	MULS.W	D6,D4	;D4=Y*SIN T
	SUB.L	D4,D0	;D0=X*COS T-Y*SIN T
	ADD.L	D3,D1	;D1=Y*COS T+X*SIN T
	ASR.L	#8,D0
	ASR.L	#8,D1
	;ROTATION X
	MOVE.W	D1,D3	;D3=Y
	MOVE.W	D2,D4	;D4=Z
	MULS.W	D5,D1	;D1=Y*COS T
	MULS.W	D6,D3	;D3=Y*SIN T
	MULS.W	D5,D2	;D2=Z*COS T
	MULS.W	D6,D4	;D4=Z*SIN T
	SUB.L	D4,D1
	ADD.L	D3,D2
	ASR.L	#8,D1
	ASR.L	#8,D2
	;ROTATION Y
	MOVE.W	D2,D3	;D3=Z
	MOVE.W	D0,D4	;D4=X
	MULS.W	D5,D2	;D2=Z*COS T
	MULS.W	D6,D3	;D3=Z*SIN T
	MULS.W	D5,D0	;D0=X*COS T
	MULS.W	D6,D4	;D4=X*SIN T
	SUB.L	D4,D2
	ADD.L	D3,D0
	ASR.L	#8,D2
	ASR.L	#8,D0
	;
.PROUT	MOVE.W	D0,(A3)+
	MOVE.W	D1,(A3)+
	MOVE.W	D2,(A3)+
	ADDQ.W	#1,D7
	BRA.S	.CONT_ROT
.FIN_ROT	MOVE.W	D7,(A4)
	MOVE.L	(SP)+,A3
	RTS

PREP_BALLS	LEA	SPRITE,A0
	MOVE.L	SCREEN1,A1
	LEA	TABLE_UTIL(PC),A3
	MOVE.W	#60-1,D7
.TRAC_ALL	MOVE.W	(A0)+,D0	;X1
	MOVE.W	(A0)+,D1	;X2
	SUB.W	D0,D1
	MOVE.W	D0,D2
	ANDI.W	#$FFF0,D2
	LSR.W	#1,D2
	MOVE.L	A1,A2
	ADDA.W	D2,A2
	ANDI.W	#15,D0
	ADD.W	D0,D0
	MOVE.W	(A3,D0.W),D0	;MOTIF DE DEPART
.TRAC_LIGNE	OR.W	D0,(A2)
	ROR.W	#1,D0
	CMPI.W	#$8000,D0
	BNE.S	.LAB1
	ADDQ.W	#8,A2	
.LAB1	DBRA	D1,.TRAC_LIGNE
	MOVE.W	#$5555,16(A2)
	LEA	160(A1),A1
	DBRA	D7,.TRAC_ALL

	LEA	BUF_COD_ROND,A1
	LEA	TABLE_ADR_ROND,A6
	BSR	COD_ROND
	BSR	DECAL_ROND
	BSR	COD_ROND
	BSR	DECAL_ROND
	BSR	COD_ROND
	BSR	DECAL_ROND
	BSR	COD_ROND
	RTS

COD_ROND	BSR	SEARCH
	MOVE.L	A1,(A6)+
	MOVE.L	A1,-(SP)
	MOVE.L	A1,A5
	MOVE.L	SCREEN2,A1	;BUFFER DE CODE PROVISOIRE
	MOVE.W	#$4CBA,(A1)	;MOVEM PROVISOIRE...
			;...POUR L'INTEGRATION
	ADDQ.W	#6,A1	;DE LA PLACE POUR LE MOVEM		
	MOVE.L	SCREEN1,A0
	MOVEQ	#0,D5	;OFFSET DE DEPART
	MOVEQ	#60-1,D7
CODE_ALL_ONE	MOVE.L	D5,D4
	MOVE.L	A0,A2
NEXT_WORD	TST.W	(A2)
	BEQ.S	RIEN_DU_TOUT
	CMPI.W	#-1,(A2)
	BEQ.S	MOVE_MOINS_1
	MOVE.W	(A2),D0
	NOT.W	D0	;MOTIF
	;ON TESTE SI LA VALEUR N'EST PAS CONTENUE DANS TABLE_MAX
	LEA	TABLE_MAX,A4
	MOVE.L	#$268C368,D3
	MOVEQ	#7-1,D6
.ESSAIE_ENCORE	CMP.W	(A4),D0
	BEQ.S	.TROUVê
	ADDI.W	#$200,D3
	ADDQ.W	#2,A4
	DBRA	D6,.ESSAIE_ENCORE
	;ON POSE UN ANDI.W
	SWAP	D3
	MOVE.W	D3,(A1)+    ;CODE DU ANDI.W #Imm,d16(A0)
	MOVE.W	D0,(A1)+
	MOVE.W	D4,(A1)+	;OFFSET
	BRA.S	RIEN_DU_TOUT
.TROUVê	MOVE.W	D3,(A1)+
	MOVE.W	D4,(A1)+
	BRA.S	RIEN_DU_TOUT
	;ON POSE UN MOVE D0
MOVE_MOINS_1	MOVE.W	#$3140,(A1)+	;CODE DU MOVE.W D0,d16(A0)
	MOVE.W	D4,(A1)+
RIEN_DU_TOUT	ADDQ.W	#8,A2
	ADDQ.W	#8,D4
	CMPI.W	#$5555,(A2)
	BNE.S	NEXT_WORD
	LEA	160(A0),A0
	ADDI.W	#160,D5
	DBRA	D7,CODE_ALL_ONE
	LEA	ROUT_TYPE_1(PC),A2
	MOVE.W	#LONG_ROUT,D7
.RECOP_PRE_ROUT	MOVE.W	(A2)+,(A1)+
	DBRA	D7,.RECOP_PRE_ROUT
	MOVE.W	#$4E75,(A1)+
	MOVE.L	(SP)+,A1	;ADRESSE DESTINATION
	MOVE.L	SCREEN2,A0	;ADRESSE DU CODE A INTEGRER
	BSR	INTEGRE
	LEA	2*5(A5),A5	;ESPACE DE 5 NOPS
	MOVE.L	#$4CBA00FE,(A5)+
	MOVE.L	A1,D4
	LEA	TABLE_MAX,A0
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	MOVE.W	(A0)+,(A1)+
	SUB.L	A5,D4
	MOVE.W	D4,(A5)
	RTS

SEARCH	MOVE.L	SCREEN1,A2
	LEA	TABLE_IT,A4
	MOVEQ	#60-1,D7
.SEARCH_ALL	MOVE.L	A2,A0
.TOO	TST.W	(A0)
	BEQ.S	.NEXT_WORD
	CMPI.W	#$5555,(A0)
	BEQ.S	.NEXT_LINE
	MOVE.W	(A0),D0
	NOT.W	D0	;IL FAUT UN MASQUE...TSS...
	LEA	TABLE_IT,A3
.TRY_NEXT	CMPA.L	A4,A3
	BEQ.S	.NEW_VALUE
	CMP.W	(A3),D0
	BEQ.S	.PLUS_1
	ADDQ.W	#4,A3
	BRA.S	.TRY_NEXT
.PLUS_1	ADDQ.W	#1,2(A3)
	BRA.S	.NEXT_WORD
.NEW_VALUE	MOVE.W	D0,(A4)+
	MOVE.W	#1,(A4)+
.NEXT_WORD	ADDQ.W	#8,A0
	BRA.S	.TOO
.NEXT_LINE	LEA	160(A2),A2
	DBRA	D7,.SEARCH_ALL
	;SECTION: PROCEDURE DE TRI
	LEA	TABLE_MAX,A2
	MOVEQ	#0,D4	;GAIN TOTAL EN NOPS
	MOVEQ	#7-1,D7
.ROLL_AND_ROLL	LEA	TABLE_IT,A0
	MOVEQ	#0,D6	;MAXI DE DEPART...
.CONT_F	CMPA.L	A4,A0
	BEQ.S	.FINI_F
	CMP.W	2(A0),D6
	BGT.S	.NOT_DIS_ONE
	TST.W	(A0)
	BEQ.S	.NOT_DIS_ONE
	MOVE.L	A0,A3	;ON SAUVE L'ADRESSE DU MAXI
	MOVE.W	2(A0),D6	;NOUVEAU MAXI
.NOT_DIS_ONE	ADDQ.W	#4,A0
	BRA.S	.CONT_F
.FINI_F	MOVE.W	(A3),(A2)+
	ADD.W	D6,D4
	CLR.W	2(A3)
	DBRA	D7,.ROLL_AND_ROLL
	SUBI.W	#11,D4	;TEMPS DU MOVEM POUR 7 .W
	RTS

DECAL_ROND	MOVE.L	SCREEN1,A2
	MOVEQ	#60-1,D7
DEC_ALL	MOVE.L	A2,A0
	MOVEQ	#0,D1
DEC_LINE	MOVEQ	#0,D0
	CMPI.W	#$5555,(A0)
	BEQ.S	NEXT_LINE
	MOVE.W	(A0),D0
	ROR.L	#4,D0
	OR.W	D1,D0
	MOVE.W	D0,(A0)
	SWAP	D0
	MOVE.W	D0,D1
	ADDQ.W	#8,A0
	BRA.S	DEC_LINE
NEXT_LINE	LEA	160(A2),A2
	DBRA	D7,DEC_ALL
	RTS

TABLE_UTIL	DC.W	$8000,$4000,$2000,$1000,$800,$400,$200,$100,$80,$40,$20,$10,8,4,2,1

	;A0=ADRESSE DU CODE A INTEGRER
	;A1=ADRESSE DU BUFFER RECEVANT LE CODE INTEGRê
INTEGRE	MOVE.L	A5,-(SP)
	LEA	INTEGRE_SUIT(PC),A3
	SF	FLAG_FINI_INT
.CONT_INT_1	
;	MOVE.L	#$4E714E71,(A1)+
;	MOVE.L	#$4E714E71,(A1)+
;	MOVE.W	#$4E71,(A1)+
	MOVE.L	#$3E8F1EBC,(A1)+
	MOVE.W	#$0000,(A1)+
	MOVEQ	#88,D2
	BSR	DDDF
;	MOVE.L	#$4E714E71,(A1)+
;	MOVE.L	#$4E714E71,(A1)+
;	MOVE.W	#$4E71,(A1)+
	MOVE.L	#$1CBC0000,(A1)+
	MOVE.W	#$3C8F,(A1)+
	MOVEQ	#13,D2
	BSR	DDDF
;	MOVE.L	#$4E714E71,(A1)+
;	MOVE.L	#$4E714E71,(A1)+
;	MOVE.W	#$4E71,(A1)+
	MOVE.L	#$3E8F1EBC,(A1)+
	MOVE.W	#$0000,(A1)+
	MOVEQ	#12,D2
	BSR	DDDF
	ADDQ.W	#1,D6
	TST.B	FLAG_FINI_INT
	BEQ.S	.CONT_INT_1
	SUBQ.W	#4,A1	;ON RECULE DE 2 NOPS POUR...
	MOVE.W	#$4ED5,(A1)+	;...POSER UN 'JMP (A5)'.
	MOVE.L	(SP)+,A5
	RTS

DDDF	TST.B	FLAG_FINI_INT
	BNE.S	COMPLETE
	JMP	(A3)
INTEGRE_SUIT	MOVE.W	(A0),D0
	LEA	INSTRUCTIONS_INT,A5
	MOVE.W	#NB_INSTRUCT,D7
.GOTO	CMP.W	(A5)+,D0
	BEQ.S	.FIND
	ADDQ.W	#6,A5
	DBRA	D7,.GOTO
	MOVE.W	#$700,$FFFF8240.W
	ILLEGAL
.FIND	ADDQ.W	#2,A5
	CMP.W	(A5),D2
	BGE.S	.CONTINUE
	LEA	.CONTINUE(PC),A3
	BRA	COMPLETE
.CONTINUE	LEA	INTEGRE_SUIT(PC),A3
	SUB.W	(A5)+,D2
	MOVE.W	(A5)+,D3
	CMPI.W	#$4E75,D0
	BNE.S	.NO
;	LEA	.RETOUR_RTS(PC),A3
;	CMPI.W	#4,D2
;	BLT.S	COMPLETE
.RETOUR_RTS	ST	FLAG_FINI_INT
;	MOVE.W	#$4E75,(A1)+
;	SUBQ.W	#4,D2
	BRA.S	COMPLETE
.NO
.COPY_2	MOVE.W	(A0)+,(A1)+
	DBRA	D3,.COPY_2
	TST.B	FLAG_FINI_INT
	BEQ.S	INTEGRE_SUIT
COMPLETE	SUBQ.W	#1,D2
	BGE.S	.OK
	RTS
.OK	MOVE.W	#$4E71,(A1)+
	DBRA	D2,.OK
	RTS

INSTRUCTIONS_INT
	DC.W	$B128,0,4,1	;EOR.B Dn,d16(A0)
	DC.W	$B328,0,4,1	;0<=n<=7
	DC.W	$B528,0,4,1
	DC.W	$B728,0,4,1
	DC.W	$B929,0,4,1
	DC.W	$BB29,0,4,1
	DC.W	$BD29,0,4,1
	DC.W	$BF29,0,4,1
	DC.W	$B12A,0,4,1
	DC.W	$B32A,0,4,1
	DC.W	$B52A,0,4,1
	DC.W	$B72A,0,4,1
	DC.W	$B92B,0,4,1
	DC.W	$BB2B,0,4,1
	DC.W	$BD2B,0,4,1
	DC.W	$BF2B,0,4,1

	DC.W	$1140,0,3,1
	DC.W	$1141,0,3,1
	DC.W	$1142,0,3,1
	DC.W	$1143,0,3,1
	DC.W	$1344,0,3,1
	DC.W	$1345,0,3,1
	DC.W	$1346,0,3,1
	DC.W	$1347,0,3,1
	DC.W	$1540,0,3,1
	DC.W	$1541,0,3,1
	DC.W	$1542,0,3,1
	DC.W	$1543,0,3,1
	DC.W	$1744,0,3,1
	DC.W	$1745,0,3,1
	DC.W	$1746,0,3,1
	DC.W	$1747,0,3,1

	DC.W	$C368,0,4,1	;AND.W Dn,d16(A0)
	DC.W	$C568,0,4,1	;1<=n<=7
	DC.W	$C768,0,4,1
	DC.W	$C968,0,4,1
	DC.W	$CB68,0,4,1
	DC.W	$CD68,0,4,1
	DC.W	$CF68,0,4,1

	MOVE.L	(A4)+,A0	;3
	DC.W	0,3,0
	MOVE.L	A0,A1	;1
	DC.W	0,1,0
	MOVE.L	A0,A2	;1
	DC.W	0,1,0
	MOVE.L	A0,A3	;1
	DC.W	0,1,0
	MOVE.L	(A4)+,A5	;3
	DC.W	0,3,0
	DC.W	$4C9D,0,11,1
	ADDA.W	(A5)+,A0	;3
	DC.W	0,3,0
	ADDA.W	(A5)+,A1	;3
	DC.W	0,3,0
	ADDA.W	(A5)+,A2	;3
	DC.W	0,3,0
	ADDA.W	(A5)+,A3	;3
	DC.W	0,3,0
	MOVE.L	(A4)+,A5   ;3;A5=ADRESSE DU CODE DES POINTS
	DC.W	0,3,0
	MOVEQ	#0,D0
	DC.W	0,1,0

	DC.W	$3140,0,3,1	;MOVE.W D0,d16(A0)

	DC.W	$268,0,5,2	;ANDI.W #$Imm,d16(A0)

	DC.W	$4E75,0,4,0	;RTS

	DC.W	$4CBA,0,11,2	;MOVEM...
NB_INSTRUCT = ((*-INSTRUCTIONS_INT)/8)-1

	;SCHEMA DES SOUS-ROUTINES A INCLURE AU DEBUT
ROUT_TYPE_1	;...AU DEBUT DES POINTS
	MOVE.L	(A4)+,A0	;3
	MOVE.L	A0,A1	;1
	MOVE.L	A0,A2	;1
	MOVE.L	A0,A3	;1
	MOVE.L	(A4)+,A5	;3
	MOVEM.W	(A5)+,D0-D7	;11
	ADDA.W	(A5)+,A0	;3
	ADDA.W	(A5)+,A1	;3
	ADDA.W	(A5)+,A2	;3
	ADDA.W	(A5)+,A3	;3
	MOVE.L	(A4)+,A5   ;3;A5=ADRESSE DU CODE DES POINTS
	;TOTAL = 35 NOPS
LONG_ROUT = ((*-ROUT_TYPE_1)/2)-1

ROUT_TYPE_2	;...AU DEBUT DES RONDS
	MOVEQ	#0,D0	;1
	MOVE.L	(A4)+,A0    ;3;ADRESSE ECRAN
	MOVE.L	(A4)+,A5    ;3;ADRESSE DU CODE POUR LE ROND
LONG_ROUT2 = ((*-ROUT_TYPE_2)/2)-1

RANDOM	INCBIN	RND.RND

	;COURBE DE 408 OCTETS
COURBE_TEST	INCBIN	REB.CRB
LONG_CRB = ((*-COURBE_TEST)/2)-1

SPRITE	INCBIN	MOTIF.GFX

TABLE_COS	INCBIN	TB_SIN.SIN
LONG_TB = ((*-TABLE_COS)/2)-1

COOR_SPHERES	INCBIN	COOR_SPH.COR
FIN_COOR

	INCBIN	COEFF.SPE
COEFF_3D

	SECTION	BSS
FLAG_FINI_INT	DS.B	1
	EVEN
NB_VBL	DS.W	1
SCREEN1	DS.L	1
SCREEN2	DS.L	1
	DS.B	256+3000
BUFFER	DS.B	128000
TABLE_ADR	DS.L	140
TABLE_ADR2	DS.L	140
TABLE_IT	DS.W	2*50
TABLE_MAX	DS.W	7
BUF_COS	DS.W	(LONG_TB+1)*3
TABLE_ADR_ROND	DS.L	4
PT_SIN	DS.L	1
PT_COS	DS.L	1
PT_COD2	DS.L	1
POINTEURS	DS.W	3*NB_BALLS
BUF_COURBE	DS.B	10000
BUF_ROTATê	DS.W	3*400
BUF_COD_ROND	DS.B	6000
BUF_COD_DOTS	DS.B	130000
BUF_COD_DOTS2	DS.B	130000