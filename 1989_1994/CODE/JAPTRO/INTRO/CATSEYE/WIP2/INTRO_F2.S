;MODE=1 depack data from a0 to a0 
;MODE=0 depack data from a0 to a1 (RESTORE SPACE a 1 inutile! si MODE=0)
;PIC_ALGO = 0 decrunch file not encoded with special picture algorythm.
;PIC_ALGO = 1 decrunch all files with or without picture algorythm.
;DEC_SPACE = (lesser decrunch space is gived after packing by atomik v3.5)
;RESTORE_SPACE = 1 the allocated decrunch space will be restored .
;RESTORE_SPACE = 0 the allocated decrunch space will not be restored.

MODE:	EQU	0
PIC_ALGO:	EQU	1
DEC_SPACE:	EQU	$0002
RESTORE_SPACE:	EQU	0

TIME1 = 50*7
TIME2 = 50*14
TIME3 = 50*18
TIME4 = 50*18+4
TIME5 = 50*18+10

LONGUEUR = 32
NB_ZOOMS = 120
STEP_INTER_Z = 12

PT_DEPART = 0
NB_STARS = 200
VITESSE = 4
P = 256
P_DEC = 8
X_CENTER = 160
Y_CENTER = 100
LIM_Z_1 = 65
LIM_Z_2 = 300
SHOW_TIME = 1
ROTATION = 1
CLIP_HAUT = 0
CLIP_BAS = 199
CLIP_DROIT = 319
CLIP_GAUCHE = 0


MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR.W	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE.W	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP

	MOVE.L	#FIN,$008.W
	MOVE.L	#FIN,$00C.W
	MOVE.L	#FIN,$010.W
	MOVE.L	#FIN,$014.W

*1) Calcule les Çtoiles
	MOVE.L	#OFFSET_TABLE,-(SP)
	MOVE.L	#BUF_STARS,-(SP)
	MOVE.L	#DATA_STARS,-(SP)
	MOVE.L	#PT_STARS,-(SP)
	JSR	CALCULE_STARS

	CLR.L	$FFFF8240.W
	CLR.L	$FFFF8244.W
	CLR.L	$FFFF8248.W
	CLR.L	$FFFF824C.W
	CLR.L	$FFFF8250.W
	CLR.L	$FFFF8254.W
	CLR.L	$FFFF8258.W
	CLR.L	$FFFF825C.W


*2) Initialise les samples + les musiques
	LEA	BEAT,A0
	;MOVE.W	#((TEST_FIN-BEAT)/2)-1,D7
.CONT	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	CMP.L	#FINI,A0
	BNE.S	.CONT
	;DBRA	D7,.CONT

	LEA	BEAT,A0
	LEA	TEST_FIN,A1
	MOVE.W	#255,D7
.A	MOVE.B	(A0)+,(A1)+
	DBRA	D7,.A
	MOVE.L	BEAT1,A0
	MOVE.L	#BEAT,BEAT1

	MOVEQ	#1,D0
	JSR	ZIK
	CLR.L	TIME
*3) S'occupe des Çcrans, des gfxs de Son Goku
	move.l	#BUFFERSCR,d0
	CLR.B	D0
	move.l	d0,SCREEN_CAT		

	BSR	PREP_ECR
	BSR	PREP_ALL

	LEA	DATA_HS,A0
	MOVE.L	A0,POIT

	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	CLR.B	$FFFFFA1B.W
	CLR.B	$FFFFFA13.W
	CLR.B	$FFFFFA15.W

	BSET	#0,$FFFFFA07.W
	BSET	#0,$FFFFFA13.W

	MOVE.L	#VBLR,$70.W
	MOVE.L	#INTER_RTE,$68.W
	MOVE.L	#TB,$120.W
	MOVE.W	#$2300,SR
BARRAGE	BRA.S	BARRAGE
	JMP	INTRO_PART_TWO
VBLR
	CLR.B	$FFFFFA1B.W
	MOVE.B	#0,$FFFFFA19.W
	MOVE.B	#99,$FFFFFA1F.W
	MOVE.B	#4,$FFFFFA19.W
	BCLR	#3,$FFFFFA17.W
	MOVE.L	#INTER_TMA,$134.W
	ORI.B	#$20,$FFFFFA13.W
	ORI.B	#$20,$FFFFFA07.W

	CLR.L	$FFFF8240.W
	CLR.L	$FFFF8244.W
	CLR.L	$FFFF8248.W
	CLR.L	$FFFF824C.W
	CLR.L	$FFFF8250.W
	CLR.L	$FFFF8254.W
	CLR.L	$FFFF8258.W
	CLR.L	$FFFF825C.W
	JSR	ZIK+8
	MOVE	#$9999,FIN_TABLO
	MOVE	#$9999,FIN_TABLO2
	ADDQ.L	#1,TIME

	CMPI.L	#TIME3,TIME
	BLT.S	INTER_RTE
	LEA	DEG,A6
MOD_DEG	EQU	*+2
	LEA	0(A6),A6
	CMPI	#$9999,(A6)
	BEQ.S	INTER_RTE2
;	MOVEM.L	(A6),D0-D7
;	MOVEM.L	D0-D7,$FFFF8240.W
	MOVE.L	A6,MOD_COUL
	ADDQ.L	#1,CNT_DEG
	CMPI.L	#5,CNT_DEG
	BNE.S	INTER_RTE
	CLR.L	CNT_DEG
	ADD	#32,MOD_DEG
INTER_RTE	RTE
INTER_RTE2	MOVE.L	#$99999999,TIME
	RTE
CNT_DEG	DC.L	0
INTER_TMA:	
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVE	#$2100,SR
full
	LEA	$FFFF820A.W,A5

	MOVEQ	#0,D0
	MOVEQ	#2,D1

	STOP	#$2100

	MOVE	#$2700,SR
	MOVE	#$2300,(SP)

	MOVEQ	#29,D2
SYNCHROA:	DBF	D2,SYNCHROA
	NOP

	MOVE.B	D0,(A5)
	REPT	6
	NOP
	ENDR
	MOVE.B	D1,(A5)

*******************************************
	MOVEA.L	POIT,A2

	MOVE.L	#$FFFF8209,A6
	MOVE.L	#$FFFF8260,A4
	MOVE.L	#$FFFF820A,A3
	MOVEQ	#0,D1
	MOVEQ	#$10,D6
;	MOVE.L	#228-12+2-1-1,D0
	MOVEQ	#19,D0	2

SYNCHRO	MOVE.B	(A6),D7     * SYNCHRO
	BEQ.S	SYNCHRO
	SUB.W	D7,D6
	LSL.W	D6,D1
	;MOVE.L	USP,A6
	DCB	97-3-4,$4E71

	REPT	9
	MOVE.L	(A2)+,A1	*3
	JSR	(A1)	*4
	ENDR
*******************************************
	DCB	7-1,$4E71
;	NOP
;;	MOVE	a4,(A4)
;;	MOVE.B	#0,(A4)
;;	DCB	88-21,$4E71
;;MOD_PAL	EQU	*+4
;;	MOVEM.L	PART1+2,D1-D7/A0
;;	MOVE.b	#0,(A3)
;;	MOVE	a4,(A3)
;;;	DCB	13-9-4,$4E71
;;;MODCOL	EQU	*+2
;;;	MOVE	#$213,$FFFF8242.W
;;	NOP
;;	NOP
;;	MOVEM.L	D1-D4,$FFFF8242.W
;;	MOVE	a4,(A4)
;;	MOVE.B	#0,(A4)
;;	MOVEM.L	D5-D7/A0,$FFFF8250.W
;;;	DCB	12-1,$4E71
;
FULLSCREEN	NOP
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	88,$4E71
	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-4,$4E71
	DBF	D0,FULLSCREEN
MOD_COUL	EQU	*+4
	MOVEM.L	DEG,D0-D7
	MOVEM.L	D0-D7,$FFFF8240.W

	CLR.B	$FFFFFA1B.W
MOD_TIMER	EQU	*+2
	MOVE.B	#30-17,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#TB,$120.W
	MOVE	#$2300,SR
	BSET	#0,$FFFFFA07.W
	BSET	#0,$FFFFFA13.W

	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.F
	MOVE.W	#$300,$FFFF8240.W
.F	CMPI.B	#$1,$FFFFFC02.W
	BEQ	.PAUSE
	BSR	GEST_SCROLL
	BSR	GEST_PIERRES

;	CMPI.B	#$3B,$FFFFFC02.W
	CMPI.L	#TIME4,TIME
	BNE.S	.NO_3B
	BSR	AF_H1
.NO_3B	;CMPI.B	#$3C,$FFFFFC02.W
	CMPI.L	#TIME5,TIME
	BNE.S	.NO_3C
	BSR	AF_H2
.NO_3C
	CMPI.L	#TIME4+1,TIME
	BNE.S	.NO_3BB
	BSR	AF_H1
.NO_3BB	;CMPI.B	#$3C,$FFFFFC02.W
	CMPI.L	#TIME5+1,TIME
	BNE.S	.NO_3CB
	BSR	AF_H2
.NO_3CB

	BSR	SWAPEC
	LEA	ADR_EFF_P,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0),-(A0)
	MOVE.L	D0,4(A0)
.PAUSE	SF	$FFFF8240.W
;	CMPI.B	#$44,$FFFFFC02.W
;	BNE.S	.YOU_CAN_GO_ON
;	MOVE.L	#1,FLAG_PIERRES

	CMPI.L	#$99999999,TIME
	BEQ.S	.YOU_CAN_GO_ON
	RTE

.YOU_CAN_GO_ON	
	MOVE.L	#BUF_ZOOMS,D0
	CLR.B	D0
	lsr.l	#8,d0
	LEA	$FFFF8201.W,A0
	movep	d0,(a0)

	MOVE.L	#VBL_ZIK,$70.W
	MOVE	#$4E71,BARRAGE
	RTE

VBL_ZIK	MOVEM.L	D0-A6,-(SP)
	JSR	ZIK+8
	MOVEM.L	(SP)+,D0-A6
	RTE
INTRO_PART_TWO
	MOVE.L	#BUF_ZOOMS,D0
	CLR.B	D0
	MOVE.L	D0,A6
	LEA	32000(A6),A6
	MOVE.L	#$FFFFFFFF,D0
	MOVE.L	D0,D1
	MOVE.L	D0,D2
	MOVE.L	D0,D3
	MOVE.L	D0,D4
	MOVE.L	D0,D5
	MOVE.L	D0,D6
	MOVE.L	D0,D7
	MOVE.L	D0,A0
	MOVE.L	D0,A1
	MOVE.L	D0,A2
	MOVE.L	D0,A3
	MOVE.L	D0,A4
	MOVE.L	D0,A5
	REPT	571
	MOVEM.L	D0-A5,-(A6)
	ENDR
	MOVEM.L	D0-D5,-(A6)
	
	MOVE.L	#BUFFER,D0
	CLR.B	D0
	ADDI.L	#32*160,D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000+32*160,D0
	MOVE.L	D0,SCREEN2


	MOVE.L	SCREEN1,A0
	MOVE	#7999,D0
CLR1	CLR.L	(A0)+
	DBF	D0,CLR1

;	move.l	SCREEN1,d0
;	lsr.l	#8,d0
;	LEA	$FFFF8201.W,A0
;	movep	d0,(a0)

	MOVE.L	SCREEN2,A0
	MOVE	#7999,D0
CLR2	CLR.L	(A0)+
	DBF	D0,CLR2

	BSR	PREP_ZOOMS

	MOVE.L	#INTER_RTE,$70.W	
	MOVEQ	#0,D0
	MOVEQ	#0,D1
;	MOVE.W	#$8800,A0
	LEA	$FFFF8800.W,A0
	MOVEQ	#$A,D0
.SET_YM1	MOVE.B	D1,(A0)	;ON REMET LES 10 REGISTRES SONORES A ZERO
	CLR.B	2(A0)
	ADDQ.W	#1,D1
	DBRA	D0,.SET_YM1
	MOVE.B	#7,(A0)
	MOVE.B	#$FF,2(A0)

	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVE.B	#$20,$FFFFFA07.W
	MOVE.B	$FFFFFA07.W,$FFFFFA13.W
	MOVE.B	$FFFFFA09.W,$FFFFFA15.W
	MOVE.L	#PLAY_B,$134.W
	MOVE.B	#65,$FFFFFA1F.W
	MOVE.B	#1,$FFFFFA19.W
	MOVE.B	#$40,$FFFFFA17.W
	MOVE.L	#BEAT,BEAT1

	MOVE.L	#VBL_SOUND,$70.W
	MOVE	#$2300,SR
BARRAGE2	BRA.S	BARRAGE2

IT_VBL	TST.L	FORCED
	BNE	FORCE
	TST.B	FLAG_NEXT_ZOOM
	BEQ.S	.NO_MAKE
	BSR	PREP_NEXT_ZOOM
.NO_MAKE	LEA	TABLE_RT,A0
MOD_RT	EQU	*+2
	LEA	0(A0),A0
	CMPI.L	#$99999999,(A0)
	BEQ.S	IT_VBL
	MOVE.L	(A0),A0
	JSR	(A0)
	ADDQ	#4,MOD_RT
	BRA	IT_VBL
FORCE
	MOVE.L	#VBL_ZIK,$70.W
	JMP	INTRO_PART_THREE

TABLE_RT	DC.L	RT_1
	DC.L	RT_2
	DC.L	RT_3
	DC.L	RT_4
	DC.L	RT_5
	DC.L	RT_6
	DC.L	RT_7
	DC.L	RT_8
;	DC.L	RT2
	DC.L	$99999999
;RT1	RTS
;RT2	MOVEQ	#4,D0
;	JSR	ZIK
;	RTS

RT_1	LEA	BUF_BIDON2,A1
	LEA	PART1,A0
	JSR	D_PACK

	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230(A1),A1
	MOVE	#198,D7
AFF_Y	MOVE	#(112/4)-1,D6
AFF_X	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y
	RTS
******
RT_2	LEA	BUF_BIDON2,A1
	LEA	PART2,A0
	JSR	D_PACK

	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230+112(A1),A1
	MOVE	#198,D7
AFF_Y2	MOVE	#(112/4)-1,D6
AFF_X2	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X2
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y2
	RTS
******
RT_3	LEA	BUF_BIDON2,A1
	LEA	PART3,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#198,D7
AFF_Y3	MOVE	#(112/4)-1,D6
AFF_X3	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X3
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y3
	RTS
******
RT_4	LEA	BUF_BIDON2,A1
	LEA	PART4,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230+112(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#198,D7
AFF_Y4	MOVE	#(112/4)-1,D6
AFF_X4	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X4
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y4
	RTS
******
RT_5	LEA	BUF_BIDON2,A1
	LEA	PART5,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#199,D7
AFF_Y5	MOVE	#(112/4)-1,D6
AFF_X5	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X5
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y5
	RTS
******
RT_6	LEA	BUF_BIDON2,A1
	LEA	PART6,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+112+230(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#199,D7
AFF_Y6	MOVE	#(112/4)-1,D6
AFF_X6	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X6
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y6
	RTS
******
RT_7	LEA	BUF_BIDON2,A1
	LEA	PART7,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#199,D7
AFF_Y7	MOVE	#(112/4)-1,D6
AFF_X7	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X7
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y7
	RTS
******
RT_8	LEA	BUF_BIDON2,A1
	LEA	PART8,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+112+230(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#199,D7
AFF_Y8	MOVE	#(112/4)-1,D6
AFF_X8	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X8
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y8
	RTS
******

GEST_ZOOM	MOVE.L	ADR_EFF_Z,A5
	MOVE.W	NUMER,D0
	ADD.W	D0,D0
	LEA	TABLE_COLORS_Z,A6
	MOVE.W	(A6,D0.W),COLOR_ACTU_Z
	ADD.W	D0,D0
	LEA	ADR_ZOOMS,A6
	MOVE.L	(A6,D0.W),A6	;ADRESSE DU ZOOM
	LEA	CORES_CARRêS_1,A4
	MOVE.L	(A4,D0.W),A4
	LEA	BUF_ANNEX,A3
	ADDA.W	D0,A3
	MOVE.L	(A3)+,(A5)
	MOVEQ	#6,D6
.NEXT_LIGNE	MOVE.L	SCREEN2,A1
	ADDQ	#6,A1
	ADDA.W	(A6)+,A1	;A1=ADRESSE ECRAN
	MOVE.W	(A6)+,D7	;NB DE CARRê A TRAITER -1
.RECOM_AFF_LINE	MOVEQ	#0,D0
	MOVE.B	(A6)+,D0	;No DU CARRê
	ADD.W	D0,D0
	MOVE.W	D0,D2
	ADD.W	D2,D2
	ADD.W	D2,D0	;D0=D0*6
	MOVE.L	2(A4,D0.W),A3
	MOVEQ	#0,D1
	MOVE.B	(A6)+,D1
	MOVE.L	A1,A0
	ADDA.W	D1,A0
	JSR	(A3)	ON AFFICHE LE CARRê
	DBRA	D7,.RECOM_AFF_LINE
	DBRA	D6,.NEXT_LIGNE
	MOVE.W	NUMER,D0
	ADDQ.W	#1,D0
	CMPI.W	#NB_ZOOMS,D0
	BLT.S	.FUCK
	ST	FLAG_NEXT_ZOOM
	MOVEQ	#0,D0
.FUCK	MOVE.W	D0,NUMER

	LEA	ADR_EFF_Z,A5
	MOVE.L	(A5)+,D0
	MOVE.L	(A5),-(A5)
	MOVE.L	D0,4(A5)
	RTS

EFFAC_ZOOM	CMPI.B	#2,FLAG_EFFAC_ZOOM
	BEQ.S	.NO_EFFAC
	MOVE.L	SCREEN2,A0
	ADDQ	#6,A0
	MOVE.L	ADR_EFF_Z,A1
	ADDA.W	(A1)+,A0
	MOVE.W	(A1),D7
	ADDQ.W	#2,D7
	MOVEQ	#0,D0	
.EFF	MOVE.W	D0,(A0)
	MOVE.W	D0,8(A0)
	MOVE.W	D0,16(A0)
	MOVE.W	D0,24(A0)
	MOVE.W	D0,32(A0)
	MOVE.W	D0,40(A0)
	MOVE.W	D0,48(A0)
	MOVE.W	D0,56(A0)
	MOVE.W	D0,64(A0)
	MOVE.W	D0,72(A0)
	MOVE.W	D0,80(A0)
	MOVE.W	D0,88(A0)
	MOVE.W	D0,96(A0)
	MOVE.W	D0,104(A0)
	MOVE.W	D0,112(A0)
	MOVE.W	D0,120(A0)
	MOVE.W	D0,128(A0)
	MOVE.W	D0,136(A0)
	MOVE.W	D0,144(A0)
	MOVE.W	D0,152(A0)
	LEA	160(A0),A0
	DBRA	D7,.EFF
	TST.B	FLAG_NEXT_ZOOM
	BEQ.S	.NO_EFFAC
	ADDQ.B	#1,FLAG_EFFAC_ZOOM
.NO_EFFAC	RTS


FLAG_PIERRES	DC.L	0
TB
	CLR.B	$FFFFFA1B.W
;	CLR	$FFFF8240.W
	MOVE	#$411,$FFFF824A.W
	MOVE.B	#21,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#TB1,$120.W
	BCLR	#0,$FFFFFA0F.W
	RTE
TB1
	CLR.B	$FFFFFA1B.W
	MOVE	#$200,$FFFF8248.W
;	MOVE.B	#1,$FFFFFA21.W
;	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#TB,$120.W
	BCLR	#0,$FFFFFA0F.W
	RTE
VBL_SOUND
	CLR.B	$FFFFFA1B.W
	
ERASE	MOVE.L	BEAT1,A0
	LEA	ERASE,A3
	MOVE.L	#$4E714E71,(A3)+
	MOVE	#$4E71,(A3)

	CMPA.L	#TEST_FIN,A0
	BLE.S	.NO
	
	MOVE.L	#VBL_PART_TWO,$70.W
	;LEA	BEAT,A0
	MOVE.L	#INTER_RTE,$134.W
	MOVE	#$2300,SR
	MOVEQ	#2,D0
	JSR	ZIK
.NO	MOVE.W	#$8800,A1
	;LEA	$FFFF8800.W,A1
	LEA	CODE,A2
;	REPT	32/2
;	JSR	PLAY
;	DCB	128+128-29-7,$4E71
;	ENDR

	SF	$FFFF8240.W
;	MOVE.W	#$444,$FFFF8244.W
;	MOVE.W	#$222,$FFFF8248.W
	MOVE.W	#$111,$FFFF824C.W
	JSR	GERE_COLS_STARS
	JSR	STARS

	MOVE.L	SCREEN1,D6
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D6,SCREEN2
	move.l	SCREEN1,d6
	lsr.l	#8,d6
	LEA	$FFFF8201.W,A6
	movep	d6,(A6)


	RTE
FORCED	DC.L	0
PLAY_B	;ST	$FFFF8240.W
	MOVEM.L	D0-D2,-(SP)
	MOVEQ	#0,D0	;1
	MOVE.B	(A0)+,D0	;2
	LSL.W	#3,D0	;3
	MOVE.L	0(A2,D0.W),D1	;5
	MOVE.W	4(A2,D0.W),D2	;5
	MOVEP.L	D1,(A1)	;6
	MOVEP.W	D2,(A1)	;4     ;=26 NOPS
	;SF	$FFFF8240.W
	MOVEM.L	(SP)+,D0-D2
	RTE	;5    ;=31 NOPS


AF_H1
	LEA	HEADS,A0
	MOVE.L	SCREEN2,A1
	LEA	8+160*149(A1),A1
	MOVE	#52,D7
.G	MOVEM.L	(A0)+,D0-D6/A3-A5
	MOVEM.L	D0-D6/A3-A5,(A1)
	LEA	160(A1),A1
	DBF	D7,.G
	RTS
AF_H2
	LEA	HEADS,A0
	LEA	40*53(A0),A0
	MOVE.L	SCREEN2,A1
	LEA	8+160*149(A1),A1
	MOVE	#52,D7
.G	MOVEM.L	(A0)+,D0-D6/A3-A5
	MOVEM.L	D0-D6/A3-A5,(A1)
	LEA	160(A1),A1
	DBF	D7,.G
	RTS

Y_VALUE	DC.L	160*191
Y_VALUE2	DC.L	160*191
FIN	MOVE.L	4.W,A0
	JMP	(A0)
GEST_SCROLL	
;	CMPI.B	#$48,$FFFFFC02.W
;	BNE.S	PAS_HAUT
;	ADD.L	#160,Y_VALUE
;	ADD.L	#160,Y_VALUE2
;	SUBQ	#1,MOD_TIMER
;PAS_HAUT	CMPI.B	#$50,$FFFFFC02.W
;	BNE.S	PAS_BAS
;	TST.L	Y_VALUE
;	BEQ.S	PAS_BAS
;	SUB.L	#160,Y_VALUE
;	SUB.L	#160,Y_VALUE2
;	ADDQ	#1,MOD_TIMER
;PAS_BAS	
	CMPI.L	#TIME1,TIME
	BLT.S	.DO_NOT_SCROLL
	TST.L	Y_VALUE
	BEQ.S	.DO_NOT_SCROLL
	SUB.L	#160,Y_VALUE
	SUB.L	#160,Y_VALUE2
	ADDQ	#1,MOD_TIMER
.DO_NOT_SCROLL
	CMPI.L	#TIME2,TIME
	BNE.S	.PIERRES_ON
	MOVE.L	#1,FLAG_PIERRES
.PIERRES_ON	RTS

	MOVE.W	CNT_LG,D0
	CMPI.W	#400,D0
	BEQ.S	.FUCK
	ADDQ.W	#1,D0
;	SUB.L	#160,SCREEN2
	SUB.L	#160,Y_VALUE
	SUB.L	#160,ANNEX_2
.FUCK	MOVE.W	D0,CNT_LG
	RTS

FLAG	DC.L	0
GEST_PIERRES	CLR	FLAG
	MOVE	#$500,COLOR
	MOVE.L	ADR_EFF_P,A0
	MOVE.W	(A0)+,D0	;NB DE PIERRES A EFFACER
	BEQ	.NIB_ONE
	MOVE.L	TAB2,A6
.REPEAT_PIERRES
	LEA	TABLE_ROUTY,A5
	MOVE.L	SCREEN2,A1
	ADDA.L	Y_VALUE2,A1
	MOVE.L	ANNEX_2,A2
	ADDA.L	Y_VALUE2,A2
	MOVE.W	(A0)+,D1	;OFFSET ECRAN
	ADDA.W	D1,A1
	LEA	30*160(A1),A1
	LEA	10*160(A1),A1
	LEA	-3*160(A1),A1
	ADDA.W	D1,A2

.BOUCLE	MOVE	(A6)+,D7
	BNE.S	.FLAG_A_UN
	ADDQ	#1,FLAG
	BRA.S	.BOUCLE
.FLAG_A_UN	CMPI	#$9999,D7
	BEQ	.OK
	MOVE	FLAG,D1
	ADD	D1,D1
	ADD	D1,D1
	MOVE.L	(A5,D1.W),A5
	JSR	(A5)
	ADDQ	#1,FLAG

;N	SET	0
;	REPT	35
;	MOVEM.L	N(A2),D1-D6
;	MOVEM.L	D1-D6,N(A1)
;N	SET	N+160
;	ENDR

	BRA	.REPEAT_PIERRES

.OK
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NIB_ONE
	MOVE	#$400,$FFFF8240.W
.NIB_ONE	MOVEQ	#0,D5	;NB DE PIERRES AFFICHêES
	MOVE.L	TAB2,A6
	REPT	10
	CLR.L	(A6)+
	ENDR
	MOVE.L	TAB2,A6
	LEA	FLAGS,A3
	MOVE.L	ADR_EFF_P,A4
	LEA	2(A4),A5
	LEA	BUF_COOR,A2
	MOVEQ	#14,D7	15
.RECOM_PIERRE	MOVEQ	#0,D0
	MOVE.L	(A2),D0	;Y ACTUEL			
	MOVEQ	#0,D1
	MOVE.W	4(A2),D1
	SUB.L	D1,D0
	MOVE.L	D0,D3
	LSR.L	#8,D3	;NEW Y ACTUEL
	CMPI.W	#-32,D3
	BGT.S	.LET_S_GO
	MOVE.L	#220*256,D0
	MOVE.W	#220,D3
	TST.L	FLAG_PIERRES
	BEQ.S	.LET_S_GO
	MOVE	#1,(A3)
.LET_S_GO	TST	(A3)+
	BNE.S	.NO_SAVE
	MOVE.L	D0,(A2)
.NO_SAVE	ADDQ	#4,A2
	MOVEQ	#8,D6
	CMPI.W	#200,D3
	BGE.S	.NO_AFF
	MULS.W	#160,D3
	ADDQ.W	#2,A2
	ADD.W	(A2)+,D3	;+OFFSET X
	MOVE.L	(A2)+,A1	;ADRESSE DE LA ROUTINE
	MOVE.L	SCREEN2,A0
	ADDA.L	Y_VALUE2,A0
	ADD.W	D3,A0
	LEA	30*160(A0),A0
	LEA	10*160(A0),A0
	LEA	-3*160(A0),A0
	MOVE.W	D3,(A5)+
	JSR	(A1)
	ADDQ.W	#1,D5
	MOVEQ	#0,D6
	MOVE	#1,(A6)
.NO_AFF	ADDQ	#2,A6
	ADDA.W	D6,A2
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.KLM
	MOVE	COLOR,$FFFF8240.W
	ADD	#$100,COLOR	
.KLM	DBRA	D7,.RECOM_PIERRE
	MOVE.W	D5,(A4)
	RTS
COLOR	DC	$500
ROUTINE1
N	SET	0
	REPT	11
	MOVEM.L	N(A2),D1-D4
	MOVEM.L	D1-D4,N(A1)
N	SET	N+160
	ENDR
	RTS
ROUTINE2
N	SET	0
	REPT	20
	MOVEM.L	N(A2),D1-D6
	MOVEM.L	D1-D6,N(A1)
N	SET	N+160
	ENDR
	RTS
ROUTINE3
N	SET	0
	REPT	35
	MOVEM.L	N(A2),D1-D6
	MOVEM.L	D1-D6,N(A1)
N	SET	N+160
	ENDR
	RTS
TABLE_ROUTY	
	DC.L	ROUTINE1
	DC.L	ROUTINE1
	DC.L	ROUTINE1
	DC.L	ROUTINE1
	DC.L	ROUTINE1
	DC.L	ROUTINE1
	DC.L	ROUTINE2
	DC.L	ROUTINE2
	DC.L	ROUTINE2
	DC.L	ROUTINE2
	DC.L	ROUTINE2
	DC.L	ROUTINE2
	DC.L	ROUTINE3
	DC.L	ROUTINE3
	DC.L	ROUTINE3
	DC.L	ROUTINE3
	DC.L	ROUTINE3
	DC.L	ROUTINE3

	DC.L	ROUTINE3
	DC.L	ROUTINE3



SWAPEC	
	MOVE.L	Y_VALUE,D0
	LSR.L	#8,D0
	MOVE.L	D0,D1
	LSL.L	#8,D1
	MOVE.L	Y_VALUE,D0
	SUB.L	D1,D0
	LEA	DATA_HS,A0
	TST.L	D0
	BNE.S	DEJ
	LEA	RIEN,A0
	MOVE.L	A0,POIT
	BRA.S	OKAY
DEJ	SUBQ.L	#2,D0
	MULU	#18,D0
	ADDA.L	D0,A0
	MOVE.L	A0,POIT
		
OKAY	

	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	move.l	SCREEN1,d0
	ADD.L	D1,D0
	lsr.l	#8,d0
	LEA	$FFFF8201.W,A0
	movep	d0,(a0)

;	MOVE.B	SCREEN1+1,$FFFF8201.W
;	MOVE.B	SCREEN1+2,$FFFF8203.W
;	MOVE.B	SCREEN1+3,$FFFF820D.W
	MOVE.L	ANNEX_1,D0
	MOVE.L	ANNEX_2,ANNEX_1
	MOVE.L	D0,ANNEX_2
	MOVE.L	TAB1,D0
	MOVE.L	TAB2,TAB1
	MOVE.L	D0,TAB2

	RTS

PREP_ECR	MOVE.L	#BUFFER,D0
	CLR.B	D0
	ADDI.L	#32*160,D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#64000+32*160,D0
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	MOVE.B	SCREEN1+3,$FFFF820D.W
	MOVE.L	#TABLO,TAB1
	MOVE.L	#TABLO2,TAB2
	RTS

PREP_ALL	
	LEA	IMG1,A0
	LEA	BUF_BIDON,A1
	JSR	D_PACK

;	LEA	IMG1+34,A0
	LEA	BUF_BIDON+34,A0
	LEA	40(A0),A0
	MOVE.L	SCREEN1,A1
	LEA	30*160(A1),A1
	MOVE.L	SCREEN2,A2
	LEA	30*160(A2),A2
	LEA	GRAF_ANNEX,A3
	MOVE.W	#8000-1-40,D7
.R	MOVE.L	(A0),(A1)+
	MOVE.L	(A0),(A2)+
	MOVE.L	(A0)+,(A3)+
	DBRA	D7,.R
;	LEA	160(A0),A0

	MOVEM.L	A0-A1,-(SP)
	LEA	IMG2,A0
	LEA	BUF_BIDON,A1
	JSR	D_PACK
	MOVEM.L	(SP)+,A0-A1

	LEA	BUF_BIDON+34,A0
	LEA	40(A0),A0
	MOVE.W	#8000-1,D7
.S	MOVE.L	(A0),(A1)+
	MOVE.L	(A0),(A2)+
	MOVE.L	(A0)+,(A3)+
	DBRA	D7,.S
;	ADDI.L	#32000,SCREEN1
;	ADDI.L	#32000,SCREEN2
;	LEA	GRAF_ANNEX+32000,A0
	LEA	GRAF_ANNEX,A0
;	LEA	-30*160(A0),A0
	LEA	10*160(A0),A0
	LEA	-3*160(A0),A0

	MOVE.L	A0,ANNEX_1
	MOVE.L	A0,ANNEX_2
	CLR.W	CNT_LG
	LEA	COOR_PIERRES,A0
	LEA	BUF_COOR,A1
	LEA	COEFFS,A4
	MOVEQ	#2,D6
.FUCK_2	MOVE.W	(A4)+,D5
	MOVE.W	(A4)+,D4
	LEA	CODS,A2
	ADDA.W	D4,A2
	MOVEQ	#5,D7
.FUCK	MOVE.W	(A0)+,D0	;No DE LA PIERRE(0 OU 1)
	MOVE.W	(A0)+,D1	;X
	MOVEQ	#0,D2
	MOVE.W	(A0)+,D2	;Y
	ANDI.W	#-16,D1
	LSR.W	#1,D1
;	MOVE.W	D2,D3
;	MULU.W	#160,D3
;	ADD.W	D3,D1	;OFFSET ECRAN
	LSL.L	#8,D2
	MOVE.L	D2,(A1)+	;ON RANGE LE Y ACTUEL
	MOVE.W	D5,(A1)+	;VITESSE *2^8
	MOVE.W	D1,(A1)+	;ON RANGE L'OFFSET
	LEA	CODS,A3
	ADDA.W	(A2)+,A3
	MOVE.L	A3,(A1)+	;ADRESSE DE LA ROUTINE D'AFFICHAGE DE LA PIERRE CORRESPONDANTE
	DBRA	D7,.FUCK
	DBRA	D6,.FUCK_2
	LEA	ADR_EFF_P,A0
	LEA	BUF_EFF_P,A1
	LEA	19*2(A1),A2
	MOVE.L	A1,(A0)+
	MOVE.L	A2,(A0)
	RTS

H0
	DCB	2,$4E71
	DCB	23,$2492
	RTS

H70
	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	DCB	3,$4E71
	DCB	17,$2492
	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	2,$2492
	DCB	3,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	NOP
	RTS	=4 NOPS
H44
	DCB	3,$4E71
	DCB	18,$2492
	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	2,$2492
	DCB	3,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	NOP
	RTS	=4 NOPS
H24
	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	DCB	1,$4E71
	DCB	17,$2492
	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	2,$2492
	DCB	3,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	REPT	3
	NOP
	ENDR
	RTS	=4 NOPS
H2
	NOP
	DCB	18,$2492
	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	2,$2492
	DCB	3,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	REPT	3
	NOP
	ENDR
	RTS	=4 NOPS
H80
	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	DCB	7,$2492
	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	DCB	3,$4E71
	DCB	9,$2492

	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	2,$2492
	DCB	3,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	NOP
	RTS

D_PACK
;	LEA	ADR_LOAD,A0
	movem.l	d0-a6,-(a7)
	cmp.l	#"ATM5",(a0)+
	bne	not_packed
	link	a2,#-28
	move.l	(a0)+,d0
	ifne	MODE
	lea	4(a0,d0.l),a5
	move.l	d0,-(a7)
	elseif
	move.l	a1,a5
	add.l	d0,a5
	endc
	move.l	a5,a4
	ifne	MODE
	ifne	DEC_SPACE
	lea	DEC_SPACE(a4),a5
	endc
	endc
	lea	-$c(a4),a4
	move.l	(a0)+,d0
	move.l	a0,a6
	add.l	d0,a6
	ifne	PIC_ALGO
	moveq	#0,d0
	move.b	-(a6),d0
	move	d0,-2(a2)
	ifne	RESTORE_SPACE
	lsl	#2,d0
	sub	d0,a4
	endc
	elseif
	ifne	RESTORE_SPACE
	clr	-2(a2)
	endc
	subq	#1,a6
	endc
	ifne	RESTORE_SPACE
	lea	buff_marg(pc),a3
	move	-2(a2),d0
	lsl	#2,d0
	add	#DEC_SPACE+$C,d0
	bra.s	.save
.save_m:	move.b	(a4)+,(a3)+
	subq	#1,d0
.save:	bne.s	.save_m
	movem.l	a3-a4,-(a7)
	endc
	ifne	PIC_ALGO
	pea	(a5)
	endc
	move.b	-(a6),d7
	bra	take_type
decrunch:	move	d3,d5
take_lenght:	add.b	d7,d7
.cont_take:	dbcs	d5,take_lenght
	beq.s	.empty1
	bcc.s	.next_cod
	sub	d3,d5
	neg	d5
	bra.s	.do_copy1
.next_cod:	moveq	#3,d6
	bsr.s	get_bit2
	beq.s	.next_cod1
	bra.s	.do_copy
.next_cod1:	moveq	#7,d6
	bsr.s	get_bit2
	beq.s	.next_cod2
	add	#15,d5
	bra.s	.do_copy
.empty1:	move.b	-(a6),d7
	addx.b	d7,d7
	bra.s	.cont_take
.next_cod2:	moveq	#13,d6
	bsr.s	get_bit2
	add	#255+15,d5
.do_copy:	add	d3,d5
.do_copy1:	lea	decrun_table(pc),a4
	move	d5,d2
	bne.s	bigger
	add.b	d7,d7
	bne.s	.not_empty
	move.b	-(a6),d7
	addx.b	d7,d7
.not_empty:	bcs.s	.ho_kesako
	moveq	#1,d6
	bra.s	word
.ho_kesako:	moveq	#3,d6
	bsr.s	get_bit2
	tst.b	-28(a2)
	beq.s	.ho_kesako1
	move.b	10-28(a2,d5.w),-(a5)
	bra	tst_end
.ho_kesako1:	move.b	(a5),d0
	btst	#3,d5
	bne.s	.ho_kesako2
	bra.s	.ho_kesako3
.ho_kesako2:	add.b	#$f0,d5
.ho_kesako3:	sub.b	d5,d0
	move.b	d0,-(a5)
	bra	tst_end
get_bit2:	clr	d5
.get_bits:	add.b	d7,d7
	beq.s	.empty
.cont:	addx	d5,d5
	dbf	d6,.get_bits
	tst	d5
	rts
.empty:	move.b	-(a6),d7
	addx.b	d7,d7
	bra.s	.cont
bigger:	moveq	#2,d6
word:	bsr.s	get_bit2
contus:	move	d5,d4
	move.b	14(a4,d4.w),d6
	ext	d6
	tst.b	1-28(a2)
	bne.s	.spe_ofcod1
	addq	#4,d6
	bra.s	.nospe_ofcod1
.spe_ofcod1:	bsr.s	get_bit2
	move	d5,d1
	lsl	#4,d1
	moveq	#2,d6
	bsr.s	get_bit2
	cmp.b	#7,d5
	blt.s	.take_orof
	moveq	#0,d6
	bsr.s	get_bit2
	beq.s	.its_little
	moveq	#2,d6
	bsr.s	get_bit2
	add	d5,d5
	or	d1,d5
	bra.s	.spe_ofcod2
.its_little:	or.b	2-28(a2),d1
	bra.s	.spe_ofcod3
.take_orof:	or.b	3-28(a2,d5.w),d1
.spe_ofcod3:	move	d1,d5
	bra.s	.spe_ofcod2
.nospe_ofcod1:	bsr.s	get_bit2
.spe_ofcod2:	add	d4,d4
	beq.s	.first
	add	-2(a4,d4.w),d5
.first:	lea	1(a5,d5.w),a4
	move.b	-(a4),-(a5)
.copy_same:	move.b	-(a4),-(a5)
	dbf	d2,.copy_same
	bra.s	tst_end
make_jnk:	add.b	d7,d7
	bne.s	.not_empty
	move.b	-(a6),d7
	addx.b	d7,d7
.not_empty:	bcs.s	string
	move.b	-(a6),-(a5)
tst_end:	cmp.l	a5,a3
	bne.s	make_jnk
	cmp.l	a6,a0
	beq.s	work_done
take_type:	moveq	#0,d6
	bsr	get_bit2
	beq.s	.nospe_ofcod
	move.b	-(a6),d0
	lea	2-28(a2),a1
	move.b	d0,(a1)+
	moveq	#1,d1
	moveq	#6,d2
.next:	cmp.b	d0,d1
	bne.s	.no_off_4b
	addq	#2,d1
.no_off_4b:	move.b	d1,(a1)+
	addq	#2,d1
	dbf	d2,.next
	st	1-28(a2)
	bra.s	.spe_ofcod
.nospe_ofcod:	sf	1-28(a2)
.spe_ofcod:	moveq	#0,d6
	bsr	get_bit2
	beq.s	.relatif
	lea	10-28(a2),a1
	moveq	#15,d0
.next_f:	move.b	-(a6),(a1)+
	dbf	d0,.next_f
	st	-28(a2)
	bra.s	.freq
.relatif:	sf	-28(a2)
.freq:	clr	d3
	move.b	-(a6),d3
	move.b	-(a6),d0
	lsl	#8,d0
	move.b	-(a6),d0
	move.l	a5,a3
	sub	d0,a3
	bra.s	make_jnk
string:	bra	decrunch
work_done:
	ifne	PIC_ALGO
	move.l	(a7)+,a0
	pea	(a2)
	bsr.s	decod_picture
	move.l	(a7)+,a2
	endc
	ifne	RESTORE_SPACE
	movem.l	(a7)+,a3-a4
	endc
	ifne	MODE
	move.l	(a7)+,d0
	bsr.S	copy_decrun
	endc
	ifne	RESTORE_SPACE
	move	-2(a2),d0
	lsl	#2,d0
	add	#DEC_SPACE+$C,d0
	bra.s	.restore
.restore_m:	move.b	-(a3),-(a4)
	subq	#1,d0
.restore:	bne.s	.restore_m
	endc
	unlk	a2
not_packed:	movem.l	(a7)+,d0-a6
 	rts
decrun_table:	dc.w	32,32+64,32+64+256,32+64+256+512,32+64+256+512+1024
	dc.w	32+64+256+512+1024+2048,32+64+256+512+1024+2048+4096
	dc.b	0,1,3,4,5,6,7,8
	ifne	PIC_ALGO
decod_picture:	move	-2(a2),d7
.next_picture:	dbf	d7,.decod_algo
	rts
.decod_algo:	move.l	-(a0),d0
	lea	0(a5,d0.l),a1
.no_odd:	lea	$7d00(a1),a2
.next_planes:	moveq	#3,d6
.next_word:	move	(a1)+,d0
	moveq	#3,d5
.next_bits:	add	d0,d0
	addx	d1,d1
	add	d0,d0
	addx	d2,d2
	add	d0,d0
	addx	d3,d3
	add	d0,d0
	addx	d4,d4
	dbf	d5,.next_bits
	dbf	d6,.next_word
	movem	d1-d4,-8(a1)
	cmp.l	a1,a2
	bne.s	.next_planes
	bra.s	.next_picture
	endc
	ifne	MODE
copy_decrun:	lsr.l	#4,d0
	lea	-12(a6),a6
.copy_decrun:	rept	4
	move.l	(a5)+,(a6)+
	endr
	dbf	d0,.copy_decrun
	rts
	endc
	ifne	RESTORE_SPACE
buff_marg:	dcb.b	$90+DEC_SPACE+$C
	endc

GERE_COLS_STARS
	MOVE	$FFFF8244.W,D0
	CMPI	#$444,D0
	BGT.S	.NO_CHG1
	ADDQ	#1,TIM_C1
	CMPI	#5,TIM_C1
	BNE.S	.NO_CHG1
	CLR	TIM_C1
	ADD	#$111,$FFFF8244.W
.NO_CHG1
	MOVE	$FFFF8248.W,D0
	CMPI	#$222,D0
	BGT.S	.NO_CHG2
	ADDQ	#1,TIM_C2
	CMPI	#5,TIM_C2
	BNE.S	.NO_CHG2
	CLR	TIM_C2
	ADD	#$111,$FFFF8248.W
.NO_CHG2
	RTS
TIM_C1	DC	0
TIM_C2	DC	0
VBL_PART_TWO
	MOVE	#$4E71,BARRAGE2
	SF	$FFFF8240.W
;	MOVE.W	#$444,$FFFF8244.W
;	MOVE.W	#$222,$FFFF8248.W
	MOVE.W	#$111,$FFFF824C.W

	CLR.B	$FFFFFA1B.W
;	MOVE.B	#1,$FFFFFA21.W
;	MOVE.B	#8,$FFFFFA1B.W
;	MOVE.L	#TB,$120.W
	BSET	#0,$FFFFFA07.W
	BSET	#0,$FFFFFA13.W
	MOVEM.L	D0-A6,-(SP)
	JSR	GERE_COLS_STARS
	JSR	ZIK+8
	JSR	STARS
;	JMP	ENDVBL
VBL_ZOOM	
	MOVE.W	COLOR_ACTU_Z,$FFFF8250.W
	MOVE	$FFFF8250.W,$FFFF8252.W
	MOVE.L	$FFFF8250.W,$FFFF8254.W
	MOVE.L	$FFFF8250.W,$FFFF8258.W
	MOVE.L	$FFFF8250.W,$FFFF825C.W
	ADDQ.W	#1,NB_VBL
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NO_TAB
	MOVE.W	#$300,$FFFF8240.W
.NO_TAB	BSR	EFFAC_ZOOM
	TST.B	FLAG_NEXT_ZOOM
	BNE.S	.NO_AFF
	BSR	GEST_ZOOM
.NO_AFF	
;	BSR	SWAPEC
;	CLR.W	$FFFF8240.W

ENDVBL	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	move.l	SCREEN1,d0
	lsr.l	#8,d0
	LEA	$FFFF8201.W,A0
	movep	d0,(a0)
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.D
	ST	$FFFF8240.W
.D	MOVEM.L	(SP)+,D0-A6

;	CMPI.B	#$2,$FFFFFC02.W
	TST.L	CHANGE
	BEQ.S	.R
	MOVE.L	#1,FORCED
.R
	RTE
CHANGE	DC.L	0
PREP_NEXT_ZOOM	CLR.W	ADDIT
	MOVE.L	PT_MESS,A0
	CMPI.B	#-2,(A0)
	BNE.S	.PAS_
	MOVE.L	#1,CHANGE
	RTS
.PAS_	CMPI.B	#-1,(A0)
	BNE.S	.PAS_LOOP
	LEA	MESSAGE,A0
.PAS_LOOP	MOVEQ	#0,D0
	MOVE.B	(A0)+,D0	;TYPE DE FONTE(0-1)
	ADD.W	D0,D0
	ADD.W	D0,D0
	LEA	ADR_FONTS,A5
	MOVE.L	(A5,D0.W),A5	;A1=ADRESSE DES FONTES
	MOVE.B	(A0)+,D0	;D0=N=NB DE LETTRES...
	MOVE.W	D0,D7	;D7=N
	SUBQ.W	#1,D7	;...-1
	MULU.W	#8*LONGUEUR,D0	;D0=LONGUEUR EN X
	LSR.W	#1,D0	;/2
	NEG.W	D0	;D0=X DE DêPART

	LEA	BUF_CALC,A1
	MOVE.W	#-(LONGUEUR*7)/2,D5    ;Y0
	MOVEQ	#6,D6
.NEXT_LIGNE	MOVE.W	D0,D4	;X DE DEPART
	MOVE.L	A0,-(SP)
	MOVEQ	#0,D2	;ZERO CARRêS
	LEA	4(A1),A2
	MOVE.W	D7,D3
.NEXT_LETTRE	MOVE.W	D3,A6
	MOVEQ	#0,D1
	MOVE.B	(A0)+,D1
	SUBI.B	#32,D1
	LSL.W	#3,D1
	MOVE.L	A5,A4
	ADDA.W	D1,A4	;A4=ADR DE LA FONTE
ADDIT = *+2
	ADDA.W	#0,A4
	MOVE.B	(A4)+,D1
	MOVEQ	#7,D3
.NEXT_BIT	BTST	D3,D1
	BEQ.S	.NOTHING
	MOVE.W	D4,(A2)+	;ON POSE LE X
	ADDQ.W	#1,D2	;UN CARRê DE PLUS
.NOTHING	ADDI.W	#LONGUEUR,D4	;X=X+LONGUEUR
	DBRA	D3,.NEXT_BIT
	MOVE.W	A6,D3
	DBRA	D3,.NEXT_LETTRE
	MOVE.L	(SP)+,A0
	MOVE.W	D5,(A1)+
	SUBQ.W	#1,D2
	MOVE.W	D2,(A1)
	MOVE.L	A2,A1
	ADDI.W	#LONGUEUR,D5
	ADDQ.W	#1,ADDIT
	DBRA	D6,.NEXT_LIGNE
	ADDA.W	D7,A0
	ADDQ.W	#1,A0	;A0=PROCHAIN MESSAGE
	MOVE.L	A0,PT_MESS

	LEA	COEFF_3D+(2*(NB_ZOOMS-1)*STEP_INTER_Z),A0
	LEA	CORES_CARRêS_1,A1
	LEA	BUF_ZOOMS,A6
	LEA	ADR_ZOOMS,A5
	MOVE.W	#NB_ZOOMS-1,D4
.NEXT_ZOOM	LEA	BUF_CALC,A2
	MOVE.L	A6,(A5)+
	MOVEQ	#6,D7
.NEXT_LINE	MOVE.L	(A1),A3
	MOVE.W	(A3)+,D0	;X MIN
	MOVE.W	(A0),D1	;COEFF 3D
	MOVE.W	(A2)+,D2	;Y DE LA LIGNE	
	ADD.W	D2,D2
	MULS.W	D1,D2
	SWAP	D2
	ADDI.W	#100,D2
	CMPI.W	#-32,D2
	BGT.S	.PAS_ENCORE_CLIP_Y
	CLR.W	(A6)+
	MOVE.W	#-1,(A6)+
	MOVE.W	(A2)+,D2
	ADD.W	D2,D2
	ADDA.W	D2,A2
	BRA.S	.ANOTHER_END
.PAS_ENCORE_CLIP_Y
	MULU.W	#160,D2	;Y*160
	MOVE.W	D2,(A6)+	;ON LE POSE
	MOVEQ	#0,D5
	MOVE.W	(A2)+,D2	;NB DE CARRêS-1
	LEA	2(A6),A4
	MOVEQ	#0,D6
.NEXT_X	MOVE.W	(A2)+,D3	;X
	ADD.W	D3,D3
	MULS.W	D1,D3
	SWAP	D3	;X PROJETê
	ADDI.W	#160,D3
	CMPI.W	#320,D3
	BGE.S	.FINITO
	CMP.W	D0,D3
	BLT.S	.HAHA
.RETRY	CMP.W	D0,D3
	BNE.S	.LE_PROCHAIN
	ADDQ.W	#1,D6
	MOVE.B	D5,(A4)+	;No DU CARRê
	TST.W	D0
	BGE.S	.X_POSITIF
	CLR.B	(A4)+	;ZERO SI CLIPPING GAUCHE
	BRA.S	.NOT_YET
.X_POSITIF	ANDI.W	#$FFF0,D0
	LSR.W	#1,D0
	MOVE.B	D0,(A4)+	;L'OFFSET
	BRA.S	.NOT_YET
.LE_PROCHAIN	ADDQ.W	#1,D5
	ADDQ.W	#4,A3
	MOVE.W	(A3)+,D0	;NEXT X
	BRA.S	.RETRY
.NOT_YET	ADDQ.W	#1,D5
	ADDQ.W	#4,A3
	MOVE.W	(A3)+,D0	;NEXT X
.HAHA	DBRA	D2,.NEXT_X
	BRA.S	.APRES_FINITO
.FINITO	ADD.W	D2,D2
	ADDA.W	D2,A2
.APRES_FINITO	SUBQ.W	#1,D6
	MOVE.W	D6,(A6)
	MOVE.L	A4,A6
.ANOTHER_END	DBRA	D7,.NEXT_LINE
	ADDQ.W	#4,A1
	LEA	-STEP_INTER_Z*2(A0),A0
	DBRA	D4,.NEXT_ZOOM

	LEA	COEFF_3D+(2*(NB_ZOOMS-1)*STEP_INTER_Z),A0
	LEA	BUF_ANNEX,A1
	MOVE.W	#NB_ZOOMS-1,D7
.REPEAT_1	MOVE.W	(A0),D0
	MOVE.W	#-112*2,D1
	MOVE.W	#224*2,D2
	MULS.W	D0,D1
	SWAP	D1
	ADDI.W	#100,D1
	MULU.W	D0,D2
	SWAP	D2
	TST.W	D1
	BGE.S	.Y_POSITIF
	MOVEQ	#0,D1
.Y_POSITIF	MULU.W	#160,D1
	MOVE.W	D1,(A1)+	;ON POSE LE Y*160
	CMPI.W	#200,D2
	BLE.S	.HAUT_INF_200
	MOVE.W	#200,D2
.HAUT_INF_200	SUBQ.W	#1,D2
	MOVE.W	D2,(A1)+
	LEA	-STEP_INTER_Z*2(A0),A0
	DBRA	D7,.REPEAT_1

	SF	FLAG_NEXT_ZOOM
	SF	FLAG_EFFAC_ZOOM
	RTS

ADR_FONTS	DC.L	FONTS_1,FONTS_1

PREP_ZOOMS	LEA	COEFF_3D+(2*(NB_ZOOMS-1)*STEP_INTER_Z),A1
	MOVE.W	#$7FFF,COEFF_3D
	LEA	BUF_COD_CARRêS,A2
	LEA	CORES_CARRêS_1,A3
	LEA	CORES_CARRêS_2,A4
	MOVEQ	#NB_ZOOMS-1,D6
.NEXT_ZOOM	LEA	BUF_CALC,A0
	MOVE.W	#-LONGUEUR*48,D0   ;X DE DêPART
	MOVE.W	(A1),D2
	MOVE.W	#160,D3	;ABSCISSE DU CENTRE
	MOVE.L	A4,(A3)+
	MOVEQ	#-1+12*8,D7	;96 CARRêS SUR UNE LIGNE
.FUCK	MOVE.W	D0,D1
	ADD.W	D1,D1
	MULS.W	D2,D1
	SWAP	D1	;X PROJETê
	ADD.W	D3,D1	;X+160:RECENTRAGE
	MOVE.W	D1,(A0)+
	ADDI.W	#LONGUEUR,D0
	DBRA	D7,.FUCK
	MOVEQ	#LONGUEUR,D0
;	CMPI.W	#$7FFF,D2
;	BEQ.S	.ALL_RIGHT
	ADD.W	D0,D0
	MULU.W	D2,D0	;PAS BESOIN DE MULS
	SWAP	D0	;LONGUEUR PROJETêE
	ADDQ.W	#1,D0
.ALL_RIGHT	BSR	MAKE_CARRêS_ON_THE_ACTUAL_LINE
	LEA	-STEP_INTER_Z*2(A1),A1
	DBRA	D6,.NEXT_ZOOM

	MOVE.L	#MESSAGE,PT_MESS
	MOVE.W	#0,NUMER
	LEA	BUF_EFF_Z,A0
	LEA	4(A0),A1
	LEA	ADR_EFF_Z,A2
	MOVE.L	A0,(A2)+
	MOVE.L	A1,(A2)

	ST	FLAG_NEXT_ZOOM
	ST	FLAG_EFFAC_ZOOM
	RTS

MAKE_CARRêS_ON_THE_ACTUAL_LINE
	MOVEM.L	D0-D7,-(SP)
	MOVE.W	D0,D2	;COPY LONGUEUR DANS D2
	LEA	CORES_LONG_CARRêS,A6
	LSL.W	#6,D2
	ADDA.W	D2,A6
	MOVE.W	D0,D2
	LEA	PLACE_DECAL,A0
	CLR.L	(A0)
	CLR.W	4(A0)
	SUBQ.W	#1,D0
	MOVE.L	#$80000000,D1
.RECOM_BSET	OR.L	D1,(A0)
	LSR.L	#1,D1
	DBRA	D0,.RECOM_BSET
	LEA	BUF_CALC,A0
	MOVEQ	#-1+12*8,D7	;96 CARRêS
.NEXT_X	MOVE.W	(A0)+,D0	;X ECRAN
	MOVEQ	#0,D4	;D4-->D6:REGISTRES
	MOVEQ	#0,D5	;CONTENANT LE GRAF
	MOVEQ	#0,D6	;DU MOTIF DECALê & CLIPPê

	CMPI.W	#320,D0
	BGE	.NOTHING_HERE
	MOVE.W	D0,D1
	ADD.W	D2,D1
	SUBQ.W	#1,D1
	BLT	.NOTHING_HERE

	MOVE.W	D0,(A4)+	;ON POSE LE X
	MOVE.L	A2,(A4)+	;ON POSE LA ROUTINE
	LEA	PLACE_DECAL,A5
	MOVE.W	D0,D1
	ANDI.W	#15,D1	;DECALAGE
	MOVE.W	D1,D3
	MOVE.W	(A5)+,D4
	MOVE.W	(A5)+,D5
	MOVE.W	(A5),D6
	ROR.L	D1,D4
	ROR.L	D1,D5
	ROR.W	D1,D6	
	SWAP	D4
	OR.W	D4,D5
	SWAP	D5
	OR.W	D5,D6
	SWAP	D4
	SWAP	D5

	MOVE.W	D0,D1
	ADD.W	D2,D1
	SUBQ.W	#1,D1
	CMPI.W	#320,D1
	BLT.S	.NO_RIGHT_CLIP
	;CLIPPING_DROIT
	ANDI.W	#$FFF0,D0
	MOVE.W	#320,D1
	SUB.W	D0,D1
	SUBQ.W	#1,D1
	LSR.W	#4,D1	;NB DE MOTS A AFFICHER
	ADDQ.W	#1,D1
	CMPI.W	#1,D1
	BNE.S	.TEST_2
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	BRA.S	.TRAITE
.TEST_2	MOVEQ	#0,D6
	BRA.S	.TRAITE
.NO_RIGHT_CLIP	TST.W	D0
	BLT.S	.LEFT_CLIP
	ADD.W	D3,D3
	ADD.W	D3,D3
	TST.L	(A6,D3.W)
	BEQ.S	.PREMIERE_FOIS
	MOVE.L	(A6,D3.W),-4(A4)
	BRA.S	.NOTHING_HERE
.PREMIERE_FOIS	MOVE.L	A2,(A6,D3.W)
	BRA.S	.TRAITE
.LEFT_CLIP	;CLIPPING_GAUCHE
	MOVE.W	D0,D1
	NEG.W	D1
	SUBQ.W	#1,D1
	LSR.W	#4,D1
	ADDQ.W	#1,D1	;NB DE MOTS A EFFACER
	CMPI.W	#1,D1
	BNE.S	.TEST_22
	MOVEQ	#0,D4
	BRA.S	.TRAITE
.TEST_22	MOVEQ	#0,D4
	MOVEQ	#0,D5
.TRAITE	BSR	MAK_COD
.NOTHING_HERE	DBRA	D7,.NEXT_X
	MOVEM.L	(SP)+,D0-D7
	RTS

MAK_COD	MOVE.L	A0,-(SP)
	MOVE.W	D2,D3
	SUBQ.W	#1,D3	;HAUTEUR-1
	MOVEQ	#0,D0
	TST.W	D4
	BEQ.S	.OK_1
	ADDQ.W	#1,D0
.OK_1	TST.W	D5
	BEQ.S	.OK_2
	ADDQ.W	#2,D0
.OK_2	TST.W	D6
	BEQ.S	.OK_3
	ADDQ.W	#4,D0
.OK_3	ADD.W	D0,D0
	ADD.W	D0,D0
	LEA	TABLE_ROUTS_ZOOMS,A0
	MOVE.L	(A0,D0.W),A0	;ADRESSE DE LA ROUTINE
	JSR	(A0)
	MOVE.W	#$4E75,(A2)+	;RTS FINAL DE LA ROUTINE
	MOVE.L	(SP)+,A0
	RTS

NO_REG	RTS
REG_D4_D6	RTS            ;CETTE ROUTINE NE SERT A RIEN:CAS IMPOSSIBLE

ONLY_D4	MOVE.W	#$303C,(A2)+	;MOVE.W #$Imm,D0
	MOVE.W	D4,(A2)+
	MOVE.W	#$8150,(A2)+	;OR.W D0,(A0)
	SUBQ.W	#1,D3
	MOVE.W	#160,D1
.FIN_RECOP	MOVE.W	#$8168,(A2)+	;OR.W D0,d16(A0)
	MOVE.W	D1,(A2)+
	ADDI.W	#160,D1
	DBRA	D3,.FIN_RECOP
	RTS

ONLY_D5	MOVE.W	#$303C,(A2)+	;MOVE.W #$Imm,D0
	MOVE.W	D5,(A2)+
	MOVE.W	#$8150,(A2)+	;OR.W D0,(A0)
	SUBQ.W	#1,D3
	MOVE.W	#160,D1
.FIN_RECOP	MOVE.W	#$8168,(A2)+	;OR.W D0,d16(A0)
	MOVE.W	D1,(A2)+
	ADDI.W	#160,D1
	DBRA	D3,.FIN_RECOP
	RTS

ONLY_D6	MOVE.W	#$303C,(A2)+	;MOVE.W #$Imm,D0
	MOVE.W	D6,(A2)+
	MOVE.W	#$8150,(A2)+	;OR.W D0,(A0)
	SUBQ.W	#1,D3
	MOVE.W	#160,D1
.FIN_RECOP	MOVE.W	#$8168,(A2)+	;OR.W D0,d16(A0)
	MOVE.W	D1,(A2)+
	ADDI.W	#160,D1
	DBRA	D3,.FIN_RECOP
	RTS

ALL_REGS	MOVE.W	#$303C,(A2)+	;MOVE.W #$Imm,D0
	MOVE.W	D4,(A2)+
	MOVE.W	#$323C,(A2)+	;MOVE.W #$Imm,D1
	MOVE.W	D5,(A2)+
	MOVE.W	#$343C,(A2)+	;MOVE.W #$Imm,D2
	MOVE.W	D6,(A2)+
	MOVE.W	#$8150,(A2)+	;OR.W D0,(A0)
	MOVE.W	#$8368,(A2)+	;OR.W D1,d16(A0)
	MOVE.W	#8,(A2)+
	MOVE.W	#$8568,(A2)+	;OR.W D2,d16(A0)
	MOVE.W	#16,(A2)+
	SUBQ.W	#1,D3
	MOVE.W	#160,D1
.FIN_RECOP	MOVE.W	#$8168,(A2)+	;OR.W D0,d16(A0)
	MOVE.W	D1,(A2)+
	MOVE.W	#$8368,(A2)+	;OR.W D1,d16(A0)
	MOVE.W	D1,(A2)
	ADDQ.W	#8,(A2)+
	MOVE.W	#$8568,(A2)+	;OR.W D2,d16(A0)
	MOVE.W	D1,(A2)
	ADDI.W	#16,(A2)+
	ADDI.W	#160,D1
	DBRA	D3,.FIN_RECOP
	RTS

REG_D4_D5	MOVE.W	#$303C,(A2)+	;MOVE.W #$Imm,D0
	MOVE.W	D4,(A2)+
	MOVE.W	#$323C,(A2)+	;MOVE.W #$Imm,D1
	MOVE.W	D5,(A2)+
	MOVE.W	#$8150,(A2)+	;OR.W D0,(A0)
	MOVE.W	#$8368,(A2)+	;OR.W D1,d16(A0)
	MOVE.W	#8,(A2)+
	SUBQ.W	#1,D3
	MOVE.W	#160,D1
.FIN_RECOP	MOVE.W	#$8168,(A2)+	;OR.W D0,d16(A0)
	MOVE.W	D1,(A2)+
	MOVE.W	#$8368,(A2)+	;OR.W D1,d16(A0)
	MOVE.W	D1,(A2)
	ADDQ.W	#8,(A2)+
	ADDI.W	#160,D1
	DBRA	D3,.FIN_RECOP
	RTS

REG_D5_D6	MOVE.W	#$303C,(A2)+	;MOVE.W #$Imm,D0
	MOVE.W	D5,(A2)+
	MOVE.W	#$323C,(A2)+	;MOVE.W #$Imm,D1
	MOVE.W	D6,(A2)+
	MOVE.W	#$8150,(A2)+	;OR.W D0,(A0)
	MOVE.W	#$8368,(A2)+	;OR.W D1,d16(A0)
	MOVE.W	#8,(A2)+
	SUBQ.W	#1,D3
	MOVE.W	#160,D1
.FIN_RECOP	MOVE.W	#$8168,(A2)+	;OR.W D0,d16(A0)
	MOVE.W	D1,(A2)+
	MOVE.W	#$8368,(A2)+	;OR.W D1,d16(A0)
	MOVE.W	D1,(A2)
	ADDQ.W	#8,(A2)+
	ADDI.W	#160,D1
	DBRA	D3,.FIN_RECOP
	RTS

STARS	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	PAS_TOUCHE
	ST	$FFFF8240.W
PAS_TOUCHE	MOVE.L	PT_STARS,A4
	MOVE.L	-4(A4),A5
	MOVE.L	SCREEN2,A6
	ADDQ.L	#2,A6	
	MOVEQ	#0,D6
	MOVE.W	(A5)+,D7
CONT_EFF	ADDQ.W	#4,A5
	MOVE.W	(A5)+,D3
	MOVE.L	D6,(A6,D3.W)
	DBRA	D7,CONT_EFF

	MOVE.L	SCREEN1,A6
	ADDQ.L	#2,A6	
	MOVE.L	(A4)+,A5
	MOVE.W	(A5)+,D7
CONT_AFF	MOVE.L	(A5)+,D6
	MOVE.W	(A5)+,D3
	OR.L	D6,(A6,D3.W)
	DBRA	D7,CONT_AFF

	CMPA.L	#FIN_TABLE,A4
	BNE.S	PAS_FINI_STARS
	LEA	OFFSET_TABLE,A4
PAS_FINI_STARS	MOVE.L	A4,PT_STARS
	RTS

	OPT	O+,W-

CALCULE_STARS	LINK	A5,#-20

	JMP	INIT_STARS

REVIENT_INIT	MOVE.L	16(A5),A4	BUFFER DE DESTINATION
	MOVE.L	20(A5),A2	ADRESSE DE LA TABLE D'OFFSET

	IFNE	ROTATION
	 MOVE.L	#TABLE_SINUS,PT_SINUS
	 MOVE.L	#TABLE_COSINUS,PT_COSINUS
	ENDC

	MOVE.W	#(768/VITESSE)-1,D6
RECOM_TABLE	MOVE.L	A4,(A2)+
	MOVE.L	A4,PT_SOV
	ADDQ.W	#2,A4
	CLR.W	COMPT
	MOVE.L	12(A5),A3
	LEA	PT_DEPART*10(A3),A3
	MOVE.W	#NB_STARS-1,D7
RECOM_CALCULE	
	IFNE	SHOW_TIME
	 NOT.W	$FFFF8240.W
	ENDC
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVE.W	(A3)+,D0	D0=Xe
	MOVE.W	(A3)+,D1	D1=Ye
	MOVE.W	(A3),D2	D2=Ze
	MOVE.W	D2,D5
	MOVE.W	D2,D4
	SUBI.W	#VITESSE,D5
	CMPI.W	#-256,D5
	BGT.S	PAS_CLIP_Z
	ADDI.W	#768,D5
	MOVE.W	4(A3),2(A3)
PAS_CLIP_Z	MOVE.W	D5,(A3)+

	IFNE	ROTATION
	 EXT.L	D0
	 EXT.L	D1
	 MOVEM.L	D2-D5,-(SP)
	 MOVE.L	PT_SINUS,A0
	 MOVE.L	PT_COSINUS,A1
	 MOVE.W	(A3),D5	OFFSET POUR SIN & COS
	 MOVE.W	(A0,D5.W),D2	SIN T
	 MOVE.W	(A1,D5.W),D3	COS_T
	 EXT.L	D3
	 EXT.L	D2
	 MULS.W	D0,D3	D3=XCOS T
	 MULS.W	D1,D2	D2=YSIN T
	 SUB.L	D2,D3	D3=X COS T -Y SIN T
	 MOVE.W	(A0,D5.W),D4	SIN T
	 MOVE.W	(A1,D5.W),D5	COS_T
	 MULS.W	D0,D4	D4=X SIN T
	 MULS.W	D1,D5	D5=Y COS T
	 ADD.L	D4,D5	D5=X SIN T + Y COS T
	 MOVE.L	D3,D0	D0=NEW X
	 MOVE.L	D5,D1	D1=NEW Y
	 MOVE.W	(A3),D5

	 ADDQ.W	#2,D5
	 CMPI.W	#720,D5
	 BLT.S	OK_REPLACE
	 MOVEQ	#0,D5
OK_REPLACE	 MOVE.W	D5,(A3)+
	 ADDQ.W	#2,A3
	 MOVEM.L	(SP)+,D2-D5
	ELSE
	 EXT.L	D0
	 EXT.L	D1
	 ASL.L	#P_DEC,D0	Xe=Xe*256
	 ASL.L	#P_DEC,D1	Ye=Ye*256
	 ADDQ.W	#4,A3
	ENDC

	MOVE.W	#P,D3	D3=|P|
	ADD.W	D3,D2	D2=|P|+Ze
	TST.W	D2
	BGT.S	PAS_Q_INF_0
	MOVE.W	#0,D0
	MOVE.W	#0,D1
	BRA	PAS_POZ
PAS_Q_INF_0	DIVS.W	D2,D0
	DIVS.W	D2,D1
	ADDI.W	#X_CENTER,D0
	ADDI.W	#Y_CENTER,D1

	CMPI.W	#CLIP_GAUCHE,D0
	BGE.S	X_POSITIF
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	BRA.S	PAS_POZ
X_POSITIF	CMPI.W	#CLIP_DROIT,D0
	BLE.S	X_CLIPPê
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	BRA.S	PAS_POZ
X_CLIPPê	CMPI.W	#CLIP_HAUT,D1
	BGE.S	Y_POSITIF
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	BRA.S	PAS_POZ
Y_POSITIF	CMPI.W	#CLIP_BAS,D1
	BLE.S	Y_CLIPPê
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	BRA.S	PAS_POZ
Y_CLIPPê
	LEA	TABLE_X,A0
	LEA	TABLE_Y,A1
	ASL.L	#2,D0
	MOVE.W	2(A0,D0.W),D2	INCREMENT
	MOVE.W	(A0,D0.W),D0	MOTIF
	ASL.L	#1,D1
	MOVE.W	(A1,D1.W),D1	Y*160
	ADD.W	D2,D1
	CMPI.W	#LIM_Z_1,D4
	BGE.S	SECOND_TEST
	SWAP	D0
	CLR.W	D0	MOTIF SUR LE PREMIER PLAN
	BRA.S	OK
SECOND_TEST	CMPI.W	#LIM_Z_2,D4
	BGE.S	THIRD_TEST
	SWAP	D0
	CLR.W	D0
	SWAP	D0	MOTIF SUR LE DEUXIEME PLAN
	BRA.S	OK
THIRD_TEST	MOVE.W	D0,-(SP)
	SWAP	D0
	MOVE.W	(SP)+,D0	MOTIF SUR LES 2 PREMIERS PLANS
OK	TST.L	D0
	BEQ.S	PAS_POZ
	MOVE.L	D0,(A4)+
	MOVE.W	D1,(A4)+
	ADDQ.W	#1,COMPT
PAS_POZ	DBRA	D7,RECOM_CALCULE
	MOVE.L	PT_SOV,A0
	MOVE.W	COMPT,(A0)
	SUBQ.W	#1,(A0)
	DBRA	D6,RECOM_TABLE

	MOVE.L	20(A5),A3
	LEA	(768/VITESSE)*4(A3),A2
	MOVE.L	-4(A2),-4(A3)

	MOVE.L	8(A5),A2
	MOVE.L	20(A5),(A2)

	UNLK	A5
	RTS

INIT_STARS	MOVE.L	12(A5),A0	BUFFER DE DESTINATION
	LEA	PT_DEPART*10(A0),A0
	MOVE.W	#NB_STARS-1,D5
REPEAT_STARS	MOVE.W	4(A0),D0	Z0
	MOVE.W	#(768/VITESSE)-1,D7
TEST_Z	SUBI.W	#VITESSE,D0
	CMPI.W	#-256,D0
	BGT.S	PAS_LOOP_Z
	ADDI.W	#768,D0	Z
	BRA.S	FINI_TEST_Z
PAS_LOOP_Z	DBRA	D7,TEST_Z
FINI_TEST_Z	ADDQ.W	#1,D7
	ADD.W	D7,D7
	MOVE.W	#718,D6
	SUB.W	D7,D6
	MOVE.W	D6,8(A0)
	LEA	10(A0),A0
	DBRA	D5,REPEAT_STARS
	JMP	REVIENT_INIT
	OPT	O-,W-

INTRO_PART_THREE
	LEA	DATA_HS,A0
	MOVE.L	A0,POIT
	CLR.L	Y_VALUE

	CLR.L	$FFFF8240.W
	CLR.L	$FFFF8244.W
	CLR.L	$FFFF8248.W
	CLR.L	$FFFF824C.W
	CLR.L	$FFFF8250.W
	CLR.L	$FFFF8254.W
	CLR.L	$FFFF8258.W
	CLR.L	$FFFF825C.W

	LEA	DATAS_PALETTES,A0
	LEA	BUF_PALS,A1
	JSR	DO_COLS

	move.l	SCREEN_CAT,d0
	lsr.l	#8,d0		
	move.l	#$ffff8201,a0
	movep	d0,(a0)

	MOVE.L	#VBL_CAT,$70.W
	MOVE.L	#INTER_RTE,$120.W
	
	CLR.B	$FFFFFA1B.W
	BSET	#0,$FFFFFA07.W
	BSET	#0,$FFFFFA13.W

BARRAGE_CAT_1	BRA.S	BARRAGE_CAT_1

	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230(A1),A1

	MOVE	#600+270-1,D7
AFF_P	MOVE	#(224/8)-1,D6
AFF_I	MOVE.L	#$0000FFFF,(A1)+
	CLR.L	(A1)+
	DBF	D6,AFF_I
;	LEA	48(A0),A0
;	LEA	70(A1),A1
	ADDQ.L	#6,A1
	DBF	D7,AFF_P


	CLR.L	FORCED
	MOVE.L	PT_MESS,A0
	MOVE.B	(A0)+,D0
	MOVE.L	A0,PT_MESS
	
	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVE	#7999,D0
GOGO	CLR.L	(A0)+
	CLR.L	(A1)+
	DBF	D0,GOGO

	MOVE.L	#VBL_PART_TWO,$70.W

IT_VBL2	TST.L	FORCED
	BNE	FORCE2
	TST.B	FLAG_NEXT_ZOOM
	BEQ.S	.NO_MAKE
	BSR	PREP_NEXT_ZOOM
.NO_MAKE	LEA	TABLE_RT2,A0
MOD_RT2	EQU	*+2
	LEA	0(A0),A0
	CMPI.L	#$99999999,(A0)
	BEQ.S	IT_VBL2
	MOVE.L	(A0),A0
	JSR	(A0)
	ADDQ	#4,MOD_RT2
	BRA	IT_VBL2
FORCE2
	MOVE.L	#VBL_ZIK,$70.W
	JMP	THREE_B
TABLE_RT2	DC.L	RT2_1
	DC.L	RT2_2
	DC.L	RT2_3
	DC.L	$99999999

RT2_1	LEA	BUF_BIDON2,A1
	LEA	PART1B,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230+80(A1),A1
	LEA	230*135(A1),A1
	LEA	230*135(A1),A1
	MOVE	#198,D7
AFFI_Y	MOVE	#(160/4)-1,D6
AFFI_X	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFFI_X
;	LEA	48(A0),A0
	LEA	70(A1),A1
	DBF	D7,AFFI_Y
	
	MOVEM.L	BUF_BIDON2+2,D0-D7
	MOVEM.L	D0-D7,hop1
	RTS
******
RT2_2	LEA	BUF_BIDON2,A1
	LEA	PART2B,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230+80(A1),A1
	LEA	230*135(A1),A1
	LEA	230*135(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#198,D7
AFFI_Y3	MOVE	#(160/4)-1,D6
AFFI_X3	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFFI_X3
;	LEA	48(A0),A0
	LEA	70(A1),A1
	DBF	D7,AFFI_Y3
	MOVEM.L	BUF_BIDON2+2,D0-D7
	MOVEM.L	D0-D7,hop2
	RTS
******
RT2_3	LEA	BUF_BIDON2,A1
	LEA	PART3B,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230+80(A1),A1
	LEA	230*135(A1),A1
	LEA	230*135(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#199,D7
AFFI_Y5	MOVE	#(160/4)-1,D6
AFFI_X5	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFFI_X5
;	LEA	48(A0),A0
	LEA	70(A1),A1
	DBF	D7,AFFI_Y5
	MOVEM.L	BUF_BIDON2+2,D0-D7
	MOVEM.L	D0-D7,hop3
	RTS
THREE_B
	LEA	DATA_HS,A0
	MOVE.L	A0,POIT

	LEA	DATAS_PALETTES2,A0
	LEA	BUF_PALS,A1
	JSR	DO_COLS

	CLR	MOD_PAL
	CLR	MOD_DEG2
	CLR.L	TIMER
	CLR.L	Y_VALUE
	CLR.L	MOD_CRB
	MOVE.L	#DEG2,DEG_NAME
	MOVE.L	#CRB2,CRB_NAME
	MOVE.L	#BARRAGE_CAT_2,MOD_OUT

	MOVE.L	#VBL_CAT,$70.W
	MOVE.L	#INTER_RTE,$120.W
	
	CLR.B	$FFFFFA1B.W
	BSET	#0,$FFFFFA07.W
	BSET	#0,$FFFFFA13.W

BARRAGE_CAT_2	BRA.S	BARRAGE_CAT_2

	MOVE.L	SCREEN_CAT,A1
	LEA	1600+230(A1),A1

	MOVE	#600+270-1,D7
AFF_PZ	MOVE	#(224/8)-1,D6
AFF_IZ	MOVE.L	#$0000FFFF,(A1)+
	CLR.L	(A1)+
	DBF	D6,AFF_IZ
;	LEA	48(A0),A0
;	LEA	70(A1),A1
	ADDQ.L	#6,A1
	DBF	D7,AFF_PZ

	CLR.L	FORCED
	MOVE.L	PT_MESS,A0
	MOVE.B	(A0)+,D0
	MOVE.L	A0,PT_MESS
	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVE	#7999,D0
GOGO2	CLR.L	(A0)+
	CLR.L	(A1)+
	DBF	D0,GOGO2

	MOVE.L	#VBL_PART_TWO,$70.W

IT_VBL3	TST.L	FORCED
	BNE	FORCE3
	TST.B	FLAG_NEXT_ZOOM
	BEQ.S	.NO_MAKE
	BSR	PREP_NEXT_ZOOM
.NO_MAKE	LEA	TABLE_RT3,A0
MOD_RT3	EQU	*+2
	LEA	0(A0),A0
	CMPI.L	#$99999999,(A0)
	BEQ.S	IT_VBL3
	MOVE.L	(A0),A0
	JSR	(A0)
	ADDQ	#4,MOD_RT3
	BRA	IT_VBL3
FORCE3
	MOVE.L	#VBL_ZIK,$70.W
	JMP	THREE_C
TABLE_RT3	DC.L	RT3_1
	DC.L	RT3_2
	DC.L	RT3_3
	DC.L	RT3_4
	DC.L	RT3_5
	DC.L	RT3_6
	DC.L	$99999999

RT3_1	LEA	BUF_BIDON2,A1
	LEA	PART1C,A0
	JSR	D_PACK

	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN1,A1
	LEA	1600+230(A1),A1
	ADDA.L	#266*230,A1
	MOVE	#198,D7
AFF_Y	MOVE	#(112/4)-1,D6
AFF_X	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y
	RTS
******
RT3_2	LEA	BUF_BIDON2,A1
	LEA	PART2C,A0
	JSR	D_PACK

	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN1,A1
	LEA	1600+230+112(A1),A1
	ADDA.L	#266*230,A1
	MOVE	#198,D7
AFF_Y2	MOVE	#(112/4)-1,D6
AFF_X2	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X2
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y2
	RTS
******
RT3_3	LEA	BUF_BIDON2,A1
	LEA	PART3C,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN1,A1
	LEA	1600+230(A1),A1
	ADDA.L	#266*230,A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#199,D7
AFF_Y3	MOVE	#(112/4)-1,D6
AFF_X3	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X3
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y3
	RTS
******
RT3_4	LEA	BUF_BIDON2,A1
	LEA	PART4C,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN1,A1
	LEA	1600+230+112(A1),A1
	ADDA.L	#266*230,A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	MOVE	#199,D7
AFF_Y4	MOVE	#(112/4)-1,D6
AFF_X4	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X4
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y4
	RTS
******
RT3_5	LEA	BUF_BIDON2,A1
	LEA	PART5C,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN1,A1
	LEA	1600+230(A1),A1
	ADDA.L	#266*230,A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	LEA	230*100(A1),A1
	LEA	230*100(A1),A1
	MOVE	#199,D7
AFF_Y5	MOVE	#(112/4)-1,D6
AFF_X5	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X5
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y5
	RTS
******
RT3_6	LEA	BUF_BIDON2,A1
	LEA	PART6C,A0
	JSR	D_PACK
	LEA	BUF_BIDON2+34,A0
	MOVE.L	SCREEN1,A1
	LEA	1600+112+230(A1),A1
	ADDA.L	#266*230,A1
	LEA	230*100(A1),A1
	LEA	230*99(A1),A1
	LEA	230*100(A1),A1
	LEA	230*100(A1),A1
	MOVE	#199,D7
AFF_Y6	MOVE	#(112/4)-1,D6
AFF_X6	MOVE.L	(A0)+,(A1)+
	DBF	D6,AFF_X6
	LEA	48(A0),A0
	LEA	70+48(A1),A1
	DBF	D7,AFF_Y6
	RTS
******
THREE_C	LEA	DATA_HS,A0
	MOVE.L	A0,POIT

	LEA	DATAS_PALETTES3,A0
	LEA	BUF_PALS,A1
	JSR	DO_COLS

	CLR	MOD_PAL
	CLR	MOD_DEG2
	CLR.L	TIMER
	CLR.L	Y_VALUE
	CLR.L	MOD_CRB
	MOVE.L	#DEG2,DEG_NAME
	MOVE.L	#CRB3,CRB_NAME
	MOVE.L	#BARRAGE_CAT_3,MOD_OUT

	MOVE.L	#VBL_CAT,$70.W
	MOVE.L	#INTER_RTE,$120.W
	
	CLR.B	$FFFFFA1B.W
	BSET	#0,$FFFFFA07.W
	BSET	#0,$FFFFFA13.W

BARRAGE_CAT_3	BRA.S	BARRAGE_CAT_3
	CLR.L	FORCED
	MOVE.L	PT_MESS,A0
	MOVE.B	(A0)+,D0
	MOVE.L	A0,PT_MESS
	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVE	#7999,D0
GOGO3	CLR.L	(A0)+
	CLR.L	(A1)+
	DBF	D0,GOGO3

	MOVE.L	#VBL_PART_TWO,$70.W

IT_VBL4	TST.L	FORCED
	BNE	FORCE4
	TST.B	FLAG_NEXT_ZOOM
	BEQ.S	.NO_MAKE
	BSR	PREP_NEXT_ZOOM
.NO_MAKE	BRA	IT_VBL3
FORCE4
	MOVE.L	#VBL_ZIK,$70.W
	MOVE	#$001,$FFFF8240.W
FINI	BRA.S	FINI

DO_COLS	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
DO_AGAIN	MOVE	(A0)+,D0
	SUBQ	#1,D0
DO_A_COP	MOVE	#15,D1
PALCOP	MOVE	(A0)+,(A1)+
	DBF	D1,PALCOP
	ADDQ	#1,D2
	CMPI	#600+270,D2
	BEQ.S	GENERATION_OK
	LEA	-32(A0),A0
	DBF	D0,DO_A_COP
	LEA	32(A0),A0
	BRA.S	DO_AGAIN
GENERATION_OK	RTS

VBL_CAT
	CLR.B	$FFFFFA1B.W
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVEQ	#0,D7
	MOVEM.L	D0-D7,$FFFF8240.W

	MOVE.B	#0,$FFFFFA19.W
	MOVE.B	#99,$FFFFFA1F.W		; BORDER HAUT
	MOVE.B	#4,$FFFFFA19.W
	BCLR	#3,$FFFFFA17.W
	MOVE.L	#INTER_TMA_CAT,$134.W
	ORI.B	#$20,$FFFFFA13.W
	ORI.B	#$20,$FFFFFA07.W

	MOVEM.L	D0-A6,-(SP)
	JSR	ZIK+8
	CLR.L	CHANGE
	MOVEM.L	(SP)+,D0-A6

	LEA	BUF_PALS,A0
MOD_PAL	EQU	*+2
	LEA	0(A0),A0
	MOVE.L	#42-1,D5
	RTE
VBL_END
	CLR.B	$FFFFFA1B.W
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVEQ	#0,D7
	MOVEM.L	D0-D7,$FFFF8240.W

	MOVE.B	#0,$FFFFFA19.W
	MOVE.B	#99,$FFFFFA1F.W		; BORDER HAUT
	MOVE.B	#4,$FFFFFA19.W
	BCLR	#3,$FFFFFA17.W
	MOVE.L	#INTER_TMA2_CAT,$134.W
	ORI.B	#$20,$FFFFFA13.W
	ORI.B	#$20,$FFFFFA07.W

DEG_NAME	EQU	*+2
	LEA	DEG1,A0
MOD_DEG2	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$9999,(A0)
	BEQ.S	OUT
	MOVEM.L	(A0),D0-D7
	MOVEM.L	D0-D7,BUF_PALS
	ADDQ.L	#1,TIMER
	CMPI.L	#5,TIMER
	BNE.S	.GO
	CLR.L	TIMER
	ADD	#32,MOD_DEG2
.GO
	LEA	BUF_PALS,A0
	MOVE.L	#42-1,D5
	RTE
OUT	MOVE.L	#INTER_RTE,$134.W
	MOVE.L	#VBL_ZIK,$70.W
MOD_OUT	EQU	*+4
	MOVE	#$4E71,BARRAGE_CAT_1
	RTE
TIMER	DC.L	0
;VBL_ZIK
;	MOVEM.L	D0-A6,-(SP)
;	JSR	ZIK
;	MOVEM.L	(SP)+,D0-A6
;	RTE

INTER_TMA_CAT	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVE	#$2100,SR

	LEA	$FFFF8209,A3
	LEA	$FFFF8260,A6
	LEA	$FFFF820A,A5

	MOVEQ	#0,D0
	MOVEQ	#2,D1

	STOP	#$2100
	MOVE	#$2700,SR
	MOVE	#$2300,(SP)

	MOVEQ	#29,D2
SYNCHROA_CAT	DBF	D2,SYNCHROA_CAT
	NOP

	MOVE.B	D0,(A5)
	REPT	6
	NOP
	ENDR
	MOVE.B	D1,(A5)

*******

	MOVEA.L	POIT,A2

	;MOVE.L	A6,USP
	MOVE.L	#$FFFF8209,A6
	MOVE.L	#$FFFF8260,A4
	MOVE.L	#$FFFF820A,A3
	MOVEQ	#0,D1		
	MOVEQ	#$10,D6
	MOVE.L	#228-12+2-1-1-1,D0
;	MOVE	#$2700,SR

SYNCHRO_CAT	MOVE.B	(A6),D7
	BEQ.S	SYNCHRO_CAT
	SUB.W	D7,D6		
	LSL.W	D6,D1		
	;MOVE.L	USP,A6
	DCB	97-3-4,$4E71

	REPT	9
	MOVE.L	(A2)+,A1	*3
	JSR	(A1)	*4
	ENDR
	
	DCB	7,$4E71

	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	88,$4E71
	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13-12,$4E71
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-6,$4E71
	MOVE.L	(A0)+,$FFFF8248.W	6

	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	88-5*6,$4E71
	MOVE.L	(A0)+,$FFFF824C.W
	MOVE.L	(A0)+,$FFFF8250.W
	MOVE.L	(A0)+,$FFFF8254.W
	MOVE.L	(A0)+,$FFFF8258.W
	MOVE.L	(A0)+,$FFFF825C.W
	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-1,$4E71

FULLSCREEN_CAT	NOP
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE.L	(A0)+,$FFFF8248.W	6
	MOVE.L	(A0)+,$FFFF824C.W	6
	MOVE.L	(A0)+,$FFFF8250.W	6
	MOVE.L	(A0)+,$FFFF8254.W	6
	MOVE.L	(A0)+,$FFFF8258.W	6
	MOVE.L	(A0)+,$FFFF825C.W	6
	DCB	88-6*8,$4E71

	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-4,$4E71
	DBF	D0,FULLSCREEN_CAT

	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE.L	(A0)+,$FFFF8248.W	6
	MOVE.L	(A0)+,$FFFF824C.W	6
	MOVE.L	(A0)+,$FFFF8250.W	6
	MOVE.L	(A0)+,$FFFF8254.W	6
	MOVE.L	(A0)+,$FFFF8258.W	6
	MOVE.L	(A0)+,$FFFF825C.W	6
	DCB	88-48,$4E71

	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	;	ICI=116	NOPS

	CLR.B	$FFFF820A.W 
	DCB	8,$4E71

	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	MOVE	A4,(A3)
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE.L	(A0)+,$FFFF8248.W	6
	MOVE.L	(A0)+,$FFFF824C.W	6
	MOVE.L	(A0)+,$FFFF8250.W	6
	MOVE.L	(A0)+,$FFFF8254.W	6
	MOVE.L	(A0)+,$FFFF8258.W	6
	MOVE.L	(A0)+,$FFFF825C.W	6
	DCB	88-2-48,$4E71

	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-1,$4E71

BL2	NOP
	
	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE.L	(A0)+,$FFFF8248.W	6
	MOVE.L	(A0)+,$FFFF824C.W	6
	MOVE.L	(A0)+,$FFFF8250.W	6
	MOVE.L	(A0)+,$FFFF8254.W	6
	MOVE.L	(A0)+,$FFFF8258.W	6
	MOVE.L	(A0)+,$FFFF825C.W	6
	DCB	88-48,$4E71

	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13,$4E71
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-4,$4E71
	DBF	D5,BL2

CRB_NAME	EQU	*+2
	LEA	CRB,A0
MOD_CRB=*+2
	ADDA.L	#0,A0
	CMPI.L	#$99999999,(A0)
	BNE.S	NOTEND_CAT
;	CLR.L	MOD_CRB
;	LEA	CRB,A0
	SUBQ.L	#4,A0
;	CLR.L	Y_VALUE
	SUBQ.L	#4,MOD_CRB
	MOVE.L	#VBL_END,$70.W
NOTEND_CAT
	CMPI.B	#$1,$FFFFFC02.W
	BEQ.S	NOT_MOVE_CAT
	ADDQ.L	#4,MOD_CRB
NOT_MOVE_CAT
	MOVE.L	(A0),Y_VALUE
	MOVE.L	(A0),D0
	DIVU	#230,D0
	MOVEQ	#0,D1
	MOVE	D0,D1
	LSL	#5,D1
	MOVE	D1,MOD_PAL


;	CMPI.B	#$50,$FFFFFC02.W
;	BNE.S	PAS_HAUT
;;	CMPI.L	#230*400,Y_VALUE
;;	BEQ.S	PAS_HAUT
;	ADD.L	#230,Y_VALUE
;	ADD	#32,MOD_PAL
;PAS_HAUT	CMPI.B	#$48,$FFFFFC02.W
;	BNE.S	PAS_BAS
;	TST.L	Y_VALUE
;	BEQ.S	PAS_BAS
;	SUB.L	#230,Y_VALUE
;	SUB	#32,MOD_PAL
;PAS_BAS
;	CMPI.B	#$4B,$FFFFFC02.W
;	BNE.S	PAS_GA
;	ADDQ.L	#8,Y_VALUE
;PAS_GA	CMPI.B	#$4D,$FFFFFC02.W
;	BNE.S	PAS_DR
;	SUBQ.L	#8,Y_VALUE
;PAS_DR

	MOVEQ	#0,D0	
	MOVEQ	#0,D1
;	MOVE.L	Y_VALUE,$E0000
	MOVE.L	Y_VALUE,D0
	
	LSR.L	#8,D0
	MOVE.L	D0,D1
	LSL.L	#8,D1
	
	MOVE.L	Y_VALUE,D0
	SUB.L	D1,D0

	LEA	DATA_HS,A0

	TST.L	D0
	BNE.S	DEJ_CAT
	LEA	RIEN,A0
	MOVE.L	A0,POIT
	BRA.S	OKAY_CAT
DEJ_CAT	SUBQ.L	#2,D0
	MULU	#18,D0
	ADDA.L	D0,A0
	MOVE.L	A0,POIT
		
OKAY_CAT
;	move.l	SCREEN1,d0
;	move.l	SCREEN2,SCREEN1		
;	move.l	d0,SCREEN2

	move.l	SCREEN_CAT,d0
	ADD.L	D1,D0
	lsr.l	#8,d0
	LEA	$FFFF8201.W,A0
	movep	d0,(a0)

	RTE
;Y_VALUE	DC.L	0
CNT_TIME	DC.L	0
;TB0_IR	RTE

INTER_TMA2_CAT	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVE	#$2100,SR

	LEA	$FFFF8209,A3
	LEA	$FFFF8260,A6
	LEA	$FFFF820A,A5

	MOVEQ	#0,D0
	MOVEQ	#2,D1

	STOP	#$2100
	MOVE	#$2700,SR
	MOVE	#$2300,(SP)

	MOVEQ	#29,D2
RSYNCHROA_CAT	DBF	D2,RSYNCHROA_CAT
	NOP

	MOVE.B	D0,(A5)
	REPT	6
	NOP
	ENDR
	MOVE.B	D1,(A5)

*******

	MOVEA.L	POIT,A2

	;MOVE.L	A6,USP
	MOVE.L	#$FFFF8209,A6
	MOVE.L	#$FFFF8260,A4
	MOVE.L	#$FFFF820A,A3
	MOVEQ	#0,D1		
	MOVEQ	#$10,D6
	MOVE.L	#228-12+2-1-1-1,D0
;	MOVE	#$2700,SR

SYNCHROR_CAT	MOVE.B	(A6),D7
	BEQ.S	SYNCHROR_CAT
	SUB.W	D7,D6		
	LSL.W	D6,D1		
	;MOVE.L	USP,A6
	DCB	97-3-4,$4E71

	REPT	9
	MOVE.L	(A2)+,A1	*3
	JSR	(A1)	*4
	ENDR
	
	DCB	7,$4E71

	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	88,$4E71
	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13-12,$4E71
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-6,$4E71
	MOVE.L	(A0)+,$FFFF8248.W	6

	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	88-5*6,$4E71
	MOVE.L	(A0)+,$FFFF824C.W
	MOVE.L	(A0)+,$FFFF8250.W
	MOVE.L	(A0)+,$FFFF8254.W
	MOVE.L	(A0)+,$FFFF8258.W
	MOVE.L	(A0)+,$FFFF825C.W
	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13-2,$4E71
	LEA	-32(A0),A0
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-1,$4E71

FULLSCREEN2_CAT	NOP
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE.L	(A0)+,$FFFF8248.W	6
	MOVE.L	(A0)+,$FFFF824C.W	6
	MOVE.L	(A0)+,$FFFF8250.W	6
	MOVE.L	(A0)+,$FFFF8254.W	6
	MOVE.L	(A0)+,$FFFF8258.W	6
	MOVE.L	(A0)+,$FFFF825C.W	6
	DCB	88-6*8,$4E71

	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13-2,$4E71
	LEA	-32(A0),A0
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-4,$4E71
	DBF	D0,FULLSCREEN2_CAT

	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE.L	(A0)+,$FFFF8248.W	6
	MOVE.L	(A0)+,$FFFF824C.W	6
	MOVE.L	(A0)+,$FFFF8250.W	6
	MOVE.L	(A0)+,$FFFF8254.W	6
	MOVE.L	(A0)+,$FFFF8258.W	6
	MOVE.L	(A0)+,$FFFF825C.W	6
	DCB	88-48,$4E71

	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13-2,$4E71
	LEA	-32(A0),A0
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	;	ICI=116	NOPS

	CLR.B	$FFFF820A.W 
	DCB	8,$4E71

	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	MOVE	A4,(A3)
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE.L	(A0)+,$FFFF8248.W	6
	MOVE.L	(A0)+,$FFFF824C.W	6
	MOVE.L	(A0)+,$FFFF8250.W	6
	MOVE.L	(A0)+,$FFFF8254.W	6
	MOVE.L	(A0)+,$FFFF8258.W	6
	MOVE.L	(A0)+,$FFFF825C.W	6
	DCB	88-2-48,$4E71

	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13-2,$4E71
	LEA	-32(A0),A0
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-1,$4E71
;	JMP	SUITE

BL	NOP
	;REPT	42
	MOVE	A4,(A4)
	MOVE.B	#0,(A4)
	MOVE.L	(A0)+,$FFFF8240.W	6
	MOVE.L	(A0)+,$FFFF8244.W	6
	MOVE.L	(A0)+,$FFFF8248.W	6
	MOVE.L	(A0)+,$FFFF824C.W	6
	MOVE.L	(A0)+,$FFFF8250.W	6
	MOVE.L	(A0)+,$FFFF8254.W	6
	MOVE.L	(A0)+,$FFFF8258.W	6
	MOVE.L	(A0)+,$FFFF825C.W	6
	DCB	88-48,$4E71

	MOVE.b	#0,(A3)
	MOVE	a4,(A3)
	DCB	13-2,$4E71
	LEA	-32(A0),A0
	MOVE	a4,(A4)
	MOVE.B	#0,(A4)
	DCB	12-4,$4E71
	DBF	D5,BL
	;ENDR



	MOVEQ	#0,D0	
	MOVEQ	#0,D1
	MOVE.L	Y_VALUE,D0
	
	LSR.L	#8,D0
	MOVE.L	D0,D1
	LSL.L	#8,D1
	
	MOVE.L	Y_VALUE,D0
	SUB.L	D1,D0

	LEA	DATA_HS,A0

	TST.L	D0
	BNE.S	DEJT_CAT
	LEA	RIEN,A0
	MOVE.L	A0,POIT
	BRA.S	OKAYT_CAT
DEJT_CAT	SUBQ.L	#2,D0
	MULU	#18,D0
	ADDA.L	D0,A0
	MOVE.L	A0,POIT
		
OKAYT_CAT
;	move.l	SCREEN1,d0
;	move.l	SCREEN2,SCREEN1		
;	move.l	d0,SCREEN2

	move.l	SCREEN_CAT,d0
	ADD.L	D1,D0
	lsr.l	#8,d0
	LEA	$FFFF8201.W,A0
	movep	d0,(a0)

	RTE

;
;FIN:	MOVE.L	4.W,A0
;	JMP	(A0)


TABLE_X	
N	SET	0
	REPT	20
	DC.W	32768,N,16384,N,8192,N,4096,N,2048,N,1024,N,512,N,256,N,128,N,64,N,32,N,16,N,8,N,4,N,2,N,1,N
N	SET	N+8
	ENDR

TABLE_Y
N	SET	0
	REPT	200
	DC.W	N*160
N	SET	N+1
	ENDR

	IFNE	ROTATION
TABLE_SINUS	INCBIN	SINUS.STR
	EVEN

TABLE_COSINUS	INCBIN	COSINUS.STR
	EVEN
PT_SINUS	DS.L	1
PT_COSINUS	DS.L	1
	ENDC

COMPT	DS.W	1
OFFSET	DS.L	1
PT_SOV	DS.L	1

	DATA

COEFFS	DC.W	150,12,255,0,410,24

COOR_PIERRES	INCBIN	PIERRES.COR

CODS	INCBIN	PIERRES.COD

IMG1	INCBIN	GOKU_F1D.PI1
IMG2	INCBIN	GOKU_F2C.PI1
HEADS	INCBIN	HEADS.GFX
ZIK	INCBIN	THALION.MUS
;ZIK2	INCBIN	VENUS.BIN

PART1	INCBIN	B:\CYL1_PAK.PI1
PART2	INCBIN	B:\CYL2_PAK.PI1
PART3	INCBIN	B:\CYL3_PAK.PI1
PART4	INCBIN	B:\CYL4_PAK.PI1
PART5	INCBIN	B:\CYL5_PAK.PI1
PART6	INCBIN	B:\CYL6_PAK.PI1
PART7	INCBIN	B:\CYL7_PAK.PI1
PART8	INCBIN	B:\CYL8_PAK.PI1
PART1B	INCBIN	B:\ALX1B.PI1
PART2B	INCBIN	B:\ALX2B.PI1
PART3B	INCBIN	B:\ALX3B.PI1
PART1C	INCBIN	TAM1_PAK.PI1
PART2C	INCBIN	TAM2_PAK.PI1
PART3C	INCBIN	TAM3_PAK.PI1
PART4C	INCBIN	TAM4_PAK.PI1
PART5C	INCBIN	TAM5_PAK.PI1
PART6C	INCBIN	TAM6_PAK.PI1

DATAS_PALETTES
	DC	289
;	DC	$777
;	DCB	15,0
	DC	$0,$356,$777,$521,$321,$744,$723,$612,$210,$421,$532,$643,$754,$765,$004,$126
	DC	800
	DC	$0,$201,$777,$101,$202,$313,$424,$535,$646,$302,$532,$643,$754,$765,$403,$504

DATAS_PALETTES2
	DC	270
	DCB	16,$777

	DC	173
hop1	DC	$0,$356,$777,$521,$321,$744,$723,$612,$210,$421,$532,$643,$754,$765,$004,$126
	DC	200-173+100
hop2	DC	$0,$201,$777,$101,$202,$313,$424,$535,$646,$302,$532,$643,$754,$765,$403,$504
	DC	600
hop3	DC	$0,$201,$777,$101,$202,$313,$424,$535,$646,$302,$532,$643,$754,$765,$403,$504

DATAS_PALETTES3
*PALETTE 1 DU HAUT JUSQU'AU DEBUT DU BRACELET
	DC	129+266
	DC	$000,$356,$777,$020,$321,$744,$723,$612
	DC	$210,$421,$532,$643,$754,$765,$004,$126
*HAUT DU BRACELET
	DC	28
	DC	$000,$356,$777,$750,$321,$744,$640,$761
	DC	$210,$421,$532,$643,$754,$765,$004,$126
*BLEU DU VETEMENT/BAS DU BRACELET/FIN ONGLE
	DC	4
	DC	$000,$750,$777,$001,$321,$125,$002,$003
	DC	$210,$421,$532,$643,$754,$765,$004,$015
*BLEU DU VETEMENT
	DC	72
	DC	$000,$356,$777,$001,$321,$125,$002,$003
	DC	$210,$421,$532,$643,$754,$765,$004,$015
*BLEU+JAUNE CEINTURE+FIN PEAU
	DC	18
	DC	$000,$643,$777,$754,$531,$016,$002,$003
	DC	$770,$760,$765,$650,$640,$210,$004,$015
*BLEU+JAUNE CEINTURE
	DC	90
	DC	$000,$346,$777,$001,$531,$016,$002,$003
	DC	$770,$760,$014,$650,$640,$210,$004,$015
*BLEU FINAL
	DC	600
	DC	$000,$346,$777,$001,$557,$016,$002,$003
	DC	$235,$124,$014,$246,$126,$677,$004,$015


DEG1
	DC	$000,$356,$777,$521,$321,$744,$723,$612
	DC	$210,$421,$532,$643,$754,$765,$004,$126

	DC	$111,$467,$777,$632,$432,$755,$734,$723
	DC	$321,$532,$643,$754,$765,$776,$115,$237

	DC	$222,$577,$777,$743,$543,$766,$745,$734
	DC	$432,$643,$754,$765,$776,$777,$226,$347

	DC	$333,$677,$777,$754,$654,$777,$756,$745
	DC	$543,$754,$765,$776,$777,$777,$337,$457

	DC	$444,$777,$777,$765,$765,$777,$767,$756
	DC	$654,$765,$776,$777,$777,$777,$447,$567

	DC	$555,$777,$777,$776,$776,$777,$777,$767
	DC	$765,$776,$777,$777,$777,$777,$557,$677

	DC	$666,$777,$777,$777,$777,$777,$777,$777
	DC	$776,$777,$777,$777,$777,$777,$667,$777

	DC	$777,$777,$777,$777,$777,$777,$777,$777
	DC	$777,$777,$777,$777,$777,$777,$777,$777
	DCB	8*16,$777
	DCB	16,$666
	DCB	16,$555
	DCB	16,$444
	DCB	16,$333
	DCB	16,$222
	DCB	16,$111
	DCB	16,$000
	DC	$9999
DEG2
	DC	$777,$777,$777,$777,$777,$777,$777,$777
	DC	$777,$777,$777,$777,$777,$777,$777,$777
	DCB	16,$666
	DCB	16,$555
	DCB	16,$444
	DCB	16,$333
	DCB	16,$222
	DCB	16,$111
	DCB	16,$000
	DC	$9999

CRB	INCBIN	B:\CRB1.DAT
CRB2	INCBIN	B:\CRB2.DAT
CRB3	INCBIN	A:\CRBF2.CAT

DATA_HS
 DC.L H44,H44,H2,H2,H2,H80,H0,H0,H0
 DC.L H44,H44,H2,H2,H80,H0,H0,H0,H0
 DC.L H44,H44,H2,H80,H0,H0,H0,H0,H0
 DC.L H44,H44,H80,H0,H0,H0,H0,H0,H0
 DC.L H44,H24,H24,H2,H80,H0,H0,H0,H0
 DC.L H44,H24,H24,H80,H0,H0,H0,H0,H0
 DC.L H24,H2,H2,H2,H2,H2,H0,H0,H0
 DC.L H24,H2,H2,H2,H2,H0,H0,H0,H0
 DC.L H24,H2,H2,H2,H0,H0,H0,H0,H0
 DC.L H24,H2,H2,H0,H0,H0,H0,H0,H0
 DC.L H24,H2,H0,H0,H0,H0,H0,H0,H0
 DC.L H24,H0,H0,H0,H0,H0,H0,H0,H0
 DC.L H70,H44,H24,H24,H24,H80,H80,H0,H0
 DC.L H70,H44,H2,H2,H2,H80,H0,H0,H0
 DC.L H70,H44,H2,H2,H80,H0,H0,H0,H0
 DC.L H70,H44,H2,H80,H0,H0,H0,H0,H0
 DC.L H44,H2,H2,H2,H2,H2,H0,H0,H0
 DC.L H44,H2,H2,H2,H2,H0,H0,H0,H0
 DC.L H44,H2,H2,H2,H0,H0,H0,H0,H0
 DC.L H44,H2,H2,H0,H0,H0,H0,H0,H0
 DC.L H44,H2,H0,H0,H0,H0,H0,H0,H0
 DC.L H44,H0,H0,H0,H0,H0,H0,H0,H0
 DC.L H24,H24,H2,H0,H0,H0,H0,H0,H0
 DC.L H24,H24,H0,H0,H0,H0,H0,H0,H0
 DC.L H44,H44,H44,H2,H80,H0,H0,H0,H0
 DC.L H44,H44,H44,H80,H0,H0,H0,H0,H0
 DC.L H70,H70,H2,H2,H2,H80,H0,H0,H0
 DC.L H70,H70,H2,H2,H80,H0,H0,H0,H0
 DC.L H70,H70,H2,H80,H0,H0,H0,H0,H0
 DC.L H44,H24,H2,H2,H2,H2,H0,H0,H0
 DC.L H44,H24,H2,H2,H2,H0,H0,H0,H0
 DC.L H44,H24,H2,H2,H0,H0,H0,H0,H0
 DC.L H44,H24,H2,H0,H0,H0,H0,H0,H0
 DC.L H44,H24,H0,H0,H0,H0,H0,H0,H0
 DC.L H70,H0,H0,H0,H0,H0,H0,H0,H0
 DC.L H24,H24,H24,H0,H0,H0,H0,H0,H0
 DC.L H70,H44,H44,H2,H2,H80,H0,H0,H0
 DC.L H70,H44,H44,H2,H80,H0,H0,H0,H0
 DC.L H70,H44,H44,H80,H0,H0,H0,H0,H0
 DC.L H44,H24,H24,H2,H80,H70,H0,H0,H0
 DC.L H70,H44,H24,H24,H80,H0,H0,H0,H0
 DC.L H44,H44,H2,H2,H0,H0,H0,H0,H0
 DC.L H44,H44,H2,H0,H0,H0,H0,H0,H0
 DC.L H44,H44,H0,H0,H0,H0,H0,H0,H0
 DC.L H70,H24,H2,H2,H0,H0,H0,H0,H0
 DC.L H70,H24,H2,H0,H0,H0,H0,H0,H0
 DC.L H70,H24,H0,H0,H0,H0,H0,H0,H0
 DC.L H24,H24,H24,H24,H0,H0,H0,H0,H0
 DC.L H70,H70,H44,H2,H2,H2,H80,H0,H0
 DC.L H70,H70,H44,H2,H2,H80,H0,H0,H0
 DC.L H70,H70,H44,H2,H80,H0,H0,H0,H0
 DC.L H70,H44,H2,H2,H2,H2,H2,H0,H0
 DC.L H70,H44,H2,H2,H2,H2,H0,H0,H0
 DC.L H70,H44,H2,H2,H2,H0,H0,H0,H0
 DC.L H70,H44,H2,H2,H0,H0,H0,H0,H0
 DC.L H70,H44,H2,H0,H0,H0,H0,H0,H0
 DC.L H70,H44,H0,H0,H0,H0,H0,H0,H0
 DC.L H24,H24,H24,H24,H24,H2,H2,H0,H0
 DC.L H24,H24,H24,H24,H24,H2,H0,H0,H0
 DC.L H24,H24,H24,H24,H24,H0,H0,H0,H0
 DC.L H70,H44,H44,H44,H80,H0,H0,H0,H0
 DC.L H70,H70,H70,H2,H2,H2,H80,H0,H0
 DC.L H70,H70,H70,H2,H2,H80,H0,H0,H0
 DC.L H70,H70,H70,H2,H80,H0,H0,H0,H0
 DC.L H70,H44,H24,H2,H2,H2,H2,H0,H0
 DC.L H44,H44,H44,H0,H0,H0,H0,H0,H0
 DC.L H70,H44,H24,H2,H2,H0,H0,H0,H0
 DC.L H70,H44,H24,H2,H0,H0,H0,H0,H0
 DC.L H70,H44,H24,H0,H0,H0,H0,H0,H0
 DC.L H70,H70,H0,H0,H0,H0,H0,H0,H0
 DC.L H24,H24,H24,H70,H0,H0,H0,H0,H0
 DC.L H70,H70,H44,H44,H2,H2,H80,H0,H0
 DC.L H70,H70,H44,H44,H2,H80,H0,H0,H0
 DC.L H70,H70,H44,H44,H80,H0,H0,H0,H0
 DC.L H70,H70,H44,H24,H24,H2,H80,H0,H0
 DC.L H70,H44,H44,H2,H2,H2,H0,H0,H0
 DC.L H70,H44,H44,H2,H2,H0,H0,H0,H0
 DC.L H70,H44,H44,H2,H0,H0,H0,H0,H0
 DC.L H70,H44,H44,H0,H0,H0,H0,H0,H0
 DC.L H70,H70,H24,H2,H2,H0,H0,H0,H0
 DC.L H70,H70,H24,H2,H0,H0,H0,H0,H0
 DC.L H70,H70,H24,H0,H0,H0,H0,H0,H0
 DC.L H70,H24,H24,H24,H24,H0,H0,H0,H0
 DC.L H24,H24,H24,H24,H24,H24,H24,H0,H0
 DC.L H70,H70,H70,H44,H2,H2,H80,H0,H0
 DC.L H44,H44,H44,H44,H2,H2,H0,H0,H0
 DC.L H44,H44,H44,H44,H2,H0,H0,H0,H0
 DC.L H44,H44,H44,H44,H0,H0,H0,H0,H0
 DC.L H70,H70,H44,H2,H2,H2,H0,H0,H0
 DC.L H70,H70,H44,H2,H2,H0,H0,H0,H0
 DC.L H70,H70,H44,H2,H0,H0,H0,H0,H0
 DC.L H70,H70,H44,H0,H0,H0,H0,H0,H0
 DC.L H70,H44,H24,H24,H24,H0,H0,H0,H0
 DC.L H70,H70,H24,H24,H0,H0,H0,H0,H0
 DC.L H70,H70,H44,H44,H44,H80,H2,H0,H0
 DC.L H70,H70,H44,H44,H44,H80,H0,H0,H0
 DC.L H70,H70,H70,H44,H24,H2,H2,H80,H0
 DC.L H44,H44,H44,H44,H24,H2,H2,H0,H0
 DC.L H44,H44,H44,H44,H24,H2,H0,H0,H0
 DC.L H44,H44,H44,H44,H24,H0,H0,H0,H0
 DC.L H70,H44,H44,H44,H0,H0,H0,H0,H0
 DC.L H70,H70,H70,H2,H2,H2,H0,H0,H0
 DC.L H70,H70,H70,H2,H2,H0,H0,H0,H0
 DC.L H70,H70,H70,H2,H0,H0,H0,H0,H0
 DC.L H70,H70,H70,H0,H0,H0,H0,H0,H0
 DC.L H24,H70,H70,H24,H24,H0,H0,H0,H0
 DC.L H70,H24,H24,H24,H24,H24,H24,H0,H0
 DC.L H44,H44,H44,H44,H44,H2,H2,H0,H0
 DC.L H44,H44,H44,H44,H44,H2,H0,H0,H0
 DC.L H44,H44,H44,H44,H44,H0,H0,H0,H0
 DC.L H70,H70,H44,H44,H2,H2,H2,H0,H0
 DC.L H70,H70,H44,H44,H2,H2,H0,H0,H0
 DC.L H70,H70,H44,H44,H2,H0,H0,H0,H0
 DC.L H70,H70,H44,H44,H0,H0,H0,H0,H0
 DC.L H70,H44,H44,H24,H24,H24,H0,H0,H0
 DC.L H70,H70,H70,H24,H2,H0,H0,H0,H0
 DC.L H70,H70,H70,H24,H0,H0,H0,H0,H0
 DC.L H24,H24,H24,H24,H70,H70,H0,H0,H0
 DC.L H44,H44,H44,H44,H44,H24,H2,H2,H2
 DC.L H44,H44,H44,H44,H44,H24,H2,H2,H0
 DC.L H70,H44,H44,H44,H44,H2,H2,H0,H0
 DC.L H70,H44,H44,H44,H44,H2,H0,H0,H0
 DC.L H70,H44,H44,H44,H44,H0,H0,H0,H0
 DC.L H70,H44,H44,H44,H24,H24,H2,H0,H0
 DC.L H70,H70,H70,H44,H2,H2,H0,H0,H0
 DC.L H70,H70,H70,H44,H2,H0,H0,H0,H0
 DC.L H70,H70,H70,H44,H0,H0,H0,H0,H0

RIEN	REPT	9
	DC.L	H0
	ENDR

BEAT1	DS.L	1
BEAT	INCBIN	a:\BOOM.SPL
TEST_FIN	DCB.B	256,0
FINI
CODE	INCBIN	TABLEREP.BIN

DEG	DC	$000,$766,$744,$633,$522,$521,$755,$300
	DC	$000,$777,$764,$653,$542,$431,$320,$210

	DC	$000,$777,$755,$744,$633,$632,$766,$411
	DC	$111,$777,$775,$764,$653,$542,$431,$321

	DC	$000,$777,$766,$755,$744,$743,$777,$522
	DC	$222,$777,$776,$775,$764,$653,$542,$432

	DC	$000,$777,$777,$766,$755,$754,$777,$633
	DC	$333,$777,$777,$776,$775,$764,$653,$543

	DC	$000,$777,$777,$777,$766,$765,$777,$744
	DC	$444,$777,$777,$777,$776,$775,$764,$654

	DC	$000,$777,$777,$777,$777,$776,$777,$755
	DC	$555,$777,$777,$777,$777,$776,$775,$765

	DC	$000,$777,$777,$777,$777,$777,$777,$766
	DC	$666,$777,$777,$777,$777,$777,$776,$776

	DC	$000,$777,$777,$777,$777,$777,$777,$777
	DC	$777,$777,$777,$777,$777,$777,$777,$777

	DC	$9999

	DATA
DATA_STARS	INCBIN	STARSR3D.STR
	EVEN
*DATAS ZOOM

N	SET	7
TABLE_COLORS_Z	DCB.W	N,$111
	DCB.W	N,$222
	DCB.W	N,$333
	DCB.W	N,$444
	DCB.W	N,$555
	DCB.W	N,$666
	DCB.W	N+15,$777
	DCB.W	N,$767
	DCB.W	N,$757
	DCB.W	N,$646
	DCB.W	N,$535
	DCB.W	N,$424
	DCB.W	N,$313
	DCB.W	N,$202
	DCB.W	N,$101

TABLE_ROUTS_ZOOMS
	DC.L	NO_REG,ONLY_D4,ONLY_D5,REG_D4_D5
	DC.L	ONLY_D6,REG_D4_D6,REG_D5_D6,ALL_REGS

PLACE_DECAL	DS.W	3

MESSAGE	DC.B	1,9,"HOLOCAUST"
	DC.B	1,7,"IS BACK"
	DC.B	1,10,"WITH A NEW"
	DC.B	1,10,"MEGA GREAT"
	DC.B	1,11,"PRODUCTION."
	DC.B	1,11,"THIS IS NOT"
	DC.B	1,9,"A DEMO...",-2

	DC.B	1,11,"THIS IS NOT"
	DC.B	1,11,"AN INTRO...",-2

	DC.B	1,11,"AND THIS IS"
	DC.B	1,8,"EVEN NOT"
	DC.B	1,11,"A DENTRO..."
	DC.B	1,9,"PANTRO..."
	DC.B	1,10,"TRACKMO...",-2

	DC.B	1,11,"BUT THIS IS"
	DC.B	1,12,"OUR SMASHING"
	DC.B	1,10,"INCREDIBLE"
	DC.B	1,11,"AND AMAZING"
	DC.B	1,4,"...."
	DC.B	-1
	EVEN

FONTS_1
	DC.B	0,0,0,0,0,0,0,0
	DC.B 24,24,48,48,0,96,96,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B 24,24,48,0,0,0,0,0
	DC.B 24,56,48,48,48,56,24,0
	DC.B 48,56,24,24,24,56,48,0
	DC.B 18,84,56,254,56,84,144,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B 0,0,0,0,48,48,96,0
	DC.B 0,0,0,126,126,0,0,0
	DC.B 0,0,0,0,0,48,48,0
	DC.B 254,0,252,0,248,0,240,0
	DC.B 124,198,206,214,230,198,124,0
	DC.B 24,56,56,24,24,60,60,0
	DC.B 60,94,102,12,24,54,126,0
	DC.B 126,126,6,28,6,126,124,0
	DC.B 28,60,108,204,254,254,12,0
	DC.B 126,126,64,124,6,126,124,0
	DC.B 60,102,96,124,102,102,60,0
	DC.B 126,118,76,12,24,24,24,0
	DC.B 60,102,102,60,102,102,60,0
	DC.B 60,102,102,62,6,6,60,0
	DC.B 0,0,48,48,0,48,48,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	0,0,0,0,0,0,0,0
	DC.B	60,102,102,12,0,24,24,0
	DC.B	0,0,0,0,0,0,0,0

	DC.B	124,230,230,254,230,230,230,0	;A
	DC.B	252,230,230,252,230,230,252,0	;B
	DC.B	124,230,224,224,224,230,124,0	;C
	DC.B	252,230,230,230,230,230,252,0	;D
	DC.B	254,224,224,248,224,224,254,0	;E
	DC.B	254,224,224,248,224,224,224,0	;F
	DC.B	124,230,224,224,238,230,124,0	;G
	DC.B	230,230,230,254,230,230,230,0	;H
	DC.B	124,56,56,56,56,56,124,0	;I
	DC.B	14,14,14,14,14,206,124,0	;J
	DC.B	230,238,252,248,252,238,230,0	;K
	DC.B	224,224,224,224,224,224,254,0	;L
	DC.B	198,238,246,230,230,230,230,0	;M
	DC.B	252,230,230,230,230,230,230,0	;N
	DC.B	124,230,230,230,230,230,124,0	;O
	DC.B	252,230,230,252,224,224,224,0	;P
	DC.B	121,230,230,230,238,252,118,0	;Q
	DC.B	252,230,230,252,236,230,230,0	;R
	DC.B	124,230,224,124,14,206,124,0	;S
	DC.B	254,56,56,56,56,56,56,0	;T
	DC.B	230,230,230,230,230,230,124,0	;U
	DC.B	230,230,230,230,230,124,56,0	;V
	DC.B	230,230,230,230,254,238,198,0	;W
	DC.B	198,238,124,56,124,238,198,0	;X
	DC.B	230,230,230,124,56,56,56,0	;Y
	DC.B	254,206,28,56,112,230,254,0	;Z

COEFF_3D	INCBIN	COEFF.3D


	SECTION	BSS
CNT_LG	DS.W	1
BUF_COOR	DS.W	6*18
ADR_EFF_P	DS.L	2
BUF_EFF_P	DS.W	19*2
TABLO	DS	19+1
FIN_TABLO	DS	1
TABLO2	DS	19+1
FIN_TABLO2	DS	1
FLAGS	DS	19+1
TAB1	DS.L	1
TAB2	DS.L	1
TIME	DS.L	1
POIT	DS.L	1
ANNEX_1	DS.L	1
ANNEX_2	DS.L	1
SCREEN1	DS.L	1
SCREEN2	DS.L	1
	DS.B	256
BUFFER	
	DS.B	32*160
	DS.B	32000
	DS.B	32*160
	DS.B	32000
	DS.B	32*160

ADRESS_BUF	DS.B	128000+96*160-79360
	DS.B	30*160
GRAF_ANNEX	DS.B	400*160

BUF_BIDON	DS.B	32066
	DS.B	100
*
*BSS STARS
PT_STARS	DS.L	1
	DS.L	2
OFFSET_TABLE	DS.L	(768/VITESSE)
FIN_TABLE
BUF_STARS	DS.B	174000	;305000 POUR 350
*BSS ZOOM
COLOR_ACTU_Z	DS.W	1
FLAG_NEXT_ZOOM	DS.B	1
FLAG_EFFAC_ZOOM	DS.B	1
ADR_EFF_Z	DS.L	2
BUF_EFF_Z	DS.W	2*2
NUMER	DS.W	1
PT_MESS	DS.L	1
NB_VBL	DS.W	1
ADR_ZOOMS	DS.L	NB_ZOOMS
BUF_CALC	DS.W	(12*8*8)+(8*2)	;1568 b.
BUF_ANNEX	DS.W	2*NB_ZOOMS
CORES_LONG_CARRêS	DS.L	16*33
CORES_CARRêS_1	DS.L	NB_ZOOMS

CORES_CARRêS_2	= ADRESS_BUF
BUF_COD_CARRêS	= ADRESS_BUF+50000
BUF_ZOOMS	= ADRESS_BUF+50000+45000

;CORES_CARRêS_2	DS.B	50000
;BUF_COD_CARRêS	DS.B	45000
;BUF_ZOOMS		DS.B	46000

SCREEN_CAT	DS.L	1
BUF_PALS	DS.B	32*(600+270)
	DS.B	256
BUFFERSCR	DS.B	230*(615+270)
BUF_BIDON2	DS.B	33000

