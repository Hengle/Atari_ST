_15_KHZ = 38
_7_5_KHZ = 38*2
_5_KHZ = 100

NB_PASSES = 50
NB_SEG = 7

NB_PTS_SMILE = 8
X_FIXE_KEOPS = 224
X_FIXE_SEVERINE = 224
X1	EQU	0
Y1	EQU	2
X2	EQU	4
Y2	EQU	6
X3	EQU	8
Y3	EQU	10
X4	EQU	12
Y4	EQU	14
X5	EQU	16
Y5	EQU	18
X6	EQU	20
Y6	EQU	22
X7	EQU	24
Y7	EQU	26
X8	EQU	28
Y8	EQU	30
X9	EQU	32
Y9	EQU	34
X10	EQU	36
Y10	EQU	38
X11	EQU	40
Y11	EQU	42
X12	EQU	44
Y12	EQU	46
X13	EQU	48
Y13	EQU	50
X14	EQU	52
Y14	EQU	54
X15	EQU	56
Y15	EQU	58
X16	EQU	60
Y16	EQU	62

Y_CLIP=199
MAX=130

MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR.W	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE.W	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP
*****
	MOVE.L	#FIN,$008.W
	MOVE.L	#FIN,$00C.W
	MOVE.L	#FIN,$010.W
	MOVE.L	#FIN,$014.W

	LEA	BSS_DEB,A0
	LEA	BSS_END,A1
KILL_BSS	CLR.L	(A0)+
	CMP.L	A1,A0
	BLE.S	KILL_BSS

*** Initialisations diverses
	MOVEQ	#0,D0
	MOVE.L	D0,$FFFF8240.W
	MOVE.L	D0,$FFFF8244.W
	MOVE.L	D0,$FFFF8248.W
	MOVE.L	D0,$FFFF824C.W
	MOVE.L	D0,$FFFF8250.W
	MOVE.L	D0,$FFFF8254.W
	MOVE.L	D0,$FFFF8258.W
	MOVE.L	D0,$FFFF825C.W
	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	CLR.B	$FFFFFA1B.W
	BSET	#0,$FFFFFA07.W
	BSET	#0,$FFFFFA13.W
	JSR	SILENCE
	CLR	FLAG_ZIK
	JSR	PREP_ECR
	MOVE.L	SCREEN1,A0
	LEA	PRESENT,A1
	MOVE	#3999,D0
INIT	MOVE	(A1)+,(A0)
	CLR.L	2(A0)
	CLR	6(A0)
	ADDQ	#8,A0
	DBF	D0,INIT
	MOVE.L	#$01010101,$FFFF8240.W
	
	MOVEQ	#0,D0
	JSR	ZIK
	MOVE.L	#INTER_RTE,$120.W
	MOVE.L	#INTER_RTE,$134.W
	MOVE.L	#VBL_INIT,$70.W
	MOVE	#$2300,SR

	LEA	MOD1,A0
	LEA	SAVE_MODS,A1
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0),(A1)

	;MOVE	#$003,$FFFF8240.W
	JSR	POLY+8
	;MOVE	#$002,$FFFF8240.W

	LEA	DêCAL_YEUX,A1
	MOVEQ	#0,D6
	MOVEQ	#16-1,D5
DêCALE_X	MOVEQ	#8-1,D7
	LEA	OEIL,A0
DêCALE_Y	MOVEQ	#0,D0
	MOVE.L	(A0)+,D0
	LSR.L	D6,D0
	MOVE.L	D0,(A1)+
	DBF	D7,DêCALE_Y
	ADDQ	#1,D6
	DBF	D5,DêCALE_X

	JSR	INIT_SAMPLES
	JSR	LINE

	JSR	PREPARE_KEOPS

	MOVE.L	#SEQUENCE_KEOPS,PT_SEQ
	MOVE.L	#SEQUENCE_KEOPS,D0
	ADD.L	#(6+6+8+4*NB_PTS_SMILE)*20,D0
	MOVE.L	D0,PT_SEQ2

	LEA	TB_EFF_KEOPS,A0
	MOVE.L	SCREEN2,(A0)+
	CLR.L	(A0)+
	MOVE.L	SCREEN2,(A0)+
	CLR.L	(A0)+

	LEA	TB_EFF_SEVE,A0
	MOVE.L	SCREEN2,(A0)+
	CLR.L	(A0)+
	MOVE.L	SCREEN2,(A0)+
	CLR.L	(A0)+


 MOVE	#$756,$FFFF8242.W  0001 PEAU
 MOVE	#$777,$FFFF8244.W  0010 YEUX
 MOVE	#$777,$FFFF8246.W  0011 YEUX SUR PEAU
 MOVE	#$000,$FFFF8248.W  0100 CHEVEUX
 MOVE	#$000,$FFFF824A.W  0101 PUPILLE SUR PEAU, CA ARRIVE
 MOVE	#$000,$FFFF824C.W  0110 EXISTE PAS.
 MOVE	#$000,$FFFF824E.W  0111 PUPILLE SUR BLANC DE L'OEIL, LUI MEME SUR LA PEAU
 MOVE	#$101,$FFFF8250.W  1000 JOUES SEULES INVISIBLES
 MOVE	#$745,$FFFF8252.W  1001 JOUES+PEAU=VISIBLES 
 MOVE	#$600,$FFFF8254.W  1010 JOUES+BLANC EXISTE PAS
 MOVE	#$700,$FFFF8256.W  1011 IDEM
 MOVE	#$300,$FFFF8258.W  1100 IDEM
 MOVE	#$700,$FFFF825A.W  1101 IDEM
 MOVE	#$700,$FFFF825C.W  1110 IDEM
 MOVE	#$700,$FFFF825E.W  1111 IDEM

	MOVE.L	#VBLR,$70.W
	MOVE.L	#TIMER_B,$120.W
	MOVE.L	#INTER_RTE,$134.W
;	MOVE.W	#$2300,SR
	JMP	MAIN_PRG
PNT_FAD	DC	5
VBL_INIT
	MOVEM.L	D0-A6,-(SP)
	JSR	ZIK+$E
	LEA	FAD_PRES,A0
MOD_FADP	EQU	*+2
	LEA	0(A0),A0
	CMPI	#-1,(A0)
	BEQ.S	.NOCHG
	SUBQ	#1,PNT_FAD
	BNE.S	.CHG
	MOVE	#5,PNT_FAD
	ADDQ	#2,MOD_FADP
.CHG	MOVE	(A0),$FFFF8242.W	
.NOCHG	MOVEM.L	(SP)+,D0-A6
	RTE
MAIN_PRG
	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVEQ	#0,D1
	MOVE	#7999,D0
.CLR	MOVE.L	D1,(A0)+
	MOVE.L	D1,(A1)+
	DBF	D0,.CLR

*** 1äre partie: K&S rebondissent.

IT_VBL	BSR	VSYNC
	CMPI.B	#$1,$FFFFFC02.W
	BEQ.S	IT_VBL
	ADDQ	#1,TIME

	CMPI	#301,TIME
	BNE	.PAS_ENCORE
	;MOVE	#$700,$FFFF8240.W

*affichage KEOPS

	;JSR	SILENCE
	MOVE	#25-1,D0
.WAB	JSR	VSYNC
	DBF	D0,.WAB

	MOVE.L	SCREEN1,A0
	LEA	160*20(A0),A0
	LEA	DATAS+34+160*90,A1
	MOVE	#73,D0
.AFY1	MOVE	#9,D1
.AFX1	MOVE	(A1),2(A0)
	ADDQ	#8,A1
	ADDQ	#8,A0
	DBF	D1,.AFX1
	LEA	80(A0),A0
	LEA	80(A1),A1
	DBF	D0,.AFY1

	;MOVE.B	#$20,$FFFFFA07.W
	;BSET	#0,$FFFFFA07.W
	;MOVE.B	$FFFFFA07.W,$FFFFFA13.W
	;BSET	#0,$FFFFFA13.W
	;MOVE.B	$FFFFFA09.W,$FFFFFA15.W

	;MOVE.L	#INTER_RTE,$134.W

	;MOVE.B	#_7_5_KHZ,$FFFFFA1F.W
	;MOVE.B	#1,$FFFFFA19.W
	;MOVE.B	#$40,$FFFFFA17.W

	;MOVE.L	#BEAT3,BEAT1
	;MOVE.L	BEAT1,A3
	;MOVE.W	#$8800,A4
	;LEA	CODE,A6
	;MOVE.L	#PLAY_B,$134.W

.P1	JSR	VSYNC
	;CMPA.L	#TEST_FIN3,A3
	;BLE.S	.NO
	;MOVE.L	#INTER_RTE,$134.W
	;JSR	SILENCE
	;CLR	FLAG_ZIK
	;BRA.S	.EEER
	;LEA	BEAT,A3
;.NO
	;MOVE.W	#$8800,A4
	;LEA	CODE,A6
	;BRA.S	.P1
;.EEER	
	SUBQ	#1,PAUSE
	BNE.S	.P1
	MOVE	#250,PAUSE
*effacage KEOPS
	MOVE.L	SCREEN1,A0
	LEA	160*20(A0),A0
	MOVEQ	#0,D2
	MOVE	#73,D0
.EFY1	MOVE	#9,D1
.EFX1	MOVE	D2,2(A0)
	ADDQ	#8,A1
	ADDQ	#8,A0
	DBF	D1,.EFX1
	LEA	80(A0),A0
	LEA	80(A1),A1
	DBF	D0,.EFY1

	;301,381,521
.PAS_ENCORE

	CMPI	#521,TIME
	BNE.S	.PAS_ENCORE2
	;MOVE	#$700,$FFFF8240.W
*affichage Sev
	MOVE.L	SCREEN1,A0
	LEA	9*8(A0),A0
	LEA	DATAS+34+9*8+160*10,A1
	MOVE	#75,D0
.AFY2	MOVE	#11-1,D1
.AFX2	MOVE	(A1),2(A0)
	ADDQ	#8,A1
	ADDQ	#8,A0
	DBF	D1,.AFX2
	LEA	80-8(A0),A0
	LEA	80-8(A1),A1
	DBF	D0,.AFY2

.P2	JSR	VSYNC
	SUBQ	#1,PAUSE
	BNE.S	.P2
	MOVE	#10,PAUSE
	;JSR	SILENCE
	;301,381,521
*effacage SEV
	MOVE.L	SCREEN1,A0
	LEA	9*8(A0),A0
	MOVEQ	#0,D2
	MOVE	#75,D0
.EFY2	MOVE	#11-1,D1
.EFX2	MOVE	D2,2(A0)
	ADDQ	#8,A1
	ADDQ	#8,A0
	DBF	D1,.EFX2
	LEA	80-8(A0),A0
	LEA	80-8(A1),A1
	DBF	D0,.EFY2

.PAS_ENCORE2
	;MOVE	TIME,$FFFFC
	JSR	AFF_KEOPS
	JSR	AFF_SEVE
	JSR	SWAPEC
	CMPI	#1048,TIME
	BNE.S	.NO_PART_2
	CLR	TIME
	BRA.S	IT_VBL2B
.NO_PART_2	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NO_TIME
	ST	$FFFF8240.W
.NO_TIME
	BRA	IT_VBL
IT_VBL2B * Prepare buffers
	LEA	FORME_DEP,A4
	LEA	FORME_FIN,A5
	JSR	ANNEX
*essai
	MOVE.B	#$20,$FFFFFA07.W
	BSET	#0,$FFFFFA07.W
	MOVE.B	$FFFFFA07.W,$FFFFFA13.W
	BSET	#0,$FFFFFA13.W
	MOVE.B	$FFFFFA09.W,$FFFFFA15.W

	MOVE.L	#INTER_RTE,$134.W

	MOVE.B	#_5_KHZ,$FFFFFA1F.W
	MOVE.B	#1,$FFFFFA19.W
	MOVE.B	#$40,$FFFFFA17.W

	MOVE.L	#BEAT3,BEAT1
	MOVE.L	BEAT1,A3
	MOVE.W	#$8800,A4
	LEA	CODE,A6

* partie 2: arret des rebonds.
IT_VBL2	BSR	VSYNC
	CMPI.B	#$1,$FFFFFC02.W
	BEQ.S	IT_VBL2
	ADDQ	#1,TIME

	MOVE.W	#$8800,A4
	LEA	CODE,A6

	;MOVE	TIME,$FFFFC
	;MOVE.L	FORME_DEP,$FFFFC
	;BSR	AFF_KEOPS
	;BSR	AFF_SEVE
	;JSR	EFFECR
	JSR	MOVE_YEUX

	;TST	FLAG_2
	;BEQ.S	.Z
	CMPI	#128,TIME
	BLE.S	.Z
	CMPI	#129,TIME
	BNE.S	.ZZZ
	JSR	SILENCE
	MOVE.L	#PLAY_B,$134.W
.ZZZ	JSR	TRANSFO
.Z
	CMPA.L	#TEST_FIN3,A3
	BLE.S	.NO
	MOVE.L	#INTER_RTE,$134.W
	JSR	SILENCE
	;LEA	BEAT,A3
.NO
***
	CMPI	#183,TIME
	BLE.S	.Z2
	JSR	MOVE_YEUX2
.Z2	
	CMPI	#183+50,TIME
	BLE.S	.Z3
	JSR	MOVE_SMILE
.Z3	
	CMPI	#183+100,TIME
	BNE.S	.Z3B
	MOVE	#-8*4,MOD_DEP1+2
	MOVE	#-8*4,MOD_DEP2+2
	CLR	FLAG_2
.Z3B
	
	CMPI	#318,TIME
	BLE.S	.Z4
	JMP	IT_VBL3B
.Z4
	
	BSR	SWAPEC
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NO_TIME
	ST	$FFFF8240.W
.NO_TIME
	BRA	IT_VBL2

IT_VBL3B * PREPARE BUFFERS
	MOVE	#1,FLAG_CLAC
	MOVE.L	#COORD,MODDAT+2
	MOVE	#8*NB_PASSES,MODKILL+2
	MOVE.L	#8,MODPNT+2
	MOVE.L	#FORME_FIN2,MODIF1+2
	CLR.L	PNT
	CLR	TIME
	LEA	FORME_FIN,A4
	LEA	FORME_FIN2,A5
	JSR	ANNEX

	MOVE.L	SCREEN2,A0
	MOVE.L	SCREEN1,A1
	LEA	160*25+96+8+4+8(A0),A0
	LEA	160*25+96+8+4+8(A1),A1
	ADD	MOD_Y_SMILE,A0
	ADD	MOD_Y_SMILE,A1
	MOVEQ	#0,D1
	MOVE	#8-1,D2
PIU	MOVE	D1,-8(A0)
	MOVE	D1,8+8(A0)
	MOVE	D1,8(A0)
	MOVE	D1,-8(A1)
	MOVE	D1,8+8(A1)
	MOVE	D1,8(A1)
	LEA	160(A0),A0
	LEA	160(A1),A1
	DBF	D2,PIU
	MOVE	#%1000,-160*4-8(A0)
	MOVE	#%100000000,-160*4+8+8(A0)
	MOVE	#%1000,-160*4-8(A1)
	MOVE	#%100000000,-160*4+8+8(A1)
**
*GO!
IT_VBL3	BSR	VSYNC
	CMPI.B	#$1,$FFFFFC02.W
	BEQ.S	IT_VBL3
	ADDQ	#1,TIME
	;MOVE	TIME,$FFFFC
	;MOVE.L	FORME_DEP,$FFFFC
	;BSR	AFF_KEOPS
	;BSR	AFF_SEVE
	;JSR	EFFECR

	CMPI	#128,TIME
	BLE.S	.Z
	JSR	TRANSFO
.Z	

	CMPI	#252,TIME
	BGE	.Z2
	CMPI	#245,TIME
	BNE.S	.Q
	MOVE	#55+9-1,MODRUB+2
	MOVE.L	#RUBAN2+4,MOD_RUB+2
	JSR	AFF_RUB
	MOVE.L	SCREEN1,A0
	LEA	-160*70(A0),A0
	ADD	MOD_Y_SMILE2,A0
	JSR	AFF_RUB2

.Q	CMPI	#250,TIME
	BNE.S	.Q2
	MOVE.L	#RUBAN3+4,MOD_RUB+2
	JSR	AFF_RUB
	MOVE.L	SCREEN1,A0
	LEA	-160*70(A0),A0
	ADD	MOD_Y_SMILE2,A0
	JSR	AFF_RUB2
.Q2
	CMPI	#239,TIME
	BLE.S	.Z2
	MOVE.L	SCREEN2,A0
	LEA	160*101+2(A0),A0
	JSR	DêCALE
	MOVE.L	SCREEN1,A0
	LEA	160*101+2(A0),A0
	JSR	DêCALE

	MOVE.L	SCREEN2,A0
	LEA	160*151+4(A0),A0
	JSR	DêCALE
	MOVE.L	SCREEN1,A0
	LEA	160*151+4(A0),A0
	JSR	DêCALE

.Z2
	CMPI	#260,TIME
	BNE.S	.Z3
	JMP	IT_VBL4B
.Z3	BSR	SWAPEC
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NO_TIME
	ST	$FFFF8240.W
.NO_TIME
	BRA	IT_VBL3
IT_VBL4B * PREPARE BUFFERS
	MOVE.L	#COORD,MODDAT+2
	;MOVE	#8*NB_PASSES,MODKILL+2
	MOVE	#8*10,MODKILL+2
	MOVE.L	#8,MODPNT+2
	MOVE.L	#FORME_FIN3,MODIF1+2
	MOVE	#8*10,MODPASS1+2
	MOVE.L	#8*10,MODPASS2+2
	MOVE.L	#10,MODPASS3+2
	MOVE	#4-1,MODSEG1+2
	MOVE	#4-1,MODSEG2+2
	CLR.L	PNT
	CLR	TIME
	LEA	FORME_DEP3,A4
	LEA	FORME_FIN3,A5
	JSR	ANNEX
*****
*GO!

	JSR	SILENCE

	jsr	VSYNC
;	CLR.B	$FFFFFA07.W
;	CLR.B	$FFFFFA09.W
	MOVE.B	#$20,$FFFFFA07.W
	BSET	#0,$FFFFFA07.W
	MOVE.B	$FFFFFA07.W,$FFFFFA13.W
	BSET	#0,$FFFFFA13.W
	MOVE.B	$FFFFFA09.W,$FFFFFA15.W

;	MOVE.L	#INTER_RTE,$134.W

	MOVE.B	#_15_KHZ,$FFFFFA1F.W
	MOVE.B	#1,$FFFFFA19.W
	MOVE.B	#$40,$FFFFFA17.W
;taratata	jmp	taratata

	MOVE.L	#BEAT,BEAT1
	MOVE.L	BEAT1,A3
	MOVE.W	#$8800,A4
	LEA	CODE,A6

	;MOVE	#$700,$FFFF8240.W
IT_VBL4	BSR	VSYNC
	CMPI.B	#$1,$FFFFFC02.W
	BEQ.S	IT_VBL4
	ADDQ	#1,TIME
	;MOVE	TIME,$1FFFFC
	;MOVE	ang2,$1fffbe

	CMPI	#215,TIME
	BNE.S	.Q
	clr	adag2
	MOVE	#$1e2,ang2
	MOVE	#$4E75,putrts
.Q

	CMPI	#250,TIME
	BNE.S	.SQ
	JMP	IT_VBL5B
.SQ
	movea.l	SCREEN2,a0
	LEA	160*150(A0),A0
	moveq	#0,d7

	MOVE	#49,D6
.CLS
N	SET	0
	REPT	10
	MOVE	D7,N+4(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D6,.CLS

	TST	FLAG_RUB
	BEQ.S	NORUB
modcod	JSR	GERE_RUBAN
NORUB

	CMPI	#129,TIME
	BNE.S	.U1
	LEA	DATAS+34+8*160,A0
	JSR	RECOP
.U1
	CMPI	#131,TIME
	BNE.S	.U2
	LEA	DATAS+34+(8+41)*160,A0
	JSR	RECOP
.U2
	CMPI	#129,TIME
	BNE.S	.ZO
	MOVE.L	#PLAY_B,$134.W
.ZO
	CMPI	#128,TIME
	BLE.S	.Z
	MOVE	#$5848,MOD1
	CLR	MOD2+2
	MOVE.L	#$4E714E71,MOD3
	MOVE	#$4E71,MOD3+4
	JSR	TRANSFO2
	BRA.S	.Z2
.Z	JSR	TRANSFO_SPE
.Z2
PH	BSR	SWAPEC
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NO_TIME
	ST	$FFFF8240.W
.NO_TIME
	CMPA.L	#TEST_FIN,A3
	BLE.S	.NO
	MOVE	#1,FLAG_RUB
	MOVE.L	#INTER_RTE,$134.W
	LEA	BEAT,A3
.NO
	MOVE.W	#$8800,A4
	LEA	CODE,A6
	BRA	IT_VBL4
FLAG_RUB	DC	0
IT_VBL5B
	MOVE.B	SCREEN2+1,$FFFF8201.W
	MOVE.B	SCREEN2+2,$FFFF8203.W

	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVE	#(20*155)-1,D7
DO	MOVE	(A1),D1
	MOVE	2(A1),D2
	MOVE	4(A1),D3
	MOVE	6(A1),D4

	MOVE	D1,(A0)	PLAN1 GARDê
	MOVE	D3,2(A0)	PLAN3 AUSSI
	NOT	D3
	AND	D3,(A0)
	CLR	4(A0)
	CLR	6(A0)

	OR	D2,D4
	OR	D4,(A0)
	OR	D4,2(A0)
	ADDQ	#8,A0
	ADDQ	#8,A1
	DBF	D7,DO

;	MOVE.L	SCREEN1,A0
;	MOVE.L	SCREEN2,A1
	MOVE	#(20*(200-155))-1,D7
DO2	MOVE	(A1),D1
	MOVE	2(A1),D2
	MOVE	4(A1),D3
	MOVE	6(A1),D4

	MOVE	D1,(A0)	PLAN1 GARDê
	MOVE	D3,2(A0)	PLAN3 AUSSI
	NOT	D3
	AND	D3,(A0)
	CLR	4(A0)
	CLR	6(A0)

	;OR	D2,D4
	AND	D1,D4
	OR	D4,(A0)
	OR	D4,2(A0)
	ADDQ	#8,A0
	ADDQ	#8,A1
	DBF	D7,DO2


	;MOVE.W	#$2700,SR
	;CLR.B	$FFFFFA07.W
	;CLR.B	$FFFFFA09.W
	;CLR.B	$FFFFFA1B.W
	;BSET	#0,$FFFFFA07.W
	;BSET	#0,$FFFFFA13.W

	MOVE.L	#VBL_TRANSIT,$70.W
	
WARZA	TST	GATOPABO
	BEQ.S	WARZA

;	JSR	VSYNC2
	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVE	#7999,D0
SHIT	MOVE.L	(A0)+,(A1)+
	DBF	D0,SHIT
**
	MOVE.L	SCREEN2,A0
	MOVE.L	SCREEN1,A1
	LEA	160*25+96+8+8(A0),A0
	LEA	160*25+96+8+8(A1),A1
	ADD	MOD_Y_SMILE,A0
	ADD	MOD_Y_SMILE,A1
	MOVEQ	#0,D1
	MOVE	#8-1,D2
PIUP	LEA	160(A0),A0
	LEA	160(A1),A1
	DBF	D2,PIUP
	MOVE	#%1111111111110111,-160*4-8(A0)
	MOVE	#%1111111011111111,-160*4+8+8(A0)
	MOVE	#%1111111111110111,-160*4-8(A1)
	MOVE	#%1111111011111111,-160*4+8+8(A1)
**
;	JSR	VSYNC2
	CLR	NB_VBL
J2	CMPI	#50,NB_VBL
	BLE.S	J2
	BSR	CODE_MOI
	CLR	TIME
;	MOVE.L	#VBL_SPR,$70.W
;	jmp	pd
	MOVE.B	#$20,$FFFFFA07.W
	BSET	#0,$FFFFFA07.W
	MOVE.B	$FFFFFA07.W,$FFFFFA13.W
	BSET	#0,$FFFFFA13.W
	MOVE.B	$FFFFFA09.W,$FFFFFA15.W

	MOVE.L	#INTER_RTE,$134.W

	MOVE.B	#_15_KHZ,$FFFFFA1F.W
	MOVE.B	#1,$FFFFFA19.W
	MOVE.B	#$40,$FFFFFA17.W

	MOVE.L	#BEAT5,BEAT1
	MOVE.L	BEAT1,A3
	MOVE.W	#$8800,A4
	LEA	CODE,A6
	move.l	#PLAY_B,$134.W
IT_POZ	JSR	VSYNC
	CMPA.L	#BEAT5+23780,A3
	BLE.S	.NO2
	MOVE.L	#INTER_RTE,$134.W
	BRA.S	IT_VBL_Z
.NO2	BRA.S	IT_POZ

IT_VBL_Z	JSR	VSYNC
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NOTI
	ST	$FFFF8240.W
.NOTI	**********

	CMPI	#50*6,TIME
	BNE	.PAS_ENCORE
*affichage Zappy
	MOVE.L	SCREEN1,A0
	LEA	160*20+3*80+4(A0),A0
	LEA	DATAS+34+160*90+80,A1
	MOVE	#73,D0
.AFY1	MOVE	#9,D1
.AFX1	MOVE	(A1),2(A0)
	ADDQ	#8,A1
	ADDQ	#8,A0
	DBF	D1,.AFX1
	LEA	80(A0),A0
	LEA	80(A1),A1
	DBF	D0,.AFY1

	CMPI	#50*6+1,TIME
	BGE	.ZZZA
	MOVE.L	#BEAT5,BEAT1
	MOVE.L	BEAT1,A3
	MOVE.W	#$8800,A4
	LEA	CODE,A6
	move.l	#PLAY_B,$134.W
.IT_POZ2	JSR	VSYNC
	CMPA.L	#TEST_FIN5,A3
	BLE.S	.NO2
	MOVE.L	#INTER_RTE,$134.W
	BRA.S	.IT_VBL_Z2
.NO2	BRA.S	.IT_POZ2
.IT_VBL_Z2
.ZZZA

.P1	JSR	VSYNC
	SUBQ	#1,PAUSE
	BNE.S	.P1
	MOVE	#250,PAUSE
*effacage KEOPS
	MOVE.L	SCREEN1,A0
	LEA	160*20+80+4(A0),A0
	MOVEQ	#0,D2
	MOVE	#73,D0
.EFY1	MOVE	#9,D1
.EFX1	MOVE	D2,2(A0)
	ADDQ	#8,A1
	ADDQ	#8,A0
	DBF	D1,.EFX1
	LEA	80(A0),A0
	LEA	80(A1),A1
	DBF	D0,.EFY1
.PAS_ENCORE

*GERE_SEVERINE
	LEA	TABL2EYES,A0
MOD_EYES	EQU	*+2
	LEA	0(A0),A0
	TST	POTO2
	BNE.S	.OK2
	CMPI.B	#-1,(A0)
	BNE	.OK

	MOVE.L	#VBL_TRANS3,$70.W
	MOVE.B	#_7_5_KHZ,$FFFFFA1F.W
	MOVE.B	#1,$FFFFFA19.W
	MOVE.B	#$40,$FFFFFA17.W
	MOVE.L	#PLAY_B,$134.W
	MOVE.L	#BEAT2,BEAT1
	MOVE.L	BEAT1,A3
	MOVE.W	#$8800,A4
	LEA	CODE,A6
	MOVE	#1,POTO2

.OK2	*DEGAGE SEV
	MOVE.L	SCREEN1,A0
	LEA	160*50(A0),A0
	LEA	8(A0),A1
	MOVE	#150-1,D0
.E
N	SET	0
	REPT	10
	MOVE.L	N(A1),N(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	LEA	160(A1),A1
	DBF	D0,.E

	CMPA.L	#TEST_FIN2,A3
	BLE.S	.NO
	MOVE.L	#INTER_RTE,$134.W
	LEA	BEAT2,A3
	BRA	IT_VBL_NRV
.NO

	MOVE.W	#$8800,A4
	LEA	CODE,A6

	BRA	IT_VBL_Z
;	BRA	.FIN
	;CLR	MOD_EYES
	;LEA	TABL2EYES,A0
.OK
	ADDQ	#1,MOD_EYES
	MOVEQ	#0,D0	
	MOVE.B	(A0),D0
	ADD	D0,D0
	ADD	D0,D0
	LEA	TABL_EYES,A0
	MOVE.L	(A0,D0.W),A0

	MOVE.L	SCREEN2,A1
	LEA	128*160(A1),A1

	MOVE	#14,D0
.AFY1f	MOVE	#9,D1
.AFX1f	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	DBF	D1,.AFX1f
	LEA	80(A0),A0
	LEA	80(A1),A1
	DBF	D0,.AFY1f
.FIN

	TST	POTO
	BNE	NO_ZAP
****
	MOVE.L	PT_REBOND_MOI,A5
	MOVE.W	(A5)+,D5	;Y*160
	SUBI.W	#30*160,D5
	CMPI.W	#$1234,(A5)
	BNE.S	.FUCK_TOUT
	LEA	REBOND_MOI,A5
.FUCK_TOUT	MOVE.L	A5,PT_REBOND_MOI

	MOVE.L	PT_MOUVEMENT,A5
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVE.B	(A5)+,D0	;DECALAGE(0-->3)
	MOVE.B	(A5)+,D1	;OFFSET ECRAN
	MOVE.B	(A5)+,D2	;NB DE COLONNES A AFFICHER
	MOVE.B	(A5)+,D3	;MODE : 0=JSR CODE, ON AUTOMODIFIE UN RTS
			;       1=JSR CODE+NB_COLONNES*X
	BEQ.S	.MODE_0
.MODE_1	EXT.W	D1
	ASL.W	#3,D1
	LEA	BUF,A0
	MULU.W	#16000,D0
	ADDA.L	D0,A0
	MOVE.L	SCREEN2,A1
	ADDQ	#4,A1
	ADDA.W	D1,A1
	ADDA.W	D5,A1
	LEA	CODEZ,A2
	MULU.W	#1200,D2
	ADDA.W	D2,A2
	JSR	(A2)
	BRA.S	.LET_US_GO
.MODE_0	LEA	BUF,A0
	MULU.W	#16000,D0
	ADDA.L	D0,A0	;ADRESSE SOURCE
	MOVE.L	SCREEN2,A1
	ADDQ	#4,A1
	ADDA.W	D1,A1	;ADRESSE DESTINATION
	ADDA.W	D5,A1
	LEA	CODEZ,A2
	MULU.W	#1200,D2
	MOVE.W	(A2,D2.W),MODIFZ
	MOVE.W	#$4E75,(A2,D2.W)
	JSR	(A2)
MODIFZ = *+2
	MOVE.W	#$1234,(A2,D2.W)

.LET_US_GO	CMPI.B	#-1,(A5)
	BNE.S	.FUCK
	MOVE	#1,POTO
	LEA	MOUVEMENT,A5
.FUCK	MOVE.L	A5,PT_MOUVEMENT
	MOVE.L	SCREEN2,A0
	ADDA.W	D5,A0
	LEA	200*160+4(A0),A0
	MOVEQ	#5,D7
	MOVEQ	#0,D6
.EFF	MOVE.L	D6,(A0)
	MOVE.L	D6,8(A0)
	MOVE.L	D6,16(A0)
	MOVE.L	D6,24(A0)
	MOVE.L	D6,32(A0)
	MOVE.L	D6,40(A0)
	MOVE.L	D6,48(A0)
	MOVE.L	D6,56(A0)
	MOVE.L	D6,64(A0)
	MOVE.L	D6,72(A0)
	MOVE.L	D6,80(A0)
	MOVE.L	D6,88(A0)
	MOVE.L	D6,96(A0)
	MOVE.L	D6,104(A0)
	MOVE.L	D6,112(A0)
	MOVE.L	D6,120(A0)
	MOVE.L	D6,128(A0)
	MOVE.L	D6,136(A0)
	MOVE.L	D6,144(A0)
	MOVE.L	D6,152(A0)
	LEA	160(A0),A0
	DBRA	D7,.EFF
	**********
NO_ZAP	MOVE.L	SCREEN1,D7
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D7,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W

	;MOVE.W	#$101,$FFFF8240.W
	BRA	IT_VBL_Z
POTO	DC	0
POTO2	DC	0
POTO3	DC	5
IT_VBL_NRV
	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVE	#7999,D0
.COP	MOVE.L	(A0)+,(A1)+
	DBF	D0,.COP
LABEL	JSR	VSYNC
	LEA	FAD_FINAL,A0
MODQ	EQU	*+2
	LEA	0(A0),A0
	CMPI	#-1,(A0)
	BNE.S	.FG
	BRA	LABEL2
.FG	SUBQ	#1,POTO3
	BNE.S	LABEL
	MOVE	#5,POTO3	
	MOVE	(A0)+,MODFF1+2
	MOVE	(A0)+,MODFF2+2
	MOVE	(A0)+,MODFF3+2
	MOVE	(A0),MODFF4+2
	MOVE	(A0),MODFF4B+2
	MOVE	(A0),MODFF4C+2
	MOVE	(A0),MODT2+2
	MOVE	(A0)+,MODFF4D+2
	MOVE	(A0),MODFF5+2
	MOVE	(A0),MODFF5B+2
	MOVE	(A0),MODFF5C+2
	MOVE	(A0),MODT+2
	MOVE	(A0)+,MODFF5D+2
	MOVE	(A0)+,MODT3+2
	ADD	#12,MODQ
	BRA	LABEL
LABEL2
	MOVE.B	#$20,$FFFFFA07.W
	BSET	#0,$FFFFFA07.W
	MOVE.B	$FFFFFA07.W,$FFFFFA13.W
	BSET	#0,$FFFFFA13.W
	MOVE.B	$FFFFFA09.W,$FFFFFA15.W

	MOVE.L	#INTER_RTE,$134.W

	MOVE.B	#_7_5_KHZ,$FFFFFA1F.W
	MOVE.B	#1,$FFFFFA19.W
	MOVE.B	#$40,$FFFFFA17.W

	MOVE.L	#BEAT4,BEAT1
	MOVE.L	BEAT1,A3
	MOVE.W	#$8800,A4
	LEA	CODE,A6
	
IT_VBL_NRV2	BSR	VSYNC
	ADDQ	#1,TIME
	MOVE.W	#$8800,A4
	LEA	CODE,A6

	CMPI	#128,TIME
	BLE.S	ZOPO
	MOVE.L	#PLAY_B,$134.W
ZOPO
	CMPA.L	#TEST_FIN4,A3
	BLE.S	.NO
	MOVE.L	#INTER_RTE,$134.W
	JSR	SILENCE
	;LEA	BEAT,A3
	BRA	IT_VBL_NRV3
.NO
***
	BSR	SWAPEC
	BRA	IT_VBL_NRV2

IT_VBL_NRV3	;MOVE	#$700,$FFFF8240.W
	;BRA.S	IT_VBL_NRV3
	move.l	4.w,a0
	jmp	(a0)

VSYNC	CMPI.W	#1,NB_VBL
	BLT.S	VSYNC
	CLR.W	NB_VBL
	RTS

;VBL_SPR	ADDQ.W	#1,NB_VBL
;	RTE

SWAPEC	MOVE.L	SCREEN1,D7
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D7,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

CODE_MOI	LEA	IMG+34,A0
	LEA	CODEZ,A1
	MOVE	#3999,D0
AF_2	MOVE.L	(A0),(A1)+
	ADDQ	#8,A0
	DBF	D0,AF_2

	LEA	BUF,A6
	MOVE	#4-1,D7
AGAIN	LEA	CODEZ,A5
	MOVE	#3999,D6
COP	MOVE.L	(A5)+,(A6)+
	DBF	D6,COP
	LEA	CODEZ,A0
	JSR	DêCALE_BIG_SPRITE
	LEA	CODEZ,A0
	JSR	DêCALE_BIG_SPRITE
	LEA	CODEZ,A0
	JSR	DêCALE_BIG_SPRITE
	LEA	CODEZ,A0
	JSR	DêCALE_BIG_SPRITE
	LEA	CODEZ,A0
	CLR.L	(A0)+
	CLR.L	(A0)+
	DBF	D7,AGAIN

	LEA	CODEZ,A0
	MOVEQ	#0,D2
	MOVEQ	#0,D4
	MOVE	#20-1,D3
EDO2	MOVE.L	D2,D0
	MOVE.L	D4,D5
	MOVE	#199,D1
EDO	MOVE	#$2368,(A0)+
	MOVE	D5,(A0)+
	MOVE	D0,(A0)+
	ADD	#160,D0
	ADD	#80,D5
	DBF	D1,EDO
	ADDQ	#8,D2
	ADDQ	#4,D4
	DBF	D3,EDO2
	MOVE	#$4E75,(A0)
	MOVE.L	#MOUVEMENT,PT_MOUVEMENT
	MOVE.L	#REBOND_MOI,PT_REBOND_MOI
	RTS

DêCALE_BIG_SPRITE
	MOVE	#200-1,D1
	MOVE.L	A0,A1
.Z
	MOVE	#2-1,D3
.E
	MOVE.L	A1,A0
N	SET	0
	REPT	20
	ROXR	N(A0)
N	SET	N+4
	ENDR
	ADDQ	#2,A1
	DBF	D3,.E
	LEA	80-2*2(A1),A1
	DBF	D1,.Z	
	RTS

MOUVEMENT	
N	SET	152
	REPT	19
	DC.B	3,N,(160-N)/8,0
	DC.B	2,N,(160-N)/8,0
	DC.B	1,N,(160-N)/8,0
	DC.B	0,N,(160-N)/8,0
N	SET	N-8
	ENDR
	REPT	20
	DC.B	3,N/8,-N/8,1
	DC.B	2,N/8,-N/8,1
	DC.B	1,N/8,-N/8,1
	DC.B	0,N/8,-N/8,1
N	SET	N-8
	ENDR
	DC.B	-1
	EVEN

REBOND_MOI	INCBIN	REBONDME.CRB
	DC.W	$1234

IMG	INCBIN	ZAPPY.PI1

TIMER_B2
	CLR.B	$FFFFFA1B.W
;	MOVE	#$700,$FFFF8240.W
	MOVE	#$000,$FFFF8244.W	0010
MODT	MOVE	#$777,$FFFF8246.W	0011
	MOVE.B	#37+4-1,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#TB1C,$120.W
	BCLR	#0,$FFFFFA0F.W
	RTE			
TB1C
	CLR.B	$FFFFFA1B.W
	DCB	128-40,$4E71
;	MOVE	#$001,$FFFF8240.W
	MOVE	#$000,$FFFF8244.W	0010
MODT2	MOVE	#$745,$FFFF8246.W	0011
	MOVE.B	#164-155+1,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#TB2C,$120.W
	BCLR	#0,$FFFFFA0F.W
	RTE
TB2C
	CLR.B	$FFFFFA1B.W
	MOVE.L	#TIMER_B2,$120.W
MODT3	MOVE	#$112,$FFFF8240.W
GATA	NOP
	NOP
	BCLR	#0,$FFFFFA0F.W
	RTE			

PLAY_B	;ST	$FFFF8240.W
	MOVEM.L	D0-D2,-(SP)
	MOVEQ	#0,D0	;1
	MOVE.B	(A3)+,D0	;2
	LSL.W	#3,D0	;3
	MOVE.L	0(A6,D0.W),D1	;5
	MOVE.W	4(A6,D0.W),D2	;5
	MOVEP.L	D1,(A4)	;6
	MOVEP.W	D2,(A4)	;4     ;=26 NOPS
	MOVEM.L	(SP)+,D0-D2
	;SF	$FFFF8240.W
	RTE	;5    ;=31 NOPS

RECOP	MOVE.L	SCREEN2,A1
	LEA	24+160*115(A1),A1
	MOVE.L	SCREEN1,A2
	LEA	24+160*115(A2),A2
	MOVE	#41-1,D6
.Y	MOVE	#6-1,D7
.X	MOVE.L	(A0),(A1)
	MOVE.L	4(A0),4(A1)
	MOVE.L	(A0),(A2)
	MOVE.L	4(A0),4(A2)
	ADDQ	#8,A0
	ADDQ	#8,A1
	ADDQ	#8,A2
	DBF	D7,.X
	LEA	160-8*6(A0),A0
	LEA	160-8*6(A1),A1
	LEA	160-8*6(A2),A2
	DBF	D6,.Y
	RTS

DêCALE
	MOVE	#50-1,D1
	MOVE.L	A0,A1
.Z
	MOVE	#2-1,D3
.E
	MOVE.L	A1,A0

;	MOVE	#10,D0
;.A	ROXR	(A0)
;	ADDQ	#8,A0
;	DBF	D0,.A

N	SET	0
	REPT	10
	ROXR	N(A0)
N	SET	N+8
	ENDR
	
	ADDQ	#2,A1
	DBF	D3,.E

	LEA	160-2*2(A1),A1
	DBF	D1,.Z	
	RTS

ANNEX	
	CLR	MOD_R
	CLR	MOD_T
MODSEG1	MOVE	#NB_SEG-1,D4	NB_LIGNES
DO_A_LINE	MOVEQ	#3,D5
DO_A_COORD	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE	(A4)+,D0
	MOVE	(A5)+,D1

	LEA	COORD,A0
MOD_R	EQU	*+2
	LEA	0(A0),A0
MOD_T	EQU	*+2
	LEA	0(A0),A0
	JSR	DO_TRANS
	ADD	#2,MOD_T
	DBF	D5,DO_A_COORD
	CLR	MOD_T
MODPASS1	ADD	#NB_PASSES*8,MOD_R
	DBF	D4,DO_A_LINE
	RTS

MOVE_YEUX
	MOVE.L	SCREEN2,A0
	ADDQ	#8,A0
	LEA	160*25+96+8+4(A0),A0
	ADD	MOD_Y_SMILE,A0
MOD_DêC2D	EQU	*+2
	LEA	0(A0),A0
	LEA	DêCAL_YEUX,A1
MOD_DêCD	EQU	*+2
	LEA	8*4*9(A1),A1
	MOVEQ	#0,D1
	MOVE	#8-1,D0
.R	MOVE	D1,-8(A0)
	MOVE	D1,-16(A0)
	MOVE	(A1)+,(A0)
	MOVE	(A1)+,8(A0)
	MOVE	D1,16(A0)
	MOVE	D1,24(A0)
	MOVE	D1,32(A0)
	LEA	160(A0),A0
	DBF	D0,.R
**
	MOVE.L	SCREEN2,A0
	ADDQ	#8,A0
	LEA	160*25+96+8+4+8(A0),A0
	ADD	MOD_Y_SMILE,A0
MOD_DêC2	EQU	*+2
	LEA	0(A0),A0
	LEA	DêCAL_YEUX,A1
MOD_DêC	EQU	*+2
	LEA	8*4*3(A1),A1
	MOVE	#8-1,D0
.K	MOVE	(A1)+,(A0)
	MOVE	(A1)+,8(A0)
	LEA	160(A0),A0
	DBF	D0,.K

	TST	FLAG_2
	BNE.S	A
MOD_DEP1	ADD	#8*4,MOD_DêC

	CMPI	#-8*4,MOD_DêC
	BNE.S	AS
	;CLR	MOD_DêC
	MOVE	#8*4*15,MOD_DêC
	SUBQ	#8,MOD_DêC2
	;MOD_DêC2
	BNE.S	A
	MOVE	#1,FLAG_2
	;MOVE	#1,FLAG_4
AS
	CMPI	#8*4*16,MOD_DêC
	BNE.S	A
	CLR	MOD_DêC
	ADDQ	#8,MOD_DêC2
	CMPI	#16,MOD_DêC2
	BNE.S	A
	MOVE	#1,FLAG_2
A	

	TST	FLAG_2
	BNE.S	A2
MOD_DEP2	ADD	#0,MOD_DêCD

	CMPI	#-8*4,MOD_DêCD
	BNE.S	AS2
	MOVE	#8*4*15,MOD_DêCD
	;CLR	MOD_DêCD
	SUBQ	#8,MOD_DêC2D
AS2
	CMPI	#8*4*16,MOD_DêCD
	BNE.S	A2
	CLR	MOD_DêCD
	ADDQ	#8,MOD_DêC2D
	CMPI	#16,MOD_DêC2D
	BNE.S	A2
	MOVE	#1,FLAG_2
A2
	RTS

MOVE_YEUX2
	MOVE.L	SCREEN2,A0
	LEA	160*25+96+4-72(A0),A0
	ADD	MOD_Y_SMILE2,A0
MOD_DêC2C	EQU	*+2
	LEA	0(A0),A0
	LEA	DêCAL_YEUX,A1
MOD_DêCC	EQU	*+2
	LEA	8*4*6(A1),A1
	MOVEQ	#0,D1
	MOVE	#8-1,D0
.R	MOVE	D1,-8(A0)
	MOVE	D1,-16(A0)
	MOVE	(A1)+,(A0)
	MOVE	(A1)+,8(A0)
	MOVE	D1,16(A0)
	MOVE	D1,24(A0)
	MOVE	D1,32(A0)
	LEA	160(A0),A0
	DBF	D0,.R

**
	MOVE.L	SCREEN2,A0
	LEA	160*25+96+4+8+16-72(A0),A0
	ADD	MOD_Y_SMILE2,A0
MOD_DêC2B	EQU	*+2
	LEA	0(A0),A0
	LEA	DêCAL_YEUX,A1
MOD_DêCB	EQU	*+2
	LEA	0(A1),A1
	MOVE	#8-1,D0
.K	MOVE	(A1)+,(A0)
	MOVE	(A1)+,8(A0)
	LEA	160(A0),A0
	DBF	D0,.K

	TST	FLAG_3
	BNE.S	.A
	ADD	#8*4,MOD_DêCB
	CMPI	#8*4*16,MOD_DêCB
	BNE.S	.A
	CLR	MOD_DêCB
	ADDQ	#8,MOD_DêC2B
	CMPI	#183+10,TIME
	BLE.S	.A
	MOVE	#1,FLAG_3
.A	
	TST	FLAG_3
	BNE.S	.A2
	ADD	#8*4,MOD_DêCC
	CMPI	#8*4*16,MOD_DêCC
	BNE.S	.A2
	CLR	MOD_DêCC
	ADDQ	#8,MOD_DêC2C
.A2
	RTS

MOVE_SMILE
	MOVE.L	SCREEN2,A0
	LEA	160*57+96+4+8-72(A0),A0
	ADD	MOD_Y_SMILE2,A0
	LEA	DATAS+34,A1
MOD_LM	EQU	*+2
	LEA	0(A1),A1
	MOVE	#8-1,D7
.G	MOVE	2(A1),(A0)
	MOVE	2+8(A1),8(A0)
	LEA	160(A0),A0
	LEA	160(A1),A1
	DBF	D7,.G
	SUBQ	#1,WTR
	BNE.S	.P
	MOVE	#3,WTR
	ADD	#16,MOD_LM
	CMPI	#16*6,MOD_LM
	BNE.S	.P
	SUB	#16,MOD_LM
.P	RTS
WTR	DC	3
TIME	DC	0
PAUSE	DC	250
FLAG_1	DC	0
FLAG_2	DC	0
FLAG_3	DC	0
FLAG_4	DC	0
EFFECR
	MOVE.L	SCREEN2,A0
	ADDQ	#4,A0
	MOVEQ	#0,D0
	MOVE	#199,D1
.EFF
N	SET	0
	REPT	20
	MOVE	D0,N(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D1,.EFF
	RTS

PNT	DS.L	1
TRANSFO	
	MOVE.L	SCREEN2,A0
	LEA	160*40+96+4(A0),A0
	ADD	MOD_Y_SMILE,A0
	MOVE.L	A0,A5
	MOVEQ	#0,D2
	MOVE	#50-1,D1
L	MOVE.L	A5,A0
	MOVE	#6-1,D0
K	MOVE	D2,(A0)
	ADDQ	#8,A0
	DBF	D0,K
	LEA	160(A5),A5
	DBF	D1,L
TRANSFO2
MODDAT	LEA	COORD,A0
	ADDA.L	PNT,A0
MODSEG2	MOVE	#NB_SEG-1,D7
BOUCLED	MOVE	(A0),D0
	MOVE	2(A0),D1
	MOVE	4(A0),D2
	MOVE	6(A0),D3
	MOVEM.L	A0/D7,-(SP)
	MOVE.L	SCREEN2,A0
MOD1	ADDQ	#8,A0
MOD2	LEA	-160*95+4(A0),A0
MOD3	ADDA	MOD_Y_SMILE,A0
	jsr	LINE+78
	MOVEM.L	(SP)+,A0/D7
MODKILL	LEA	8*NB_PASSES(A0),A0
	DBF	D7,BOUCLED
MODPNT	ADD.L	#4*2,PNT
MODPASS2	CMPI.L	#4*2*NB_PASSES,PNT
	BNE.S	OKOK
	CLR.L	PNT
	CLR.L	MODPNT+2
MODIF1	MOVE.L	#FORME_FIN,MODDAT+2
	MOVE	#8,MODKILL+2
;	MOVE.L	#VBL_FIN,$70.W
OKOK	
	RTS
TRANSFO_SPE
	LEA	FORME_DEP3,A0
	MOVE	#4-1,D7
.BOUCLED	MOVE	(A0),D0
	MOVE	2(A0),D1
	MOVE	4(A0),D2
	MOVE	6(A0),D3
	MOVEM.L	A0/D7,-(SP)
	MOVE.L	SCREEN2,A0
	ADDQ	#4,A0
	jsr	LINE+78
	MOVEM.L	(SP)+,A0/D7
	ADDQ	#8,A0
	DBF	D7,.BOUCLED
	RTS

;	MOVE.L	#0,D0	DEPART
;	MOVE.L	#319,D1	ARRIVEE
;	LEA	COORD,A0
DO_TRANS
MODPASS3	MOVE.L	#NB_PASSES,D2	EN 'D2' PASSES
	MOVE.L	D2,D6
	MOVE	D2,MODIF
	MOVE	D2,MODIF_

	LSL.L	#8,D0
	LSL.L	#8,D1
	CMP.L	D0,D1
	BGT.S	ROUTY1
ROUTY2	;D1 PLUS PETIT
	MOVE.L	D0,D2
	SUB.L	D1,D0	D1=AMPLITUDE
	DIVU	D6,D0
	SWAP	D0
	CLR	D0
	SWAP	D0
MODIF_	EQU	*+2
	MOVE	#0,D7
	SUBQ	#1,D7
DO_IT_AGAIN_	SUB.L	D0,D2
	MOVE.L	D2,D3
	LSR.L	#8,D3	CA EN FAIT UN
	MOVE	D3,(A0)
	ADDQ.L	#8,A0
	DBF	D7,DO_IT_AGAIN_
FINI2	RTS
****
	
ROUTY1	;D0 PLUS PETIT
	MOVE.L	D0,D2
	SUB.L	D0,D1	D1=AMPLITUDE
	DIVU	D6,D1
	SWAP	D1
	CLR	D1
	SWAP	D1
MODIF	EQU	*+2
	MOVE	#0,D7
	SUBQ	#1,D7
DO_IT_AGAIN	ADD.L	D1,D2
	MOVE.L	D2,D3
	LSR.L	#8,D3	CA EN FAIT UN
	MOVE	D3,(A0)
	ADDQ.L	#8,A0
	DBF	D7,DO_IT_AGAIN
FINI	RTS
****
SILENCE
	MOVE	#1,FLAG_ZIK
;	MOVE.W	#$2700,SR
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVE.W	#$8800,A0
	MOVEQ	#$A,D0
SET_YM1	MOVE.B	D1,(A0)	;ON REMET LES 10 REGISTRES SONORES A ZERO
	CLR.B	2(A0)
	ADDQ.W	#1,D1
	DBRA	D0,SET_YM1
	MOVE.B	#7,(A0)
	MOVE.B	#$FF,2(A0)

;	CLR.B	$FFFFFA07.W
;	CLR.B	$FFFFFA09.W
;	BSET	#0,$FFFFFA07.W
;	BSET	#0,$FFFFFA13.W
	RTS
INIT_SAMPLES
	MOVE.L	#BEAT,BEAT1
	LEA	BEAT,A0
	MOVE.W	#((TEST_FIN-BEAT)/2)-1,D7
.CONT	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	DBRA	D7,.CONT

	LEA	BEAT,A0
	LEA	TEST_FIN,A1
	MOVE.W	#255,D7
.A	MOVE.B	(A0)+,(A1)+
	DBRA	D7,.A
;	RTS
	LEA	BEAT2,A0
	MOVE.W	#((TEST_FIN2-BEAT2)/2)-1,D7
.CONT2	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	DBRA	D7,.CONT2

	LEA	BEAT2,A0
	LEA	TEST_FIN2,A1
	MOVE.W	#255,D7
.A2	MOVE.B	(A0)+,(A1)+
	DBRA	D7,.A2

	LEA	BEAT3,A0
	MOVE.W	#((TEST_FIN3-BEAT3)/2)-1,D7
.CONT3	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	DBRA	D7,.CONT3

	LEA	BEAT3,A0
	LEA	TEST_FIN3,A1
	MOVE.W	#255,D7
.A3	MOVE.B	(A0)+,(A1)+
	DBRA	D7,.A3

	LEA	BEAT4,A0
	MOVE.W	#((TEST_FIN4-BEAT4)/2)-1,D7
.CONT4	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	DBRA	D7,.CONT4

	LEA	BEAT4,A0
	LEA	TEST_FIN4,A1
	MOVE.W	#255,D7
.A4	MOVE.B	(A0)+,(A1)+
	DBRA	D7,.A4
	;RTS
	LEA	BEAT5,A0
	MOVE.W	#((TEST_FIN5-BEAT5)/2)-1,D7
.CONT5	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	MOVE.B	(A0),D0
	ADDI.B	#$80,D0
	MOVE.B	D0,(A0)+
	DBRA	D7,.CONT5

	LEA	BEAT5,A0
	LEA	TEST_FIN5,A1
	MOVE.W	#255,D7
.A5	MOVE.B	(A0)+,(A1)+
	DBRA	D7,.A5

	RTS

FIN	MOVE.L	4.W,A0
	JMP	(A0)
GERE_RUBAN
	bsr	efecr_spÇcial
	move.w	$fffffc02.w,key
	bsr	calcpoint
	bsr	calcrot  
	MOVE.L	SCREEN2,A0
	ADDQ	#6,A0
	JSR	POLY

	lea	t_points,a0
	lea	face_en_cours,a1
	move.l	X3(a0),(a1)+
	move.l	X2(a0),(a1)+
	move.l	X6(a0),(a1)+
	move.l	X6(a0),(a1)+
	lea	face_en_cours,a0
	JSR	POLY+4

	lea	t_points,a0
	lea	face_en_cours,a1
	move.l	X4(a0),(a1)+
	move.l	X1(a0),(a1)+
	move.l	X5(a0),(a1)+
	move.l	X5(a0),(a1)+
	lea	face_en_cours,a0
	JSR	POLY+4

	lea	t_points,a0
	lea	face_en_cours,a1
	move.l	X8(a0),(a1)+
	move.l	X1(a0),(a1)+
	move.l	X7(a0),(a1)+
	move.l	X7(a0),(a1)+
	lea	face_en_cours,a0
	JSR	POLY+4

	lea	t_points,a0
	lea	face_en_cours,a1
	move.l	X2(a0),(a1)+
	move.l	X3(a0),(a1)+
	move.l	X6(a0),(a1)+
	move.l	X6(a0),(a1)+
	lea	face_en_cours,a0
	JSR	POLY+4

	lea	t_points,a0
	lea	face_en_cours,a1
	move.l	X1(a0),(a1)+
	move.l	X4(a0),(a1)+
	move.l	X5(a0),(a1)+
	move.l	X5(a0),(a1)+
	lea	face_en_cours,a0
	JSR	POLY+4

	lea	t_points,a0
	lea	face_en_cours,a1
	move.l	X1(a0),(a1)+
	move.l	X8(a0),(a1)+
	move.l	X7(a0),(a1)+
	move.l	X7(a0),(a1)+
	lea	face_en_cours,a0
	JSR	POLY+4
putrts	nop
	LEA	STUPID,A0
MOD_STU	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$9999,(A0)
	BNE.S	.ROOL
	;CLR	MODY
	;CMPI	#$Ea,ang2
	;bne.s	.Q
	CMPI	#215,TIME
	BNE.S	.Q
	clr	adag2
	MOVE	#$1e2,ang2
	MOVE	#$4E75,putrts

	BRA.S	.Q
.ROOL	MOVE	(A0),MODY
	ADDQ	#2,MOD_STU
.Q
	SUBQ	#1,TEMPS
	BGE.S	S
ZE	MOVE	#0,adag2
	CMPI	#30,ZE+2
	BEQ.S	S
	ADDQ	#2,ZE+2
S
	
	RTS
TEMPS	DC	10
	even
key	dc.b	0
	even 

calcrot
;	sub.w	#1,attvbl
;	beq.s	calcrots	
	bra	finacal
calcrots
	move.w	#5,attvbl
	moveq	#0,d0
	move.b	key,d0

	cmp.w	#7,d0
	bgt.s	finacal
	beq.s	changobj
	subq	#1,d0

	lea.l	adag1,a0
	moveq.l	#1,d1
	and.w	d0,d1
	bne.s	suitadcal

	sub.w	d1,d0
	add.w	d0,a0
	sub.w	#2,(a0)
	bra.s	finacal
suitadcal
	sub.w	d1,d0
	add.w	d0,a0
	add.w	#2,(a0)
	bra.s	finacal
changobj
	add.w	#8,numobj
	lea.l	paobj,a0
	add.w	numobj,a0
	move.l	(a0)+,d0	
	bgt.s	schangobj	
	move.w	#-8,numobj
	bra.s	changobj
schangobj
;	move.l	d0,ptchang2+2
	addq.l	#2,d0
;	move.l	d0,ptchang1+2
	move.l	(a0),ptchang3+2	
	clr.l	adag1
	clr.w	adag3
	clr.w	ang1
	clr.w	ang2
	clr.w	ang3

finacal
	move.w	ang1,d0
	add.w	adag1,d0
	and.w	#$1ff,d0
	move.w	d0,ang1

	move.w	ang2,d0
	add.w	adag2,d0
	and.w	#$1ff,d0
	move.w	d0,ang2

	move.w	ang3,d0
	add.w	adag3,d0
	and.w	#$1ff,d0
	move.w	d0,ang3

	rts
adag1	dc.w	0
adag2	dc.w	0
adag3	dc.w	0
attvbl	dc.w	10
numobj	dc.w	0	

efecr_spÇcial
	MOVE.L	SCREEN2,A0
	MOVEQ	#0,D0
	;MOVE.L	#$0000FFFF,D0
	MOVE	#164-15-1,D1
JK
N	SET	0
	REPT	11
	MOVE	D0,N+6(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D1,JK
	RTS

calcpoint
	lea.l	tsin,a0
	lea.l	128(a0),a1
ang1	equ	*+2
	move.w	#0,d0
ang2	equ	*+2
	move.w	#$1E2,d1
ang3	equ	*+2	
	move.w	#$10C,d2

	move.w	(a0,d1.w),d3	-sinb
	neg	d3
	move.w	d3,modf3+2	

	move.w	d0,d3		d3=a-b
	sub.w	d1,d3		
	add.w	d0,d1		d1=a+b

	move.w	(a1,d1.w),d4	1/2(cos(a+b)+cos(a-b))
	add.w	(a1,d3.w),d4	cosacosb
	asr	d4
	move.w	d4,modf1+2		

	move.w	(a0,d1.w),d4	-1:2(sin(a+b)+sin((a-b))
	add.w	(a0,d3.w),d4	-sinacosb
	asr	d4
	neg	d4
	move.w	d4,modf2+2		

	sub.w	d0,d1
	move.w	d1,d3		
	sub.w	d2,d3		d3=b-c
	add.w	d1,d2		d2=b+c

	move.w	(a0,d2.w),d4	-1:2(sin(b+c)-sin((b-c))
	sub.w	(a0,d3.w),d4	-sinccosb
	asr	d4
	neg	d4
	move.w	d4,modf6+2		

	move.w	(a1,d2.w),d4	1/2(cos(b+c)+cos(b-c))
	add.w	(a1,d3.w),d4	cosbcosc
	asr	d4
	move.w	d4,modf9+2		

	sub.w	d1,d2
	move.w	d0,d3
	sub.w	d2,d3		d3=a-c
	add.w	d0,d2		d2=a+c

	move.w	(a0,d2.w),d4	1:2(sin(a+c)+sin(a-c))
	add.w	(a0,d3.w),d4	sinacosc
	asr	d4
	move.w	d4,addmodf1

	move.w	(a1,d2.w),d4	1:2(cos(a+c)+cos(a-c))
	add.w	(a1,d3.w),d4	cosacosc
	asr	d4
	move.w	d4,addmodf2

	move.w	(a1,d3.w),d4	1:2(cos(a-c)-cos(a+c))
	sub.w	(a1,d2.w),d4	sinasinc
	asr	d4
	move.w	d4,addmodf3

	move.w	(a0,d2.w),d4	1:2(sin(a+c)-sin(a-c))
	sub.w	(a0,d3.w),d4	cosasinc
	asr	d4
	move.w	d4,addmodf4

	sub.w	d0,d2
	move.w	#14,d3

	move.w	(a1,d0.w),d4	-cosasinbsinc+sinacosc
	muls.w	(a0,d1.w),d4
	muls.w	(a0,d2.w),d4
	asr.l	d3,d4
	neg	d4
addmodf1	equ	*+2
	add.w	#0,d4
	move.w	d4,modf4+2

	move.w	(a0,d0.w),d4	sinasinbsinc+cosacosc
	muls.w	(a0,d1.w),d4
	muls.w	(a0,d2.w),d4
	asr.l	d3,d4
addmodf2	equ	*+2
	add.w	#0,d4
	move.w	d4,modf5+2

	move.w	(a1,d0.w),d4	cosasinbcosc+sinasinc
	muls.w	(a0,d1.w),d4
	muls.w	(a1,d2.w),d4
	asr.l	d3,d4
addmodf3	equ	*+2
	add.w	#0,d4
	move.w	d4,modf7+2

	move.w	(a0,d0.w),d4	-sinasinbcosc+cosasinc
	muls.w	(a0,d1.w),d4
	muls.w	(a1,d2.w),d4
	asr.l	d3,d4
	neg	d4
addmodf4	equ	*+2
	add.w	#0,d4
	move.w	d4,modf8+2

	lea.l	t_points,a0
ptchang3	lea.l	tpoitesp1,a1
	lea.l	tz+255*2,a2
MODZ	EQU	*+2
	LEA	-410(A2),A2	-310
	move.w	#80,d5
MODX	EQU	*+2
	ADD	#0,D5
	move.w	#99,d6
MODY	EQU	*+2
	SUB	#0,D6

	move.w	(a1)+,d7

bmatrix
	move.w	(a1)+,a3
	move.w	(a1)+,a4
	move.w	(a1)+,d4

	move.w	a3,d0
	move.w	a4,d1
	move.w	d4,d2

modf1	muls	#1<<7,d0
modf2	muls	#0,d1
modf3	muls	#0,d2
	add.l	d1,d0
	add.l	d2,d0

	move.w	a3,d1
	move.w	a4,d2
	move.w	d4,d3

modf4	muls	#0,d1
modf5	muls	#1<<7,d2
modf6	muls	#0,d3
	add.l	d2,d1
	add.l	d3,d1

	move.w	a3,d2
	move.w	a4,d3

modf7	muls	#0,d2
modf8	muls	#0,d3
modf9	muls	#1<<7,d4
	add.l	d3,d2
	add.l	d4,d2

	asr.w	#7,d2
	add.w	d2,d2

	add.w	#20,d2

	muls	(a2,d2.w),d0
	muls	(a2,d2.w),d1

	swap	d0
	swap	d1

	add.w	d5,d0
	add.w	d6,d1

	move.w	d0,(a0)+
	move.w	d1,(a0)+
;	JSR	ROUTINE
	dbra.w	d7,bmatrix
	rts

AFF_KEOPS	BSR	EFF_KEOPS
	MOVE.L	PT_SEQ,A6
	MOVE.W	(A6)+,D0	;No DE L'ETAPE
	LSL.W	#3,D0
	MOVE.W	#X_FIXE_KEOPS,D7
	ADD.W	(A6)+,D7	;X DU CORPS
	MOVE.W	(A6)+,D5	;Y DU CORPS=Y_AFF
	MOVE.W	D5,D4
	;ON AFFICHE LE CORPS DE KEOPS
	MOVE.L	SCREEN2,A1
	ADDQ	#8,A1
	MULS.W	#160,D4
	MOVE	D4,MOD_Y_SMILE
	ANDI.W	#-16,D7
	LSR.W	#1,D7
	ADD.W	D7,D4
	ADDA.W	D4,A1
	MOVE.L	A1,TB_EFF_KEOPS
	LEA	KEOPS_RENSEIGN,A0
	ADDA.W	D0,A0
	MOVE.L	(A0)+,A2	;ADRESSE DU CORPS DE KEOPS
	MOVE.W	(A0)+,D1	;LONGUEUR EN BLOCS DE 16
	MOVE.W	(A0)+,D2	;HAUTEUR-1
	LEA	ROUTS_AFF,A0
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.W	D1,TB_EFF_KEOPS+4
	MOVE.W	D2,TB_EFF_KEOPS+6
	MOVE.L	(A0,D1.W),A0
	JSR	(A0)

	;ON AFFICHE LES 2 YEUX DE KEOPS
	MOVE.W	#X_FIXE_KEOPS,D7
	ADD.W	(A6)+,D7	;X DE L'OEIL GAUCHE
	MOVE.W	#X_FIXE_KEOPS,D5
	ADD.W	(A6)+,D5	;X DE L'OEIL DROIT
	MOVE.W	(A6)+,D4	;Y DE L'OEIL
	;ON AFFICHE LE CORPS DE KEOPS
	MOVE.L	SCREEN2,A1
	ADDQ	#8,A1
	MULS.W	#160,D4
	ANDI.W	#-16,D7
	LSR.W	#1,D7
	ADD.W	D4,D7
	ADDA.W	D7,A1
	ADDQ.W	#2,A1
	LEA	KEOPS_YEUX_RENSEIGN,A0
	ADD.W	D0,D0
	ADDA.W	D0,A0
	MOVE.L	(A0)+,A2	;ADRESSE DE L'OEIL GAUCHE
	MOVE.W	(A0)+,D1	;LONGUEUR EN BLOCS DE 16
	MOVE.W	(A0)+,D2	;HAUTEUR-1
	LEA	ROUTS_AFF,A3
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.L	(A3,D1.W),A3
	JSR	(A3)

	MOVE.L	SCREEN2,A1
	ADDQ	#8,A1
	ANDI.W	#-16,D5
	LSR.W	#1,D5
	ADD.W	D5,D4
	ADDA.W	D4,A1
	ADDQ.W	#2,A1
	MOVE.L	(A0)+,A2	;ADRESSE DE L'OEIL DROIT
	MOVE.W	(A0)+,D1	;LONGUEUR EN BLOCS DE 16
	MOVE.W	(A0)+,D2	;HAUTEUR-1
	LEA	ROUTS_AFF,A0
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.L	(A0,D1.W),A0
	JSR	(A0)

;	BRA	TY
** AFFICHE SMILE
	ADDQ	#8,A6
	
	CMPI	#778,TIME
	BNE.S	.VAZY
* ICI ON SAUVE LES COORDS EN MEME TEMPS QU'ON AFFICHE
	MOVEQ	#7-1,D7
	LEA	FORME_DEP,A5
.RUN2
	MOVEM.L	D7/A6,-(SP)
	MOVE.L	SCREEN2,A0
	ADDQ	#8,A0
	LEA	-160*95+4(A0),A0
	ADDA	MOD_Y_SMILE,A0
	MOVE	(A6),D0
	MOVE	2(A6),D1
	MOVE	4(A6),D2
	MOVE	6(A6),D3
	ADD	#224,D0
	ADD	#224,D2
	ADD	#100,D1
	ADD	#100,D3
	MOVE	D0,(A5)+
	MOVE	D1,(A5)+
	MOVE	D2,(A5)+
	MOVE	D3,(A5)+
	MOVE.L	A5,-(SP)
	jsr	LINE+78
	MOVE.L	(SP)+,A5
	MOVEM.L	(SP)+,D7/A6
	;SUBQ	#4,A5
	ADDQ	#4,A6
	DBF	D7,.RUN2
	ADDQ	#4,A6

	BRA.S	.GO_GO
***
.VAZY	MOVEQ	#7-1,D7
.RUN
	MOVEM.L	D7/A6,-(SP)
	MOVE.L	SCREEN2,A0
	ADDQ	#8,A0
	LEA	-160*95+4(A0),A0
MOD_Y_SMILE	EQU	*+2
	LEA	0(A0),A0
	MOVE	(A6),D0
	MOVE	2(A6),D1
	MOVE	4(A6),D2
	MOVE	6(A6),D3
	ADD	#224,D0
	ADD	#224,D2
	ADD	#100,D1
	ADD	#100,D3
	jsr	LINE+78
	MOVEM.L	(SP)+,D7/A6
	ADDQ	#4,A6
	DBF	D7,.RUN
	ADDQ	#4,A6
;	LEA	4*NB_PTS_SMILE(A6),A6
.GO_GO
**
** AFFICHE PUPILLE
	LEA	ANX,A0
MOD_AMPLI	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$9998,(A0)
	BEQ.S	OUT1

MOD_ANX	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$9999,(A0)
	BNE.S	.ROOL
	CLR	MOD_ANX
	LEA	ANX,A0
	ADDA	MOD_AMPLI,A0
	TST	FLAG_1
	BEQ.S	.ROOL
	ADD	#84,MOD_AMPLI
.ROOL	MOVE	(A0),D0
	ADDQ	#2,MOD_ANX
	BRA.S	SUITE1
OUT1	MOVEQ	#0,D0
SUITE1	MOVE.L	SCREEN2,A2
	LEA	160*157(A2),A2
	MOVE.L	SCREEN2,A0
	ADDQ	#8,A0
	LEA	160*25+96+8+4(A0),A0
	ADD	MOD_Y_SMILE,A0
	ADDA	D0,A0
	CMP.L	A2,A0
	BLE.S	.OK1
	MOVE.L	A2,A0
	LEA	96+8+4+8(A0),A0
.OK1	;LEA	OEIL,A1
	LEA	DêCAL_YEUX+8*4*9,A1
	REPT	8
	MOVE	(A1)+,(A0)
	MOVE	(A1)+,8(A0)
	LEA	160(A0),A0
	ENDR

	LEA	ANX,A0
MOD_AMPLI2	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$9998,(A0)
	BEQ.S	OUT2
MOD_ANX2	EQU	*+2
	LEA	2*20(A0),A0
	CMPI	#$9999,(A0)
	BNE.S	.ROOL2
	CLR	MOD_ANX2
	LEA	ANX,A0
	ADDA	MOD_AMPLI2,A0
	TST	FLAG_1
	BEQ.S	.ROOL2
	ADD	#84,MOD_AMPLI2
.ROOL2	MOVE	(A0),D0
	ADDQ	#2,MOD_ANX2
	BRA.S	SUITE2
OUT2	MOVEQ	#0,D0
SUITE2	MOVE.L	SCREEN2,A0
	ADDQ	#8,A0
	LEA	160*25+96+8+4+8(A0),A0
	ADD	MOD_Y_SMILE,A0
	ADDA	D0,A0
	CMP.L	A2,A0
	BLE.S	.OK2
	MOVE.L	A2,A0
	LEA	96+16+4+8(A0),A0
.OK2	;LEA	OEIL2,A1
	LEA	DêCAL_YEUX+8*4*3,A1
	REPT	8
	MOVE	(A1)+,(A0)
	MOVE	(A1)+,8(A0)
	LEA	160(A0),A0
	ENDR

**
*****LES CHEVEUX, MAINTENANT
	MOVE.L	SCREEN2,A0
	LEA	-160*106+4(A0),A0
	ADDA	MOD_Y_SMILE,A0
	MOVE	D0,D7
	EXT.L	D7
	DIVS	#160,D7
	MOVE	D7,D6
	ADD	D7,D7
	MOVE	#215,D0	X1 FIXE
	MOVE	#70+50-5,D1	Y1 FIXE
	MOVE	#190,D2	X2 FIXE
	MOVE	#30+50+5,D3	Y2 FIXE
	ADD	D7,D2
	SUB	D6,D3
	MOVEM.L	D6/D7,-(SP)
	jsr	LINE+78
	MOVEM.L	(SP)+,D6/D7

	MOVE.L	SCREEN2,A0
	LEA	-160*106+4(A0),A0
	ADDA	MOD_Y_SMILE,A0
	MOVE	#240,D0	X1 FIXE
	MOVE	#70+50-5,D1	Y1 FIXE
	MOVE	#250,D2	X2 FIXE
	MOVE	#30+50,D3	Y2 FIXE
	SUB	D7,D2
	ADD	D6,D3
	MOVEM.L	D6/D7,-(SP)
	jsr	LINE+78
	MOVEM.L	(SP)+,D6/D7

	MOVE.L	SCREEN2,A0
	LEA	-160*106+4(A0),A0
	ADDA	MOD_Y_SMILE,A0
	MOVE	#260,D0	X1 FIXE
	MOVE	#70+50-10,D1	Y1 FIXE
	MOVE	#270,D2	X2 FIXE
	MOVE	#30+50+7,D3	Y2 FIXE
	SUB	D7,D2
	SUB	D6,D3
	MOVEM.L	D6/D7,-(SP)
	jsr	LINE+78
	MOVEM.L	(SP)+,D6/D7

*****
TY
;	LEA	8+4*NB_PTS_SMILE(A6),A6
	CMPI.W	#$1234,(A6)
	BNE.S	.PAS_FIN_SEQ
	LEA	SEQUENCE_KEOPS,A6
.PAS_FIN_SEQ
	CMPI	#778,TIME
	BGE.S	.NO_SAVE
	MOVE.L	A6,PT_SEQ
.NO_SAVE
	CMPI	#778,TIME
	BNE.S	.I
	MOVE	#1,FLAG_1
.I
	LEA	TB_EFF_KEOPS,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0)+,D1
	MOVE.L	(A0)+,D2
	MOVE.L	(A0)+,D3
	MOVE.L	D1,-(A0)
	MOVE.L	D0,-(A0)
	MOVE.L	D3,-(A0)
	MOVE.L	D2,-(A0)
	RTS

AFF_SEVE	BSR	EFF_SEVE
	MOVE.L	PT_SEQ2,A6
	MOVE.W	(A6)+,D0	;No DE L'ETAPE
	LSL.W	#3,D0
	MOVE.W	#X_FIXE_SEVERINE,D7
	ADD.W	(A6)+,D7	;X DU CORPS
	MOVE.W	(A6)+,D5	;Y DU CORPS=Y_AFF
	MOVE.B	D5,MOD_TIM
	ADD.B	#20,MOD_TIM
	MOVE.W	D5,D4
	;ON AFFICHE LE CORPS DE SEVERINE
	MOVE.L	SCREEN2,A1
	LEA	-80+8(A1),A1
	MULS.W	#160,D4
	MOVE	D4,MOD_Y_SMILE2
	ANDI.W	#-16,D7
	LSR.W	#1,D7
	ADD.W	D7,D4
	ADDA.W	D4,A1
	MOVE.L	A1,TB_EFF_SEVE
	LEA	KEOPS_RENSEIGN,A0
	ADDA.W	D0,A0
	MOVE.L	(A0)+,A2	;ADRESSE DU CORPS DE KEOPS
	MOVE.W	(A0)+,D1	;LONGUEUR EN BLOCS DE 16
	MOVE.W	(A0)+,D2	;HAUTEUR-1
	LEA	ROUTS_AFF,A0
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.W	D1,TB_EFF_SEVE+4
	MOVE.W	D2,TB_EFF_SEVE+6
	MOVE.L	(A0,D1.W),A0
	JSR	(A0)

*****	ON AFFICHE LES 2 YEUX DE SEVERINE
	MOVE	D0,MOD_D0
	MOVE.W	#X_FIXE_KEOPS,D7
	ADD.W	(A6)+,D7	;X DE L'OEIL GAUCHE
	MOVE.W	#X_FIXE_KEOPS,D5
	ADD.W	(A6)+,D5	;X DE L'OEIL DROIT
	MOVE.W	(A6)+,D4	;Y DE L'OEIL
	;ON AFFICHE LE CORPS DE KEOPS
	MOVE.L	SCREEN2,A1
	LEA	-80+8(A1),A1
	MULS.W	#160,D4
	ANDI.W	#-16,D7
	LSR.W	#1,D7
	ADD.W	D4,D7
	ADDA.W	D7,A1
	ADDQ.W	#2,A1
	LEA	SEVE_YEUX_RENSEIGN,A0
	ADD.W	D0,D0
	ADDA.W	D0,A0
	MOVE.L	(A0)+,A2	;ADRESSE DE L'OEIL GAUCHE
	MOVE.W	(A0)+,D1	;LONGUEUR EN BLOCS DE 16
	MOVE.W	(A0)+,D2	;HAUTEUR-1
	LEA	ROUTS_AFF,A3
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.L	(A3,D1.W),A3
	JSR	(A3)

	MOVE.L	SCREEN2,A1
	LEA	-80+8(A1),A1
	ANDI.W	#-16,D5
	LSR.W	#1,D5
	ADD.W	D5,D4
	ADDA.W	D4,A1
	ADDQ.W	#2,A1
	MOVE.L	(A0)+,A2	;ADRESSE DE L'OEIL DROIT
	MOVE.W	(A0)+,D1	;LONGUEUR EN BLOCS DE 16
	MOVE.W	(A0)+,D2	;HAUTEUR-1
	LEA	ROUTS_AFF,A0
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.L	(A0,D1.W),A0
	JSR	(A0)

*****	ON AFFICHE LES 2 JOUES DE SEVERINE
	SUBQ	#6,A6
MOD_D0	EQU	*+2
	MOVE	#0,D0
	MOVE.W	#X_FIXE_KEOPS,D7
	ADD.W	(A6)+,D7	;X DE L'OEIL GAUCHE
	MOVE.W	#X_FIXE_KEOPS,D5
	ADD.W	(A6)+,D5	;X DE L'OEIL DROIT
	MOVE.W	(A6)+,D4	;Y DE L'OEIL

	MOVE.L	SCREEN2,A1
	LEA	-80+8-8+160*35(A1),A1
	MULS.W	#160,D4
	ANDI.W	#-16,D7
	LSR.W	#1,D7
	ADD.W	D4,D7
	ADDA.W	D7,A1
	ADDQ.W	#6,A1
	LEA	KEOPS_YEUX_RENSEIGN,A0
	ADD.W	D0,D0
	ADDA.W	D0,A0
	MOVE.L	(A0)+,A2	;ADRESSE DE L'OEIL GAUCHE
	MOVE.W	(A0)+,D1	;LONGUEUR EN BLOCS DE 16
	MOVE.W	(A0)+,D2	;HAUTEUR-1
	LEA	ROUTS_AFF,A3
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.L	(A3,D1.W),A3
	JSR	(A3)

	MOVE.L	SCREEN2,A1
	LEA	-80+8+8+160*35(A1),A1
	ANDI.W	#-16,D5
	LSR.W	#1,D5
	ADD.W	D5,D4
	ADDA.W	D4,A1
	ADDQ.W	#6,A1
	MOVE.L	(A0)+,A2	;ADRESSE DE L'OEIL DROIT
	MOVE.W	(A0)+,D1	;LONGUEUR EN BLOCS DE 16
	MOVE.W	(A0)+,D2	;HAUTEUR-1
	LEA	ROUTS_AFF,A0
	ADD.W	D1,D1
	ADD.W	D1,D1
	MOVE.L	(A0,D1.W),A0
	JSR	(A0)
***
	LEA	8+4*NB_PTS_SMILE(A6),A6

** AFFICHE PUPILLE
	MOVE.L	SCREEN2,A2
	LEA	160*151(A2),A2
	MOVE.L	SCREEN2,A0
	LEA	160*25+96+4-72(A0),A0

MOD_Y_SMILE2	EQU	*+2
	LEA	0(A0),A0
	CMP.L	A2,A0
	BLE.S	.OK1
	MOVE.L	A2,A0
	LEA	96+4-72(A0),A0
.OK1	;LEA	OEIL,A1
	LEA	DêCAL_YEUX+8*4*6,A1
	REPT	8
	MOVE	(A1)+,(A0)
	MOVE	(A1)+,8(A0)
	LEA	160(A0),A0
	ENDR

	MOVE.L	SCREEN2,A0
	LEA	160*25+96+4+8+16-72(A0),A0
	ADD	MOD_Y_SMILE2,A0
	CMP.L	A2,A0
	BLE.S	.OK2
	MOVE.L	A2,A0
	LEA	96+16+4+8-72(A0),A0
.OK2	;LEA	OEIL2,A1
	LEA	DêCAL_YEUX,A1
	REPT	8
	MOVE	(A1)+,(A0)
	MOVE	(A1)+,8(A0)
	LEA	160(A0),A0
	ENDR
**AFF SOURIRE
	MOVE.L	SCREEN2,A2
	LEA	160*175(A2),A2

	MOVE.L	SCREEN2,A0
	LEA	160*60+96+4+8-72(A0),A0
	ADD	MOD_Y_SMILE2,A0
	CMP.L	A2,A0
	BLE.S	.OK3
	MOVE.L	A2,A0
	LEA	96+4+8-72(A0),A0
.OK3	LEA	SEVE_SMILE,A1
	REPT	5
	MOVE	(A1)+,(A0)
	MOVE	(A1)+,8(A0)
	LEA	160(A0),A0
	ENDR

***** SOURCILS
	MOVE.L	SCREEN2,A2
	LEA	160*147(A2),A2

	MOVE.L	SCREEN2,A0
	LEA	-160*5+96-16+4+8-72(A0),A0
	ADD	MOD_Y_SMILE2,A0
	CMP.L	A2,A0
	BLE.S	.OK4
	MOVE.L	A2,A0
	LEA	-160*5+96-16+4+8-72(A0),A0
.OK4	LEA	SOURCILS,A1
	MOVE	#18,D6
.E	MOVE	(A1)+,D4
	MOVE	(A1)+,D5
	OR	D4,(A0)
	OR	D5,8(A0)
	LEA	160(A0),A0
	DBF	D6,.E
	LEA	-160*19+32(A0),A0
	MOVE	#18,D6
.F	MOVE	(A1)+,D4
	MOVE	(A1)+,D5
	OR	D4,(A0)
	OR	D5,8(A0)
	LEA	160(A0),A0
	DBF	D6,.F

***** RUBAN
;	MOVE.L	SCREEN2,A2
;	LEA	160*147(A2),A2

	JSR	AFF_RUB

***
	CMPI.W	#$1234,(A6)
	BNE.S	.PAS_FIN_SEQ
	LEA	SEQUENCE_KEOPS,A6
.PAS_FIN_SEQ	
	CMPI	#820,TIME
	BGE.S	.NO_SAVE
	MOVE.L	A6,PT_SEQ2
.NO_SAVE
	LEA	TB_EFF_SEVE,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0)+,D1
	MOVE.L	(A0)+,D2
	MOVE.L	(A0)+,D3
	MOVE.L	D1,-(A0)
	MOVE.L	D0,-(A0)
	MOVE.L	D3,-(A0)
	MOVE.L	D2,-(A0)
	RTS

AFF_RUB
	MOVE.L	SCREEN2,A0
	LEA	-160*70(A0),A0
	ADD	MOD_Y_SMILE2,A0
AFF_RUB2	MOVEQ	#0,D0
	MOVEQ	#25-1,D1
.J
N	SET	0
	REPT	11
	MOVE	D0,6+N(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D1,.J

MOD_RUB	LEA	RUBAN+4,A1
MODRUB	MOVE	#55-1,D6
.L2
N	SET	0
	REPT	11
	MOVE	(A1)+,6+N(A0)
	MOVE	(A1)+,D1
	;OR	D1,4+N(A0)
	OR	D1,6+N(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	ADDQ	#4,A1
	DBF	D6,.L2
	MOVEQ	#0,D0
	MOVEQ	#20-1,D1
.JR
N	SET	0
	REPT	11
	MOVE	D0,6+N(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D1,.JR
	RTS

ROUTS_AFF	DC.L	ROUT_AFF_0,ROUT_AFF_1,ROUT_AFF_2
	DC.L	ROUT_AFF_3,ROUT_AFF_4,ROUT_AFF_5
	DC.L	ROUT_AFF_6,ROUT_AFF_7,ROUT_AFF_8
	DC.L	ROUT_AFF_9,ROUT_AFF_10,ROUT_AFF_11
	DC.L	ROUT_AFF_12
	;SOURCE=A2, DESTINATION=A1, D2=HAUTEUR-1
	INCLUDE	ROUTSAFF.S

EFF_KEOPS	MOVE.L	TB_EFF_KEOPS,A1	;ADRESSE DE KEOPS SUR ECRAN
	LEA	-(15+20)*160+4(A1),A1
	MOVEQ	#0,D0
	MOVE	#20+20-1,D1
EFCHVEU	MOVE	D0,(A1)
	MOVE	D0,8(A1)
	MOVE	D0,16(A1)
	MOVE	D0,24(A1)
	MOVE	D0,32(A1)
	MOVE	D0,40(A1)
	MOVE	D0,48(A1)
	MOVE	D0,56(A1)
	LEA	160(A1),A1
	DBF	D1,EFCHVEU

	MOVE.L	TB_EFF_KEOPS,A1	;ADRESSE DE KEOPS SUR ECRAN
	MOVE.W	TB_EFF_KEOPS+4,D0 ;SA LONGUEUR EN BLOCS DE 16
	LEA	ROUTS_EFF,A0
	MOVE.L	(A0,D0.W),A0
	MOVE.W	TB_EFF_KEOPS+6,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVEQ	#0,D7
	MOVE.L	D1,A2
	JMP	(A0)

EFF_SEVE	
	MOVE.L	TB_EFF_SEVE,A1
	LEA	-(15)*160+4(A1),A1
	MOVEQ	#0,D0
	MOVE	#20-1,D1
.EFCHVEU	MOVE	D0,(A1)
	MOVE	D0,8(A1)
	MOVE	D0,16(A1)
	MOVE	D0,24(A1)
	MOVE	D0,32(A1)
	MOVE	D0,40(A1)
	MOVE	D0,48(A1)
	MOVE	D0,56(A1)
	LEA	160(A1),A1
	DBF	D1,.EFCHVEU


	MOVE.L	TB_EFF_SEVE,A1
	;LEA	-80+8(A1),A1
	MOVE.W	TB_EFF_SEVE+4,D0
	LEA	ROUTS_EFF,A0
	MOVE.L	(A0,D0.W),A0
	MOVE.W	TB_EFF_SEVE+6,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVEQ	#0,D7
	MOVE.L	D1,A2
	JMP	(A0)

ROUTS_EFF	DC.L	ROUT_EFF_0,ROUT_EFF_1,ROUT_EFF_2
	DC.L	ROUT_EFF_3,ROUT_EFF_4,ROUT_EFF_5
	DC.L	ROUT_EFF_6,ROUT_EFF_7,ROUT_EFF_8
	DC.L	ROUT_EFF_9,ROUT_EFF_10,ROUT_EFF_11
	DC.L	ROUT_EFF_12

FLAG_ZIK	DC	0
FLAG_CLAC	DC	0
FAD_CLAC	DC	$101
	DC	$777,$777,$667,$667,$556,$556,$445,$445
	DC	$334,$334,$223,$223,$112,$112,$102,$101
	DC	-1
VBLR	ADDQ.W	#1,NB_VBL
	CLR.B	$FFFFFA1B.W
MOD_TIM	EQU	*+3
	MOVE.B	#164,$FFFFFA21.W
	MOVEM.L	D0-D1,-(SP)
	MOVE	#165,D0
	MOVEQ	#0,D1
	MOVE.B	MOD_TIM,D1
	SUB	D1,D0
	MOVE.B	D0,MOD_TIM2
	MOVE.B	#8,$FFFFFA1B.W

	MOVE.L	A0,-(SP)
	TST	FLAG_CLAC
	BEQ.S	MOD_CLAC
	LEA	FAD_CLAC,A0
MODCLAC	LEA	0(A0),A0
	CMPI	#-1,(A0)
	BNE.S	GOGOGO
	LEA	FAD_CLAC,A0
	CLR	FLAG_CLAC
GOGOGO	MOVE	(A0),MOD_CLAC+2
	ADDQ	#2,MODCLAC+2
MOD_CLAC	MOVE	#$101,$FFFF8240.W
	MOVE.L	(SP)+,A0
 MOVE	#$300,$FFFF8250.W  1000 RUBAN SEUL
 MOVE	#$300,$FFFF8252.W  1001 RUBAN+PEAU
 MOVE	#$300,$FFFF8254.W  1010 RUBAN+BLANC
 MOVE	#$300,$FFFF8256.W  1011 IDEM
 MOVE	#$000,$FFFF8258.W  1100 IDEM
 MOVE	#$300,$FFFF825A.W  1101 IDEM
 MOVE	#$300,$FFFF825C.W  1110 IDEM
 MOVE	#$300,$FFFF825E.W  1111 IDEM
 	MOVEM.L	(SP)+,D0-D1
	TST	FLAG_ZIK
	BNE.S	INTER_RTE
	MOVEM.L	D0-A6,-(SP)
	JSR	ZIK+$E
	MOVEM.L	(SP)+,D0-A6
INTER_RTE	RTE
VBL_TRANSIT	;ADDQ.W	#1,NB_VBL
	CLR.B	$FFFFFA1B.W

;	CMPI.B	#$3B,$FFFFFC02.W
;	BNE	.EC1
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	MOVE.L	#VBL_TRANS2,$70.W
	JMP	VBLR
GATOPABO	DC	0
VBL_TRANS2	MOVE	#1,GATOPABO
	ADDQ.W	#1,NB_VBL
	ADDQ	#1,TIME
	CLR.B	$FFFFFA1B.W

	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	MOVE.B	#114,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#TIMER_B2,$120.W
	MOVE	#$101,$FFFF8240.W
	MOVE	#$756,$FFFF8242.W	0001	
	MOVE	#$000,$FFFF8244.W	0010
	MOVE	#$300,$FFFF8246.W	0011
	MOVE	#$743,$FFFF8248.W	0100	
	MOVE	#$743,$FFFF824A.W	0101	
	MOVE	#$743,$FFFF824C.W	0110	
	MOVE	#$743,$FFFF824E.W	0111	
	MOVE	#$777,$FFFF8250.W	1000	
	MOVE	#$777,$FFFF8252.W	1001	
	MOVE	#$777,$FFFF8254.W	1010	
	MOVE	#$777,$FFFF8256.W	1011	
	MOVE	#$0,$FFFF8258.W	1100	
	MOVE	#$0,$FFFF825A.W	1101	
	MOVE	#$0,$FFFF825C.W	1110	
	MOVE	#$0,$FFFF825E.W	1111	
	RTE
VBL_TRANS3
	ADDQ.W	#1,NB_VBL
	CLR.B	$FFFFFA1B.W
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	MOVE.B	#114,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#TIMER_B2,$120.W
MODFF1	MOVE	#$101,$FFFF8240.W
MODFF2	MOVE	#$756,$FFFF8242.W	0001	
	MOVE	#$000,$FFFF8244.W	0010
MODFF3	MOVE	#$300,$FFFF8246.W	0011
MODFF4	MOVE	#$743,$FFFF8248.W	0100	
MODFF4B	MOVE	#$743,$FFFF824A.W	0101	
MODFF4C	MOVE	#$743,$FFFF824C.W	0110	
MODFF4D	MOVE	#$743,$FFFF824E.W	0111	
MODFF5	MOVE	#$777,$FFFF8250.W	1000	
MODFF5B	MOVE	#$777,$FFFF8252.W	1001	
MODFF5C	MOVE	#$777,$FFFF8254.W	1010	
MODFF5D	MOVE	#$777,$FFFF8256.W	1011	
	MOVE	#$0,$FFFF8258.W	1100	
	MOVE	#$0,$FFFF825A.W	1101	
	MOVE	#$0,$FFFF825C.W	1110	
	MOVE	#$0,$FFFF825E.W	1111	
	RTE


FAD_FINAL	DC	$101,$756,$300,$743,$777,$112
	DC	$101,$645,$200,$632,$666,$111
	DC	$101,$534,$100,$521,$555,$101
	DC	$101,$423,$000,$410,$444,$101
	DC	$101,$312,$000,$300,$333,$101
	DC	$101,$201,$000,$200,$222,$101
	DC	$101,$100,$000,$100,$111,$101
	DC	$000,$000,$000,$000,$000,$000
	DC	-1
TIMER_B
	CLR.B	$FFFFFA1B.W
MOD_TIM2	EQU	*+3
	MOVE.B	#1,$FFFFFA21.W
	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#TB1,$120.W
 MOVE	$FFFF8240.W,$FFFF8250.W  1000 JOUES SEULES INVISIBLES
 MOVE	#$745,$FFFF8252.W  1001 JOUES+PEAU=VISIBLES 
 MOVE	#$600,$FFFF8254.W  1010 JOUES+BLANC EXISTE PAS
 MOVE	#$700,$FFFF8256.W  1011 IDEM
 MOVE	#$300,$FFFF8258.W  1100 IDEM
 MOVE	#$700,$FFFF825A.W  1101 IDEM
 MOVE	#$700,$FFFF825C.W  1110 IDEM
 MOVE	#$700,$FFFF825E.W  1111 IDEM

	BCLR	#0,$FFFFFA0F.W
	RTE			

TB1
	CLR.B	$FFFFFA1B.W
;	MOVE.B	#1,$FFFFFA21.W
;	MOVE.B	#8,$FFFFFA1B.W
	MOVE.L	#TIMER_B,$120
	MOVE	#$112,$FFFF8240.W
	MOVE	#$112,$FFFF8250.W
GATA2	NOP
	NOP
	BCLR	#0,$FFFFFA0F.W
	RTE


PREP_ECR	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	MOVE.L	#BUFFER2,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

PREPARE_KEOPS	;ON PASSE EN REVUE LA SEQUENCE POUR DETERMINER LES
	;DECALAGES DU CORPS ET DES YEUX SUIVANT L'ETAPE
	LEA	SEQUENCE_KEOPS,A0
	LEA	POZ_RESULT,A1
.CONT_SCANNING	CMPI.W	#$1234,(A0)
	BEQ.S	.FIN_SCANNING
	MOVE.W	(A0)+,D0	;No DE L'ETAPE D'ANIM
	MOVE.W	#X_FIXE_KEOPS,D1
	ADD.W	(A0)+,D1	;X DU CORPS
	ANDI.W	#15,D1	;DECALAGE DE L'ETAPE
	ADDQ.W	#2,A0	;ON SAUTE LE Y
	MOVE.W	#X_FIXE_KEOPS,D2
	MOVE.W	D2,D3
	ADD.W	(A0)+,D2	;X DE L'OEIL GAUCHE
	ADD.W	(A0)+,D3	;X DE L'OEIL DROIT
	ANDI.W	#15,D2
	ANDI.W	#15,D3
	LEA	10+4*NB_PTS_SMILE(A0),A0
	MULU.W	#6,D0
	MOVE.W	D1,(A1,D0.W)	;DECALAGE DU CORPS
	MOVE.W	D2,2(A1,D0.W)	;DECALAGE DE L'OEIL GAUCHE
	MOVE.W	D3,4(A1,D0.W)	;DECALAGE DE L'OEIL DROIT
	BRA.S	.CONT_SCANNING
.FIN_SCANNING	;ON CALCULE LES ANIMS DU CORPS DE KEOPS AU Z=0
	LEA	GFX_CORPSE,A0
	LEA	BUF_CORPS_KEOPS,A2
	LEA	KEOPS_RENSEIGN,A4
	LEA	POZ_RESULT,A5
	MOVEQ	#18,D7
.PROUT	MOVE.L	A2,(A4)+
	MOVE.L	A0,A1
	MOVE.W	#-1000,D0
	MOVE.W	#1000,D6
	MOVEQ	#0,D2	HAUTEUR
.NEXT_LINE	CMPI.W	#-1,(A0)
	BEQ.S	.FIN_SPR
	CMP.W	(A0),D6
	BLE.S	.NAN_NAN
	MOVE.W	(A0),D6
.NAN_NAN	ADDQ.W	#2,A0
	ADDQ.W	#1,D2	+1
	MOVE.W	(A0)+,D1	X2
	CMP.W	D1,D0
	BGE.S	.NEXT_LINE
	MOVE.W	D1,D0
	BRA.S	.NEXT_LINE
.FIN_SPR	MOVE.L	A1,A0
	;D0=LONGUEUR MAXIMUM DE KEOPS
	SUB.W	D6,D0
	ADD.W	(A5),D0
	ADDQ.W	#1,D0
	SUBQ.W	#1,D0
	LSR.W	#4,D0
	ADDQ.W	#1,D0
	MOVE.W	D0,(A4)+
	ADD.W	D0,D0	;D0=LONGUEUR MAX EN OCTETS
	LEA	MOTIFS,A3
	SUBQ.W	#1,D2
	MOVE.W	D2,(A4)+
.ALL_THE_SPRITE	MOVE.W	(A0)+,D3	X1
	SUB.W	D6,D3
	ADD.W	(A5),D3
	MOVE.W	(A0)+,D4	X2
	SUB.W	D6,D4
	ADD.W	(A5),D4
	SUB.W	D3,D4	D4=LONGUEUR-1
	MOVE.W	D3,D5
	ANDI.W	#15,D3
	ADD.W	D3,D3
	MOVE.W	(A3,D3.W),D3	MOTIF DE DEPART
	ANDI.W	#-16,D5
	LSR.W	#3,D5
.TRAC_LIG	OR.W	D3,(A2,D5.W)
	LSR.W	#1,D3
	BNE.S	.FUCK
	MOVE.W	#$8000,D3
	ADDQ.W	#2,D5
.FUCK	DBRA	D4,.TRAC_LIG
	ADDA.W	D0,A2
	DBRA	D2,.ALL_THE_SPRITE
	ADDQ.W	#2,A0
	ADDQ.W	#6,A5
	DBRA	D7,.PROUT

	;ON CALCULE LES YEUX, DONC Z=400
CALCUL_2	LEA	GFX_CORPSE,A0
	LEA	BUF_YEUX_KEOPS,A2
	LEA	KEOPS_YEUX_RENSEIGN,A4
	LEA	COEFF_3D+400*2,A5
	LEA	POZ_RESULT,A6
	MOVEQ	#18,D7
PROUT	BSR	MAKE_ZOOM
	MOVE.L	A0,-(SP)
	BSR	PUT_YEUX
	ADDQ.W	#2,A6
	BSR	PUT_YEUX
	ADDQ.W	#4,A6
	MOVE.L	(SP)+,A0
	DBRA	D7,PROUT	

	;ON CALCULE LES YEUX DE SEVERINE, DONC Z=500
CALCUL_3	LEA	GFX_CORPSE,A0
	LEA	BUF_YEUX_SEVE,A2
	LEA	SEVE_YEUX_RENSEIGN,A4
	LEA	COEFF_3D+500*2,A5
	LEA	POZ_RESULT,A6
	MOVEQ	#18,D7
PROUTY	BSR	MAKE_ZOOM
	MOVE.L	A0,-(SP)
	BSR	PUT_YEUX
	ADDQ.W	#2,A6
	BSR	PUT_YEUX
	ADDQ.W	#4,A6
	MOVE.L	(SP)+,A0
	DBRA	D7,PROUTY

	RTS

MAKE_ZOOM	MOVE.L	A2,-(SP)
	LEA	BUF_ANNEX,A2
	MOVEQ	#0,D5	;Y DE DEPART
.CONT_ZOOM	CMPI.W	#-1,(A0)
	BEQ.S	.FIN_ZOOM
	MOVE.W	D5,D0
	ADD.W	D0,D0
	MULS.W	(A5),D0
	SWAP	D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	MOVE.W	(A0)+,D1	;X1
	ADD.W	D1,D1
	MOVE.W	(A0)+,D2	;X2
	ADD.W	D2,D2
	MULS.W	(A5),D1
	MULS.W	(A5),D2
	SWAP	D1
	SWAP	D2
	MOVE.W	D1,(A2,D0.W)
	MOVE.W	D2,2(A2,D0.W)
	ADDQ.W	#1,D5	;LIGNE SUIVANTE
	BRA.S	.CONT_ZOOM
.FIN_ZOOM	MOVE.W	#-1,4(A2,D0.W)
	MOVE.L	(SP)+,A2
	ADDQ.W	#2,A0
	RTS
	************

PUT_YEUX	MOVE.L	A2,(A4)+
	LEA	BUF_ANNEX,A0
	MOVE.W	#-1000,D0
	MOVE.W	#1000,D6
	MOVEQ	#0,D2	HAUTEUR
.NEXT_LINE	CMPI.W	#-1,(A0)
	BEQ.S	.FIN_SPR
	CMP.W	(A0),D6
	BLE.S	.NAN_NAN
	MOVE.W	(A0),D6
.NAN_NAN	ADDQ.W	#2,A0
	ADDQ.W	#1,D2	+1
	MOVE.W	(A0)+,D1	X2
	CMP.W	D1,D0
	BGE.S	.NEXT_LINE
	MOVE.W	D1,D0
	BRA.S	.NEXT_LINE
.FIN_SPR	LEA	BUF_ANNEX,A0
	;D0-D1=LONGUEUR MAXIMUM DE KEOPS
	SUB.W	D6,D0
	ADD.W	2(A6),D0
	LSR.W	#4,D0
	ADDQ.W	#1,D0
	MOVE.W	D0,(A4)+
	ADD.W	D0,D0	;D0=LONGUEUR MAX EN OCTETS
	LEA	MOTIFS,A3
	SUBQ.W	#1,D2
	MOVE.W	D2,(A4)+
ALL_THE_SPRITE	MOVE.W	(A0)+,D3	X1
	SUB.W	D6,D3
	MOVE.W	(A0)+,D4	X2
	SUB.W	D6,D4
	ADD.W	2(A6),D3
	ADD.W	2(A6),D4
	SUB.W	D3,D4	D4=LONGUEUR-1
	MOVE.W	D3,D5
	ANDI.W	#15,D3
	ADD.W	D3,D3
	MOVE.W	(A3,D3.W),D3	MOTIF DE DEPART
	ANDI.W	#-16,D5
	LSR.W	#3,D5
.TRAC_LIG	OR.W	D3,(A2,D5.W)
	LSR.W	#1,D3
	BNE.S	.FUCK
	MOVE.W	#$8000,D3
	ADDQ.W	#2,D5
.FUCK	DBRA	D4,.TRAC_LIG
	ADDA.W	D0,A2
	DBRA	D2,ALL_THE_SPRITE
	RTS

	DATA
PRESENT	INCBIN	PRESENT.GFX
FAD_PRES	DC	$101,$212,$323,$434,$545,$656,$767,-1

RUBAN	INCBIN	RUBAN.GFX
RUBAN2	INCBIN	RUBAN3.GFX
RUBAN3	INCBIN	RUBAN2.GFX
SOURCILS	INCBIN	SOURCILS

;OEIL	DC.B	%00111000
;	DC.B	%01111100
;	DC.B	%11111110
;	DC.B	%11111110
;	DC.B	%11111110
;	DC.B	%11111110
;	DC.B	%01111100
;	DC.B	%00111000
OEIL	DC.L	%00111000000000000000000000000000
	DC.L	%01111100000000000000000000000000
	DC.L	%11111110000000000000000000000000
	DC.L	%11111110000000000000000000000000
	DC.L	%11111110000000000000000000000000
	DC.L	%11111110000000000000000000000000
	DC.L	%01111100000000000000000000000000
	DC.L	%00111000000000000000000000000000

;OEIL2	DC	%0000011100000000
;	DC	%0000111110000000
;	DC	%0001111111000000
;	DC	%0001111111000000
;	DC	%0001111111000000
;	DC	%0001111111000000
;	DC	%0000111110000000
;	DC	%0000011100000000

SEVE_SMILE
	DC.L	%00001000000000000000000000010000
	DC.L	%00000110000000000000000001100000
	DC.L	%00000011100000000000000111000000
	DC.L	%00000001111100000000111110000000
	DC.L	%00000000000111111111100000000000

ANX
 INCLUDE	OEIL.ANX
 DC $9999
ANX2
 INCLUDE	OEIL2.ANX
 DC $9999
ANX3
 INCLUDE	OEIL3.ANX
 DC $9999
ANX4
 INCLUDE	OEIL4.ANX
 DC $9999
ANX5
 INCLUDE	OEIL5.ANX
 DC $9999,$9998

LINE	INCBIN	LINE.BIN

MOTIFS	DC.W	$8000,$4000,$2000,$1000,$800,$400,$200,$100,$80,$40,$20,$10,8,4,2,1

GFX_CORPSE	INCBIN	SPR_KEOP.COR

SEQUENCE_KEOPS	INCBIN	COORKEOP.SPR
	DC.W	$1234

COEFF_3D	INCBIN	KEOP_CF.3D

FORME_DEP	DCB	2*14,0
FORME_FIN
 DC	185,165
 DC	196,165

 DC	196,165
 DC	207,165
 
 DC	207,165
 DC	218,165
 
 DC	218,165
 DC	229,165
 
 DC	229,165
 DC	240,165
 
 DC	240,165
 DC	251,165
 
 DC	251,165
 DC	262,165
FORME_FIN2
 DC	185,165-7
 DC	196,165+7

 DC	196,165+7
 DC	207,165-7
 
 DC	207,165-7
 DC	218,165+7
 
 DC	218,165+7
 DC	229,165-7
 
 DC	229,165-7
 DC	240,165+7
 
 DC	240,165+7
 DC	251,165-7
 
 DC	251,165-7
 DC	262,165+7

FORME_DEP3
 dc 85,169
 dc 101,169

 dc 101,169
 dc 99,175
 
 dc 99,175
 dc 83,176
 
 dc 83,176
 dc 85,169
 
FORME_FIN3
 dc 85-3+2,168-2
 dc 101+3+2,168-2

 dc 101+3+2,168-2
 dc 99+3-3,175+20+3
 
 dc 99+3-3,175+20+3
 dc 83-3-2,176+20+4
 
 dc 83-3-2,176+20+4
 dc 85-3+2,168-2
 

DATAS	INCBIN	ELEMENTS.PI1

BEAT1	DS.L	1

CODE	INCBIN	TABLEREP.BIN

BEAT	INCBIN	CRI.SPL
TEST_FIN	DCB.B	256,0
	EVEN
BEAT2	INCBIN	PFOUIII.SPL
TEST_FIN2	DCB.B	256,0
	EVEN
BEAT3	INCBIN	P_BEND.SAM
TEST_FIN3	DCB.B	256,0
	EVEN
;BEAT5
BEAT4	INCBIN	SCREAM.SPL
;TEST_FIN5
TEST_FIN4	DCB.B	256,0
	EVEN
BEAT5	;INCBIN	b:\KEOPS.SPL
	INCBIN	SCREAM.SPL
	EVEN
TEST_FIN5	DCB.B	256,0
	EVEN

ZIK	INCBIN	VERMINE.MUS
	incbin	tsin7.aid
tsin	incbin	tsin7.aid
	incbin	tsin7.aid

tz	incbin	tzoom.aid

paobj	dc.l	tpoly1,tpoitesp1,-1

******************cube*********************

tpoly1	dc.w	6-1
	dc.l	face11+2,face12+2,face13+2,face14+2,face15+2,face16+2 	

face11	dc.w	0,$5488,4,0,4,8,12
face12	dc.w	0,$5888,4,16,0,12,28
face13	dc.w	0,$5c88,4,12,8,24,28
face14	dc.w	0,$5888,4,4,20,24,8
face15	dc.w	0,$5c88,4,16,20,4,0 
face16	dc.w	0,$4e71,4,28,24,20,16

tpoitesp1
	dc.w	8-1
	DC	0,0,0
	DC	5,5,3
	DC	0,-5,-3
	DC	20,8,2
	DC	20,-5,-1
	DC	-5,5,3
	DC	-20,8,2
	DC	-20,-5,-1

STUPID	;INCBIN	STUPID
 DC 0
 DC 4
 DC 9
 DC 14
 DC 19
 DC 24
 DC 29
 DC 33
 DC 38
 DC 42
 DC 47
 DC 51
 DC 55
 DC 59
 DC 63
 DC 67
 DC 70
 DC 74
 DC 77
 DC 80
 DC 83
 DC 85
 DC 88
 DC 90
 DC 92
 DC 94
 DC 95
 DC 97
 DC 98
 DC 98
 DC 99
 DC 99
 DC 100
 DC 100
 DC 99
 DC 99
 DC 98
 DC 98
 DC 97
 DC 95
 DC 94
 DC 92
 DC 90
 DC 88
 DC 86
 DC 83
 DC 81
 DC 78
 DC 75
 DC 72
 DC 68
 DC 65
 DC 61
 DC 57
 DC 53
 DC 49
 DC 45
 DC 41
 DC 37
 DC 32
 DC 28
 DC 23
 DC 18
 DC 14
 DC 9

	DC	$9999
***
EYES	INCBIN	UTILS.PI1
TABL_EYES	
N	SET	0
	REPT	13
	DC.L	EYES+34+N*160
N	SET	N+15
	ENDR
	DC.L	EYES+34+80
	DC.L	EYES+34+80+15*160
	DC.L	EYES+34+80+30*160
TABL2EYES
N	SET	0
	REPT	16-1
	DCB.B	10,N
N	SET	N+1
	ENDR
	DCB.B	100,N
	;DC.B	15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0
	DC.B	15,13,11,9,7,5,3,1
	DCB.B	100,0
	;DC.B	1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
	DC.B	1,3,5,7,9,11,13,15
	DCB.B	100,15
	DC.B	15,13,11,9,7,5,3,1
	DCB.B	25,0
	DC.B	1,3,5,7,9,11,13,15
	DCB.B	100,15
	DC.B	-1
	EVEN

***
POLY	INCBIN	RT_POLY3.BIN
	;dcb	10,$4e75
	SECTION	BSS
	BSS
BSS_DEB
BUF	DS.B	411000
	;411000................!!
t_points	ds.w	20*2	
face_en_cours	ds.l	4
SAVE_MODS	DS.W	6
PT_SEQ	DS.L	1
PT_SEQ2	DS.L	1
NB_VBL	DS.W	1
SCREEN1	DS.L	1
SCREEN2	DS.L	1
DêCAL_YEUX	DS.L	8*16
COORD	DS.B	8*NB_PASSES*NB_SEG
	DS.L	1

BUF_ANNEX	DS.B	500
TB_EFF_KEOPS	DS.L	4
TB_EFF_SEVE	DS.L	4
PT_MOUVEMENT	DS.L	1
PT_REBOND_MOI	DS.L	1
	;ADRESSE+LONGUEUR+HAUTEUR
POZ_RESULT	DS.W	3*19
KEOPS_RENSEIGN	DS.W	(2+1+1)*19
KEOPS_YEUX_RENSEIGN	DS.W	(2+1+1)*2*19
SEVE_YEUX_RENSEIGN	DS.W	(2+1+1)*2*19
BUF_CORPS_KEOPS	DS.B	25630
CODEZ	DS.B	6*4000+2
BUF_YEUX_KEOPS	DS.B	9000
BUF_YEUX_SEVE	DS.B	6486
	DS.B	256+160*80
BUFFER	DS.B	32000
	DS.B	160*80
BUFFER2	DS.B	32000
BSS_END