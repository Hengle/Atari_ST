;MODE=1 depack data from a0 to a0 
;MODE=0 depack data from a0 to a1 (RESTORE SPACE a 1 inutile! si MODE=0)
;PIC_ALGO = 0 decrunch file not encoded with special picture algorythm.
;PIC_ALGO = 1 decrunch all files with or without picture algorythm.
;DEC_SPACE = (lesser decrunch space is gived after packing by atomik v3.5)
;RESTORE_SPACE = 1 the allocated decrunch space will be restored .
;RESTORE_SPACE = 0 the allocated decrunch space will not be restored.

;MODE:	EQU	0
;PIC_ALGO:	EQU	0
;DEC_SPACE:	EQU	$0	 ;MAX IS $7FFE (no odd value!)
;RESTORE_SPACE:	EQU	0

	;A0=ADRESSE DE L'IMAGE A DECOMPACTER
	;A4=ADRESSE DE LA DEUXIEME IMAGE (EVENTUELLEMENT)
	;A5=ADRESSE DE LA COURBE DE DEPLACEMENT
	;D0=FLAG POUR LES IMAGES DOUBLES (0=IMAGE SIMPLE,-1 SINON)
	;D7=FLAG POUR L'AFFICHAGE (0=N'AFFICHE RIEN, AFFICHER SINON)
PUT_IMG_SCREEN	
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVEQ	#0,D7
	MOVE.L	D0,A2
	MOVE.L	D0,A3
	MOVE.L	D0,A4
	MOVE.L	D0,A5
	MOVE.L	D0,A6
	LEA	BUF_GFX,A1
	JSR	depack

	MOVE	#-32,MOD2+4
	MOVE	#-32,MOD2B+2
	MOVE	#-32,MOD1+4
	MOVE	#-32,MOD1B+2
	CLR.W	MODDEG1+2
	CLR.W	MODDEG2+2

TEST	TST.L	$5A0.W
	BEQ.S	.STF
	MOVE.L	#PALETTE2,MODPAL1+2
	MOVE.L	#PALETTE1,MODPAL2+2
.STF
	RTS

MK_FADE	TST	FLAG_FINI
	BEQ.S	.OK
	MOVE	#32,MOD2+4
	MOVE	#32,MOD2B+2
	MOVE	#32,MOD1+4
	MOVE	#32,MOD1B+2
.OK
	TST	FLAG
	BNE.S	RR
MODPAL1	LEA	PALETTE1,A0
MODDEG2	LEA	0(A0),A0
MOD2	CMPI	#-1,-32(A0)
	BEQ.S	NON2
	SUBI	#1,CNTFAD
	BNE.S	NON
	MOVE	#5,CNTFAD
MOD2B	ADD	#-32,MODDEG2+2
NON
NON2
	BRA.S	EE
RR
MODPAL2	LEA	PALETTE2,A0
MODDEG1	LEA	0(A0),A0
MOD1	CMPI	#-1,-32(A0)
	BEQ.S	NONB
	SUBI	#1,CNTFAD
	BNE.S	NONB
	MOVE	#5,CNTFAD
MOD1B	ADD	#-32,MODDEG1+2
NONB
EE	CMPI.B	#$3B,$FFFFFC02.W
	BNE.S	.STF
	MOVE	#1,FLAG
.STF	CMPI.B	#$3C,$FFFFFC02.W
	BNE.S	.STE
	CLR	FLAG
.STE
	RTS

FLAG	DC	0
CNTFAD	DC	5
	DCB	16,-1
PALETTE1B
	DC	$000,$001,$111,$212,$222,$323,$333,$434
	DC	$444,$545,$555,$656,$666,$767,$777,$777
	DC	$000,$000,$000,$101,$111,$212,$222,$323
	DC	$333,$434,$444,$545,$555,$656,$666,$666
	DC	$000,$000,$000,$000,$000,$101,$111,$212
	DC	$222,$323,$333,$434,$444,$545,$555,$555
	DC	$000,$000,$000,$000,$000,$000,$000,$101
	DC	$111,$212,$222,$323,$333,$434,$444,$444
	DC	$000,$000,$000,$000,$000,$000,$000,$000
	DC	$000,$101,$111,$212,$222,$323,$333,$333
	DC	$000,$000,$000,$000,$000,$000,$000,$000
	DC	$000,$000,$000,$101,$111,$212,$222,$222
	DC	$000,$000,$000,$000,$000,$000,$000,$000
	DC	$000,$000,$000,$000,$000,$101,$111,$111
PALETTE1	DCB	16,0
	DCB	16,-1

PALETTE2B	DC	$000,$888,$111,$999,$222,$AAA,$333,$BBB
	DC	$444,$CCC,$555,$DDD,$666,$EEE,$777,$FFF
	DC	$000,$000,$000,$888,$111,$999,$222,$AAA
	DC	$333,$BBB,$444,$CCC,$555,$DDD,$666,$EEE
	DC	$000,$000,$000,$000,$000,$888,$111,$999
	DC	$222,$AAA,$333,$BBB,$444,$CCC,$555,$DDD
	DC	$000,$000,$000,$000,$000,$000,$000,$888
	DC	$222,$999,$222,$AAA,$333,$BBB,$444,$CCC
	DC	$000,$000,$000,$000,$000,$000,$000,$000
	DC	$111,$888,$111,$999,$222,$AAA,$333,$BBB
	DC	$000,$000,$000,$000,$000,$000,$000,$000
	DC	$000,$000,$000,$888,$111,$999,$222,$AAA
	DC	$000,$000,$000,$000,$000,$000,$000,$000
	DC	$000,$000,$000,$000,$000,$888,$111,$999
	DC	$000,$000,$000,$000,$000,$000,$000,$000
	DC	$000,$000,$000,$000,$000,$000,$000,$888
PALETTE2	DC	$000,$000,$000,$000,$000,$000,$000,$000
	DC	$000,$000,$000,$000,$000,$000,$000,$000
	DC	-1

FLAG_FINI	DC	0
