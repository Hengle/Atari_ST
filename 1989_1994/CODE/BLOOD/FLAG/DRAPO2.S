PAS_X = 3
PAS_Y = 3
LONG_X = 80*PAS_X
LONG_Y = 56*PAS_Y

MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP

	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W

	LEA	ZIK,A0
	LEA	RET,A1
	JMP	DEBUT
ZIK	RTS
RET	BRA.S	RET
DEBUT	
	MOVE.L	#FIN,$008.W
	MOVE.L	#FIN,$00C.W
	MOVE.L	#FIN,$010.W
	MOVE.L	#FIN,$014.W
	MOVE.L	#FIN,$018.W
	MOVE.L	#FIN,$01C.W
	MOVE.L	A0,MODZIK
;	MOVE.L	A1,MODRET

	LEA	DEB_BSS,A0
	LEA	END_BSS,A1
.KILL_IT	CLR.L	(A0)+
	CLR.L	(A0)+
	CLR.L	(A0)+
	CLR.L	(A0)+
	CMP.L	A1,A0
	BLE.S	.KILL_IT

	CLR.W	C
	SF	FLAG_START
	BSR	PREPARE_DRAPO
	
	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000,D0
	MOVE.L	D0,SCREEN2

	MOVE.L	#VBL_DRAPO,$70.W

BOUCLE	BRA.S	BOUCLE
RT_ZIK
	MOVEM.L	D0-A6,-(SP)
MODZIK	EQU	*+2
	JSR	$12345678
	MOVEM.L	(SP)+,D0-A6
	RTS
FAD_DRAPO
	DC	$777,$777,$777,$777
	DC	$666,$667,$777,$766
	DC	$555,$557,$777,$755
	DC	$444,$447,$777,$744
	DC	$333,$337,$777,$733
	DC	$222,$227,$777,$722
	DC	$111,$117,$777,$711
	DC	$000,$007,$777,$700
	DC	$1234
CNT_D	DC	3
VBL_DRAPO
	MOVEM.L	D0-A6,-(SP)
	LEA	FAD_DRAPO,A0
MODFAD	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$1234,2*4(A0)
	BEQ.S	.OK
	SUBQ	#1,CNT_D
	BNE.S	.OK
	MOVE	#3,CNT_D
	ADDQ	#8,MODFAD
.OK	MOVEM.W	(A0),D0-D3
	MOVE	D0,$FFFF8240.W
	MOVE	D1,$FFFF8242.W
	MOVE	D2,$FFFF8244.W
	MOVE	D3,$FFFF8248.W
	MOVE	D2,$FFFF8250.W

	TST.B	FLAG_START
	BNE.S	.FAIT
	ADDQ.W	#1,C
	CMPI.W	#2,C
	BLT.S	.RETOUR_DRAPO_EFF
	ST	FLAG_START
	BRA.S	.RETOUR_DRAPO_EFF

.FAIT	MOVEQ	#0,D1
	LEA	.RETOUR_DRAPO_EFF(PC),A5
	LEA	TABLE_ADR_DRAPO_MOVE,A3
	MOVE.L	ADR_EFF_DRAPO,A2
	MOVE.L	SCREEN2,A1
	LEA	24+160*25(A1),A1
	JMP	RT_DRAPO
.RETOUR_DRAPO_EFF

	LEA	SINUS_X,A2
	ADDA.W	PT_X,A2
	ADDQ.W	#4,PT_X
	CMPA.L	#FIN_SINUS_X,A2
	BLT.S	.OK1
	MOVE.W	#4,PT_X
.OK1	LEA	SINUS_Y,A3
	ADDA.W	PT_Y,A3
	ADDQ.W	#2,PT_Y
	CMPA.L	#FIN_SINUS_Y,A3
	BLT.S	.OK2
	MOVE.W	#2,PT_Y
.OK2	MOVE.L	ADR_EFF_DRAPO,A1
	MOVEQ	#0,D0
	MOVEQ	#4*16,D3
	MOVE.W	#135-1,D7
.PREP	MOVE.W	(A3)+,D2	;(SIN Y)*160
	ADD.W	(A2)+,D2	;(SIN X AND -16)/2
	MOVE.W	(A2)+,D1	;(X AND 15)*4
	MOVE.W	D2,(A1)+	;OFFSET_ECRAN
	ADD.W	D0,D1
	MOVE.W	D1,(A1)+	;(X AND 15)*4+No DE LA DIAG*4*16
	ADD.W	D3,D0
	DBRA	D7,.PREP

	MOVEQ	#$40,D1
	MOVEQ	#$20,D2
	MOVEQ	#$10,D3
	MOVEQ	#8,D4
	MOVEQ	#4,D5
	MOVEQ	#2,D6
	MOVEQ	#1,D7
	LEA	.RETOUR_DRAPO(PC),A5
	LEA	TABLE_ADR_DRAPO,A3
	MOVE.L	ADR_EFF_DRAPO,A2
	MOVE.L	SCREEN2,A1
	LEA	24+160*25(A1),A1
	JMP	RT_DRAPO
.RETOUR_DRAPO
	BSR	SWAPEC

	LEA	ADR_EFF_DRAPO,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0),-(A0)
	MOVE.L	D0,4(A0)
	JSR	RT_ZIK
	MOVEM.L	(SP)+,D0-A6
	RTE

FIN	MOVE.L	4.W,A0
	JMP	(A0)

SWAPEC	LEA	SCREEN1,A0
	MOVE.L	(A0)+,D0
	MOVE.L	(A0),-(A0)
	MOVE.L	D0,4(A0)
	MOVE.B	1(A0),$FFFF8201.W
	MOVE.B	2(A0),$FFFF8203.W
	RTS

PREPARE_DRAPO	LEA	BUF_COD_DRAPO,A6
	LEA	BUF_COD_DRAPO_MOVE,A5
	LEA	TABLE_ADR_DRAPO,A3
	LEA	TABLE_ADR_DRAPO_MOVE,A4
	MOVEQ	#0,D0	;X
	MOVEQ	#0,D1	;Y
	MOVEQ	#0,D6	;LIM_Y=0

.NEXT_DIAGO	MOVE.W	D0,D2
	MOVE.W	D1,D3

	LEA	BUF_DIAG,A0
	MOVEQ	#0,D5	;COMPTEUR DE POINT POUR LA DIAG ACTUELLE
.NEXT_PT	MOVE.W	D2,(A0)+	;X
	MOVE.W	D3,D4
;	MULS.W	#160,D4
	MOVE.W	D4,(A0)+	;Y*160
	ADDQ.W	#1,D5	;UN POINT DE PLUS
	ADDQ.W	#PAS_X,D2
	SUBQ.W	#PAS_Y,D3
	CMP.W	D6,D3
	BGE.S	.NEXT_PT
	;ON ANALYSE LA DIAGONALE
	BSR	ANALYSE

	ADDQ.W	#PAS_Y,D1
	CMPI.W	#LONG_Y,D1
	BNE.S	.OK_COOL
	SUBQ.W	#PAS_Y,D1
	ADDQ.W	#PAS_X,D0
	CMPI.W	#(LONG_X/PAS_X-LONG_Y/PAS_Y)*PAS_X,D0
	BLT.S	.OK_COOL
	ADDQ.W	#PAS_Y,D6	;D6=LIM_Y
	CMPI.W	#LONG_Y,D6
	BEQ.S	.FINI_DEB
.OK_COOL	BRA.S	.NEXT_DIAGO
.FINI_DEB
	CLR.W	PT_X
	CLR.W	PT_Y
	LEA	SINUS_Y,A0
.GO_Y	MOVE.W	(A0),D0
	MULS.W	#160,D0
	MOVE.W	D0,(A0)+
	CMPA.L	#FIN_SINUS_Y,A0
	BLT.S	.GO_Y

	LEA	SINUS_X,A0
	LEA	FIN_SINUS_X,A1
	MOVE.W	#400-1,D7
.COPY_SIN_X	MOVE.W	(A0)+,(A1)+
	DBRA	D7,.COPY_SIN_X

	LEA	SINUS_Y,A0
	LEA	FIN_SINUS_Y,A1
	MOVE.W	#200-1,D7
.COPY_SIN_Y	MOVE.W	(A0)+,(A1)+
	DBRA	D7,.COPY_SIN_Y

	LEA	ADR_EFF_DRAPO,A0
	LEA	BUF_TEMP_DRAPO,A1
	LEA	2*135*2(A1),A2
	MOVE.L	A1,(A0)+
	MOVE.L	A2,(A0)
	RTS

	;D5=NB D'ELEMENTS
ANALYSE	SF	FLAG_LAST
	CMPI.W	#1,D5
	BNE.S	.PAS_LAST
	TST.W	D0
	BEQ.S	.PAS_LAST
	ST	FLAG_LAST
.PAS_LAST	MOVE.W	D6,-(SP)

	LEA	BUF_DIAG,A0
	LEA	GRAF(PC),A2
	MOVE.W	D5,D7
	SUBQ.W	#1,D7
.MAKE_PLANES	MOVE.W	(A0)+,D2	;X
	MOVE.W	(A0),D3	;Y
	DIVU.W	#PAS_Y,D3
	MULU.W	#LONG_X/PAS_X,D3
	DIVU.W	#PAS_X,D2
	ADD.W	D2,D3
	MOVEQ	#0,D2
	MOVE.B	(A2,D3.W),D2	;COULEUR
	ADD.W	D2,D2
	MOVE.W	(A0),D3
	MULS.W	#160,D3
	ADD.W	D2,D3
	MOVE.W	D3,(A0)+	;Y*160+PLANES
	DBRA	D7,.MAKE_PLANES

	CLR.W	ADDIT_X
	LEA	CORES_X,A2
	LEA	CORES_X2,A1
	SUBQ.W	#1,D5
	MOVEQ	#16-1,D6
.ALL_DECS	MOVE.L	A6,(A3)+
	MOVE.L	A5,(A4)+
	MOVE.W	D5,D7
	LEA	BUF_DIAG,A0
.CODE_DIAG	MOVE.W	(A0)+,D2	;X
	MOVE.W	(A0)+,D3	;Y*160+PLANE
ADDIT_X = *+2
	ADDI.W	#$1234,D2	;+INCREMENT
	ADD.W	D2,D2	;ON PEUT EVITER...
	ADD.W	D2,D2	;EN LE PREPARANT PLUS HAUT!
	ADD.W	(A2,D2.W),D3	;D3=OFFSET ECRAN

	MOVE.W	2(A2,D2.W),(A6)+  ;CODE DU OR.B Dn,$1234(A0)
	MOVE.W	D3,(A6)+	;POSE DE L'OFFSET
	MOVE.W	2(A1,D2.W),(A5)+ ;CODE DU MOVE.B Dn,$1234(A0)
	MOVE.W	D3,(A5)+	;POSE DE L'OFFSET
	DBRA	D7,.CODE_DIAG
	TST.B	FLAG_LAST
	BNE.S	.LAST
	BSR	RECOP_RT_DRAPO
	BRA.S	.HAHA
.LAST	BSR	RECOP_RT_DRAPO2
.HAHA	ADDQ.W	#1,ADDIT_X
	DBRA	D6,.ALL_DECS
	MOVE.W	(SP)+,D6
	RTS

FLAG_LAST	DC.B	0
FLAG_START	DC.B	0

	;OR.B Dn,D16(A0) : $8128+n*$200 puis $1234
	;MOVE.B Dn,D16(A0) : $1140+n puis $1234

RECOP_RT_DRAPO	MOVE.L	A4,-(SP)
	LEA	RT_DRAPO(PC),A4
	MOVE.W	#LONG_ROUT_DRAPO,D2
.COPY_RT_DRAPO	MOVE.W	(A4)+,(A6)+
	DBRA	D2,.COPY_RT_DRAPO
P
	LEA	RT_DRAPO_MOVE(PC),A4
	MOVE.W	#LONG_ROUT_DRAPO_MOVE,D2
.COPY_RT_DRAPO	MOVE.W	(A4)+,(A5)+
	DBRA	D2,.COPY_RT_DRAPO
	MOVE.L	(SP)+,A4
	RTS

RECOP_RT_DRAPO2	MOVE.L	A4,-(SP)

	LEA	RT_DRAPO2(PC),A4
	MOVE.W	#LONG_ROUT_DRAPO,D2
.COPY_RT_DRAPO	MOVE.W	(A4)+,(A6)+
	DBRA	D2,.COPY_RT_DRAPO
Q
	LEA	RT_DRAPO2_MOVE(PC),A4
	MOVE.W	#LONG_ROUT_DRAPO_MOVE,D2
.COPY_RT_DRAPO	MOVE.W	(A4)+,(A5)+
	DBRA	D2,.COPY_RT_DRAPO

	MOVE.L	(SP)+,A4
	RTS

N	SET	0
CORES_X	REPT	20
	DC.W	N,$8128,N,$8328,N,$8528,N,$8728,N,$8928,N,$8B28,N,$8D28,N,$8F28
N	SET	N+1
	DC.W	N,$8128,N,$8328,N,$8528,N,$8728,N,$8928,N,$8B28,N,$8D28,N,$8F28
N	SET	N+7
	ENDR

N	SET	0
CORES_X2	REPT	20
	DC.W	N,$1141,N,$1141,N,$1141,N,$1141,N,$1141,N,$1141,N,$1141,N,$1141
N	SET	N+1
	DC.W	N,$1141,N,$1141,N,$1141,N,$1141,N,$1141,N,$1141,N,$1141,N,$1141
N	SET	N+7
	ENDR

	;A1=ADRESSE ECRAN (SAUVEGARDE)
	;A2=ADRESSE DE LA COURBE (OFFSET ECRAN, (X AND 15)*4)
	;A3=TABLE_ADR_DRAPO
RT_DRAPO	MOVE.L	A1,A0	;A0=ADRESSE ECRAN (1)
	ADDA.W	(A2)+,A0	;+OFFSET ECRAN (3)
	MOVE.W	(A2)+,D0	;D0=(X AND 15)*4+No DE LA DIAG.*4*16 (2)
	MOVE.L	(A3,D0.W),A4	;A4=ADRESSE DE LA ROUTINE (5)
	MOVEQ	#$80,D0	;MOTIF... (1)
	JMP	(A4)	;SAUT (2)
	;TOTAL=14 NOPS PAR DIAGONALE
LONG_ROUT_DRAPO = ((*-RT_DRAPO)/2)-1

RT_DRAPO_MOVE	MOVE.L	A1,A0	;A0=ADRESSE ECRAN (1)
	ADDA.W	(A2)+,A0	;+OFFSET ECRAN (3)
	MOVE.W	(A2)+,D0	;D0=(X AND 15)*4+No DE LA DIAG.*4*16 (2)
	MOVE.L	(A3,D0.W),A4	;A4=ADRESSE DE LA ROUTINE (5)
	JMP	(A4)	;SAUT (2)
	;TOTAL=14 NOPS PAR DIAGONALE
LONG_ROUT_DRAPO_MOVE = ((*-RT_DRAPO_MOVE)/2)-1

RT_DRAPO2	;MOVE.L	A1,A0	;A0=ADRESSE ECRAN (1)
	;ADDA.W	(A2)+,A0	;+OFFSET ECRAN (3)
	;MOVE.W	(A2)+,D0	;D0=(X AND 15)*4+No DE LA DIAG.*4*16 (2)
	;MOVE.L	(A3,D0.W),A4	;A4=ADRESSE DE LA ROUTINE (5)
	;MOVEQ	#$80,D0	;MOTIF... (1)
	JMP	(A5)	;SAUT VERS LA FIN (2)
	;TOTAL=14 NOPS PAR DIAGONALE

RT_DRAPO2_MOVE	;MOVE.L	A1,A0	;A0=ADRESSE ECRAN (1)
	;ADDA.W	(A2)+,A0	;+OFFSET ECRAN (3)
	;MOVE.W	(A2)+,D0	;D0=(X AND 15)*4+No DE LA DIAG.*4*16 (2)
	;MOVE.L	(A3,D0.W),A4	;A4=ADRESSE DE LA ROUTINE (5)
	JMP	(A5)	;SAUT (2)
	;TOTAL=14 NOPS PAR DIAGONALE


SINUS_X	INCBIN	SIN_X.SIN
FIN_SINUS_X	DCB.W	400,0

SINUS_Y	INCBIN	SIN_Y.SIN
FIN_SINUS_Y	DCB.W	200,0

GRAF	INCBIN	DRAPO_1.GFX

	SECTION	BSS
DEB_BSS
	DS.B	256
BUFFER	DS.B	64000
SCREEN1	DS.L	1
SCREEN2	DS.L	1
;BSS DU DRAPO
C	DS.W	1
ADR_EFF_DRAPO	DS.L	2
PT_X	DS.W	1
PT_Y	DS.W	1
BUF_DIAG	DS.W	2*LONG_Y/PAS_Y
BUF_TEMP_DRAPO	DS.W	2*135*2
TABLE_ADR_DRAPO	DS.L	16*135
TABLE_ADR_DRAPO_MOVE
	DS.L	16*135
BUF_COD_DRAPO	DS.B	314000
BUF_COD_DRAPO_MOVE
	DS.B	309000
END_BSS