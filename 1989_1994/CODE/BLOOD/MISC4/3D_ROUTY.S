NB_PTS_=8

X1	EQU	0
X2	EQU	4
X3	EQU	8
X4	EQU	12
X5	EQU	16
X6	EQU	20
X7	EQU	24
X8	EQU	28

MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP

	MOVEQ	#1,D0
	JSR	ZIK

	MOVE.L	#BUFFER,D0
	CLR.W	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000,D0
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W

	BSR	PREPA_LOG_EXP
	JSR	INIT_ROUT_POLY

	CLR.W	Z_BASE

	LEA	POINTS+2,A0
	MOVE.W	#NB_PTS_-1,D7
.MULTI	REPT	3
	MOVE.W	(A0),D0
	ADD.W	D0,D0
	MOVE.W	D0,(A0)+
	ENDR
	DBRA	D7,.MULTI

	LEA	SINUS,A0
	LEA	SINUS+LONG_SINUS,A1
	MOVE.W	#(LONG_SINUS/8)-1,D7
.RECOPY	MOVE.W	(A0)+,(A1)+
	DBRA	D7,.RECOPY

	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVE.L	#VBLR,$70.W
	CLR.W	NB_VBL
	MOVE.W	#$2300,SR

IT_VBL	BSR	VSYNC
	JSR	ZIK+8
	SF	$FFFF8240.W

	LEA	POINTS,A0	Pts du cube
	LEA	ANGLES,A1
	LEA	TRANS,A6
	LEA	BUF_PTS,A2
	BSR	ROTATE

	BSR	EFFAC

	BSR	AFFICH

	BSR	SWAPEC

	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NO_TIME
	ST	$FFFF8240.W
.NO_TIME	MOVE.B	$FFFFFC02.W,D7
	LEA	ANGLES,A0
	MOVE.W	(A0),D0
	CMPI.B	#$1,D7
	BNE.S	.NO_F1
	ADDQ.W	#2,D0
.NO_F1
	CMPI.B	#$2,D7
	BNE.S	.NO_F2
	SUBQ.W	#2,D0
.NO_F2
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+
	MOVE.W	(A0),D0
	CMPI.B	#$3,D7
	BNE.S	.NO_F3
	ADDQ.W	#2,D0
.NO_F3
	CMPI.B	#$4,D7
	BNE.S	.NO_F4
	SUBQ.W	#2,D0
.NO_F4
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+
	MOVE.W	(A0),D0
	CMPI.B	#$5,D7
	BNE.S	.NO_F5
	ADDQ.W	#2,D0
.NO_F5
	CMPI.B	#$6,D7
	BNE.S	.NO_F6
	SUBQ.W	#2,D0
.NO_F6
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+

	CMPI.B	#7,D7
	BNE.S	.NO7
	ADDQ.W	#1,Z_BASE
.NO7
	CMPI.B	#8,D7
	BNE.S	.NO8
	SUBQ.W	#1,Z_BASE
.NO8
	BRA	IT_VBL

VSYNC	CMPI.W	#1,NB_VBL
	BLT.S	VSYNC
	CLR.W	NB_VBL
	RTS

VBLR	ADDQ.W	#1,NB_VBL
	RTE

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

EFFAC	MOVE.L	SCREEN2,A0
	MOVEQ	#0,D0
	MOVE.W	#200-1,D7
.ALL
N	SET	0
	REPT	20
	MOVE.W	D0,N(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBRA	D7,.ALL
	RTS

AFFICH	LEA	BUF_PTS,A0
	JSR	PROJETTE
	
	lea	COORD,a0
	lea	face_en_cours+2,a1
	move.l	X1(a0),(a1)+
	move.l	X2(a0),(a1)+
	move.l	X3(a0),(a1)+
	move.l	X4(a0),(a1)+
	lea	face_en_cours,a0
	JSR	RT_POLY

	lea	COORD,a0
	lea	face_en_cours+2,a1
	move.l	X5(a0),(a1)+
	move.l	X6(a0),(a1)+
	move.l	X7(a0),(a1)+
	move.l	X8(a0),(a1)+
	lea	face_en_cours,a0
	JSR	RT_POLY

	RTS
face_en_cours	dC.w	4
	ds.l	4

PROJETTE	LEA	CORES_X,A2
	MOVE.L	SCREEN2,A3
	LEA	COEFF+380*2,A1
	LEA	COORD,A5
	MOVE.W	#NB_PTS_-1,D7
.AFF_ALL	MOVE.W	(A0)+,D0
	MOVE.W	(A0)+,D1
	MOVE.W	(A0)+,D2
	ADD.W	Z_BASE,D2
	ADD.W	D2,D2
	MOVE.W	(A1,D2.W),D2
	MULS.W	D2,D0
	ASR.L	#8,D0
	MULS.W	D2,D1
	ASR.L	#8,D1
	ADDI.W	#160,D0
	ADDI.W	#100,D1
	MOVE	D0,(A5)+
	MOVE	D1,(A5)+
	;MULS.W	#160,D1
	;ADD.W	D0,D0
	;ADD.W	D0,D0
	;ADD.W	2(A2,D0.W),D1
	;MOVE.W	(A2,D0.W),D0
	;OR.W	D0,(A3,D1.W)
	DBRA	D7,.AFF_ALL
	RTS

COORD	DCB	2*NB_PTS_,0

;ENTRêES : A0=TABLE DE POINTS ( .W:NB DE POINTS, ET LES POINTS)
;          A1=TABLE D'ANGLE ( ANGLE X, ANGLE Y, ANGLE Z)
;          A6=TABLE DE TRANSLATION ( U_X, U_Y, U_Z)
;          A2=TABLE DE DESTINATION POUR LES POINTS

;Formules de rotation 3 axes:
;X'=X[SIN(T)SIN(U)SIN(V)+COS(T)COS(V)]+Y[COS(T)SIN(U)SIN(V)-SIN(T)COS(V)]+Z[COS(U)SIN(V)]
;Y'=X[SIN(T)COS(U)]+Y[COS(T)COS(U)]-ZSIN(U)
;Z'=X[SIN(T)SIN(U)COS(V)-COS(T)SIN(V)]+Y[COS(T)SIN(U)COS(V)+SIN(T)SIN(V)]+Z[COS(U)COS(V)]

ROTATE	LEA	SINUS(PC),A4	;SINUS
	LEA	LONG_SINUS/4(A4),A3	;COSINUS

	MOVE.W	(A1)+,D0	;ANGLE_X
	ADD.W	D0,D0
	MOVE.W	(A3,D0.W),D1	;COSINUS TETA_X
	MOVE.W	(A4,D0.W),D0	;SINUS TETA_X

	MOVE.W	(A1)+,D2	;ANGLE_Y
	ADD.W	D2,D2
	MOVE.W	(A3,D2.W),D3	;COSINUS TETA_Y
	MOVE.W	(A4,D2.W),D2	;SINUS TETA_Y

	MOVE.W	(A1)+,D4	;ANGLE_Z
	ADD.W	D4,D4
	MOVE.W	(A3,D4.W),D5	;COSINUS TETA_Z
	MOVE.W	(A4,D4.W),D4	;SINUS TETA_Z

	LEA	MATRICE,A4
	LEA	LOGARITHMES+512*2(PC),A3
	;ON FABRIQUE SIN(T)*SIN(U)*SIN(V)+COS(T)*COS(V)
	MOVE.W	D0,D6	;D6=SIN(T)
	MULS.W	D2,D6	;D6=SIN(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D4,D6	;D6=SIN(T)*SIN(U)*SIN(V)
	MOVE.W	D1,D7	;D7=COS(T)
	MULS.W	D5,D7	;D7=COS(T)*COS(V)
	ADD.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(T)*SIN(U)*SIN(V)-SIN(T)*COS(V)
	MOVE.W	D1,D6	;D6=COS(T)
	MULS.W	D2,D6	;D6=COS(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D4,D6	;D6=COS(T)*SIN(U)*SIN(V)
	MOVE.W	D0,D7	;D7=SIN(T)
	MULS.W	D5,D7	;D7=SIN(T)*COS(V)
	SUB.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(U)*SIN(V)
	MOVE.W	D3,D6	;D6=COS(U)
	MULS.W	D4,D6	;D6=COS(U)*SIN(V)
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE SIN(T)*COS(U)
	MOVE.W	D0,D6	;D6=SIN(T)
	MULS.W	D3,D6	;D6=SIN(T)*COS(U)
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(T)*COS(U)
	MOVE.W	D1,D6	;D6=COS(T)
	MULS.W	D3,D6	;D6=COS(T)*COS(U)
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE -SIN(U)
	MOVE.W	D2,D6
	NEG.W	D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE SIN(T)*SIN(U)*COS(V)-COS(T)*SIN(V)
	MOVE.W	D0,D6	;D6=SIN(T)
	MULS.W	D2,D6	;D6=SIN(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D5,D6	;D6=SIN(T)*SIN(U)*COS(V)
	MOVE.W	D1,D7	;D7=COS(T)
	MULS.W	D4,D7	;D7=COS(T)*SIN(V)
	SUB.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(T)*SIN(U)*COS(V)+SIN(T)*SIN(V)
	MOVE.W	D1,D6	;D6=COS(T)
	MULS.W	D2,D6	;D6=COS(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D5,D6	;D6=COS(T)*SIN(U)*COS(V)
	MOVE.W	D0,D7	;D7=SIN(T)
	MULS.W	D4,D7	;D7=SIN(T)*SIN(V)
	ADD.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(U)*COS(V)
	MULS.W	D3,D5	;D5=COS(U)*COS(V)
	ASR.L	#8,D5
	ADD.W	D5,D5
	MOVE.W	(A3,D5.W),(A4)+

	MOVE.W	(A6)+,D0
	ADD.W	D0,D0	;U_X*2
	MOVE.W	D0,TRANSLATE_X
	MOVE.W	(A6)+,D0
	ADD.W	D0,D0	;U_Y*2
	MOVE.W	D0,TRANSLATE_Y
	MOVE.W	(A6),D0
	ADD.W	D0,D0	;U_Z*2
	MOVE.W	D0,TRANSLATE_Z

	MOVE.W	(A0)+,D7	;D7=NB DE POINTS
	SUBQ.W	#1,D7
	MOVE.L	#MATRICE,D6
	LEA	BUF_EXP,A5

ROTATE_ALL	MOVE.L	D6,A4
	MOVE.W	(A0)+,D0	;X*2
TRANSLATE_X = *+2
	ADDI.W	#$1234,D0
	MOVE.W	(A0)+,D1	;Y*2
TRANSLATE_Y = *+2
	ADDI.W	#$1234,D2
	MOVE.W	(A0)+,D2	;Z*2
TRANSLATE_Z = *+2
	ADDI.W	#$1234,D2

	REPT	3
	MOVE.W	(A3,D0.W),D3	;LOG(X)
	ADD.W	(A4)+,D3	;LOG(X)+LOG(COEFF)
	MOVE.W	(A5,D3.W),D3	;D3=X*COEFF
	MOVE.W	(A3,D1.W),D4	;LOG(Y)
	ADD.W	(A4)+,D4	;LOG(Y)+LOG(COEFF)
	MOVE.W	(A5,D4.W),D4	;D4=Y*COEFF
	MOVE.W	(A3,D2.W),D5	;LOG(Z)
	ADD.W	(A4)+,D5	;LOG(Z)+LOG(COEFF)
	MOVE.W	(A5,D5.W),D5	;D5=Z*COEFF
	ADD.W	D4,D3
	ADD.W	D5,D3
	MOVE.W	D3,(A2)+
	ENDR

	DBRA	D7,ROTATE_ALL
	RTS

PREPA_LOG_EXP	;ON ARRANGE LA PARTIE NEGATIVE DE LA TABLE DES LOG.
	LEA	LOGARITHMES(PC),A0
	MOVE.W	#512-1,D7
LOG_NEGATIFS	MOVE.W	(A0),D0
	ADD.W	D0,D0
	ADDI.W	#LONG_EXP/2,D0
	MOVE.W	D0,(A0)+
	DBRA	D7,LOG_NEGATIFS
	MOVE.W	#LONG_EXP/2,D7
	MULU.W	#3,D7
	MOVE.W	D7,(A0)+	;D7=LONG_EXP*3 (ZERO)
	MOVE.W	#512-1,D7
LOG_POSITIFS	MOVE.W	(A0),D0
	ADD.W	D0,D0
	MOVE.W	D0,(A0)+	;LOG*2
	DBRA	D7,LOG_POSITIFS

;ON CREE LA PARTIE NEGATIVE ET LA 2EME PARTIE POSITIVE DES EXPONENTIELLES.
	LEA	EXPONENTIELLES(PC),A0
	LEA	BUF_EXP,A1
	LEA	LONG_EXP/2(A1),A2
	LEA	LONG_EXP/2(A2),A3
	MOVE.W	#LONG_EXP/4-1,D7
MAKE_EXP	MOVEQ	#0,D0
	MOVE.L	(A0)+,D0
	LSR.L	#8,D0	;VALEUR REELLE DU RESULTAT
	MOVE.W	D0,(A1)+
	MOVE.W	D0,(A3)+
	NEG.W	D0
	MOVE.W	D0,(A2)+
	DBRA	D7,MAKE_EXP

;ON CREE LES 2 TABLES DE ZERO LONGUES CHACUNES DE LONG_EXP.
	LEA	BUF_EXP+(LONG_EXP/2)*3,A0
	MOVE.W	#(LONG_EXP/4)*2-1,D7
MAKE_ZERO_TABLE	CLR.W	(A0)+
	DBRA	D7,MAKE_ZERO_TABLE
	RTS

POINTS
	DC	8
N	SET	150	       /\
	DC	-N,N,N	|       |
	DC	-N,-N,N	|       |
	DC	N,-N,N	|       |
	DC	N,N,N	---------

	DC	N,N,-N
	DC	N,-N,-N
	DC	-N,-N,-N
	DC	-N,N,-N

	;DC.W	225
	;INCBIN	PLAK.PTS

ANGLES	DC.W	980,45,63
TRANS	DC.W	0,0,0
ZIK	INCBIN	ANCOOL.ZIK
SINUS	INCBIN	SINUSROT.DAT
LONG_SINUS = *-SINUS
	DCB.W	LONG_SINUS/4,0

LOGARITHMES	INCBIN	LOG512.LOG

EXPONENTIELLES	INCBIN	EXP512.EXP
LONG_EXP = *-EXPONENTIELLES

COEFF	INCBIN	COEFF2.3D

	DCB.W	500,0
N	SET	0
CORES_X	REPT	20
	DC.W	32768,N,16384,N,8192,N,4096,N,2048,N,1024,N,512,N,256,N,128,N,64,N,32,N,16,N,8,N,4,N,2,N,1,N
N	SET	N+8
	ENDR
	DCB.W	500,0

*** Partie affichage

INIT_ROUT_POLY	LEA	BUF_COD_GEN,A0
	LEA	TABLE_ADR_COD,A1

	MOVE.L	#RETOUR_POLY,(A1)+
	MOVEQ	#9-1,D3
.GO	MOVE.L	#RT_COOL,(A1)+
	DBRA	D3,.GO

	MOVE.W	#$FFFF,D0	;1ER MOTIF
	MOVE.W	#$8000,D1	;DERNIER MOTIF
	MOVEQ	#0,D3	;DECALAGE

	MOVEQ	#16-1,D6
.DECAL	
	MOVEQ	#16+1,D5
	ADD.W	#18*16,D5	;D5=LONGUEUR DE LA LIGNE
	ADD.W	D3,D5

	MOVE.W	#-144,D4
	MOVEQ	#18-1,D7
.COPY_MOVED7	BSR	POZ_ADRESSE
	MOVE.W	#$3B47,(A0)+	;MOVE.W D7,d16(A5)
	MOVE.W	D4,(A0)+
	ADDQ.W	#8,D4
	SUBI.W	#16,D5
	DBRA	D7,.COPY_MOVED7

	MOVE.W	#16+1,D5
	ADD.W	D3,D5
	BSR	POZ_ADRESSE
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_1
	MOVE.W	#$3887,(A0)+	;MOVE.W D7,(A4)
	BRA.S	.RETOUR_1
.PAS_D7_1	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	MOVE.W	D0,(A0)+
.RETOUR_1	MOVE.W	#1,D5
	ADD.W	D3,D5
	BSR	POZ_ADRESSE
	CMPI.W	#-1,D1
	BNE.S	.PAS_D7_2
	MOVE.W	#$3A87,(A0)+	;MOVE.W D7,(A5)
	BRA.S	.RETOUR_2
.PAS_D7_2	MOVE.W	#$3ABC,(A0)+	;MOVE.W #$Imm,(A5)
	MOVE.W	D1,(A0)+
.RETOUR_2
	BSR	COPY_RT_COOL

	ASR.W	#1,D1
	ADDQ.W	#1,D3	;LONGUEUR SUIVANT
	DBRA	D6,.DECAL

	LEA	TABLE_ADR_COD+1320,A1

	MOVE.W	#$7FFF,D3	;1ER MOTIF
	MOVEQ	#14,D5

	MOVEQ	#14,D2
ALL_RT	
	MOVE.L	#RETOUR_POLY,(A1)+
	MOVEQ	#9-1,D0
.GO	MOVE.L	#RT_COOL,(A1)+
	DBRA	D0,.GO

	MOVE.W	#1,A3

	MOVEQ	#0,D0
	MOVE.W	D5,D6
LITTLE	BSR	POZ_ADRESSE2
	BSET	D6,D0
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_LITTLE
	MOVE.W	#$3887,(A0)+
	BRA.S	.RETOUR_LITTLE
.PAS_D7_LITTLE	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	MOVE.W	D0,(A0)+
.RETOUR_LITTLE
	BSR	COPY_RT_COOL

	ADDQ.W	#1,A3
	DBRA	D6,LITTLE

	MOVE.W	D3,D0
	MOVE.W	#$8000,D1	;DERNIER MOTIF

	MOVEQ	#16-1,D6
DECAL
	MOVE.W	#18*16,A3
	ADD.W	D5,A3
	ADDQ.W	#1,A3
	MOVEQ	#16,D4
	SUB.W	D6,D4
	ADDA.W	D4,A3

	MOVE.W	#-144,D4
	MOVEQ	#18-1,D7
COPY_MOVED7	BSR	POZ_ADRESSE2
	MOVE.W	#$3B47,(A0)+	;MOVE.W D7,d16(A5)
	MOVE.W	D4,(A0)+
	ADDQ.W	#8,D4
	LEA	-16(A3),A3
	DBRA	D7,COPY_MOVED7

	MOVE.W	D5,A3
	ADDQ.W	#1,A3
	MOVEQ	#16,D4
	SUB.W	D6,D4
	ADDA.W	D4,A3
	BSR	POZ_ADRESSE2
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_3
	MOVE.W	#$3887,(A0)+	;MOVE.W D7,(A4)
	BRA.S	.RETOUR_3
.PAS_D7_3	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	MOVE.W	D0,(A0)+
.RETOUR_3	CMPI.W	#-1,D1
	BNE.S	.PAS_D7_4
	MOVE.W	#$3A87,(A0)+	;MOVE.W D7,(A5)
	BRA.S	.RETOUR_4
.PAS_D7_4	MOVE.W	#$3ABC,(A0)+	;MOVE.W #$Imm,(A5)
	MOVE.W	D1,(A0)+
.RETOUR_4
	BSR	COPY_RT_COOL

	ASR.W	#1,D1
	DBRA	D6,DECAL

	SUBQ.W	#1,D5
	LSR.W	#1,D3
	LEA	1280(A1),A1
	DBRA	D2,ALL_RT

*******
TBL4:	LEA	TABLE_A4,A0
	MOVE	#319,D7
.DEBT	CLR.L	(A0)+
	DBF	D7,.DEBT

	LEA	MINI_TABLE,A1
	MOVEQ	#0,D6	D6=X
	MOVEQ	#20-1,D7
.F	MOVEQ	#16-1,D0
.SXTEEN	MOVE	D6,(A0)+
	MOVE	(A1),(A0)+
	ADDQ	#4,D6
	DBF	D0,.SXTEEN
	ADDQ	#2,A1
	DBF	D7,.F

	MOVE	#319,D7
.FINT	MOVE	#319*4,(A0)+
	MOVE	#152,(A0)+
	;CLR	(A0)+
	DBF	D7,.FINT
TBL2:
	LEA	TABLE_A2,A0
	MOVE	#319,D7
.DEBT	CLR.L	(A0)+
	DBF	D7,.DEBT

	LEA	MINI_TABLE,A1
	MOVEQ	#0,D6	D6=X
	MOVEQ	#20-1,D7
.F	MOVEQ	#16-1,D0
.SXTEEN	MOVE	(A1),(A0)+
	MOVE	D6,(A0)
	MOVE	D6,D5
	LSR	#2,D5
	AND	#15,D5
	MULU	#1320,D5
	SUB	D5,(A0)+
	ADDQ	#4,D6
	DBF	D0,.SXTEEN
	ADDQ	#2,A1
	DBF	D7,.F

	MOVE	#319,D7
.FINT	;CLR	(A0)+
	MOVE	#152,(A0)+
	MOVE	#319*4,(A0)+
	DBF	D7,.FINT

	RTS

MINI_TABLE
N	SET	0
	REPT	20
	DC	N
N	SET	N+8
	ENDR


POZ_ADRESSE2	MOVEM.L	D5/A0,-(SP)
	MOVE.W	A3,D5
	SUBQ.W	#1,D5
	ADD.W	D5,D5
	ADD.W	D5,D5
;	SUBA.L	#BUF_COD_GEN,A0
	MOVE.L	A0,(A1,D5.W)
	MOVEM.L	(SP)+,D5/A0
	RTS
	

POZ_ADRESSE	MOVEM.L	D5/A0,-(SP)
	SUBQ.W	#1,D5
	ADD.W	D5,D5
	ADD.W	D5,D5
;	SUBA.L	#BUF_COD_GEN,A0
	MOVE.L	A0,(A1,D5.W)
	MOVEM.L	(SP)+,D5/A0
	RTS
	
COPY_RT_COOL	LEA	RT_COOL,A6
	MOVE.W	#LONG_RT_COOL,D7
.COPY	MOVE.W	(A6)+,(A0)+
	DBRA	D7,.COPY
	RTS

RT_COOL	ADD.W	D5,D6	1  PROCHAINE LIGNE:+160
	MOVE.L	D6,A4	1  A3=ADR ECRAN EN .W, WARNING!
	MOVE.L	A4,A5	1  A6=ECRAN TOO (LE A5 DE FULBERT)
	MOVE.L	D4,A2	1  D4=A2=TABLE_A2

	MOVE.W	(A1)+,D1	2  X2
	ADD.W	D1,D1	1  
	ADD.W	D1,D1	1

	MOVE.L	(A3,D1.W),D3	5
	ADD	D3,A5	2
	SWAP	D3	1

	MOVE.W	(A0)+,D1	2  X1
	ADD	D1,D1	1
	ADD	D1,D1	1
	ADD	D1,A2	2  A2=TABLE_A2+X1*4
	ADD	(A2)+,A4	3  OFFSET. A3=>1ER MOT
	SUB	(A2),D3	2  (A2)=X1*2-LE DêCALAGE... RUSê, HEIN?
	   ;D'OU D3=X2*2-(X1*2-DêCALAGE)=(X2-X1)*2+DêCALAGE, ZOU.
	MOVE.L	(A6,D3.W),A2	;5
	JMP	(A2)	;2

;TOTAL:31 NOPS. +58=89 NOPS.
LONG_RT_COOL = ((*-RT_COOL)/2)-1


	;ON SPECIFIE LE NB DE POINTS, ET LES POINTS EUX-MEME
COOR_OBJ	
	DC.W	4
	DC.W	-280,99
	DC.W	159,480
	DC.W	370,99
	DC.W	159,-280

	DC.W	4
	DC.W	159,50
	DC.W	140,190
	DC.W	144,149
	DC.W	151,100

	DC.W	4
	DC.W	-30,99
	DC.W	150,229
	DC.W	210,-50
	DC.W	50,49

	DC.W	5
	DC.W	50,-49
	DC.W	0,99
	DC.W	159,199
	DC.W	269,99
	DC.W	269,-49

	DC.W	4
	DC.W	79-85,0
	DC.W	0-85,99
	DC.W	79-85,199
	DC.W	159-85,99

	DC.W	4
	DC.W	159,0
	DC.W	0,99
	DC.W	159,199
	DC.W	319,99

	DC.W	8
	DC.W	270,49
	DC.W	159,0
	DC.W	50,49
	DC.W	0,99
	DC.W	50,159
	DC.W	159,199
	DC.W	270,159
	DC.W	319,99

RT_POLY	MOVE.L	A0,ADR_DEPART

	LEA	2(A0),A1	;A1 POINTE SUR LES POINTS
	MOVE.W	(A1),D3
	SUB.W	4(A1),D3
	MOVE.W	2(A1),D4
	SUB.W	6(A1),D4
	MOVE.W	8(A1),D6
	SUB.W	4(A1),D6
	MOVE.W	$A(A1),D5
	SUB.W	6(A1),D5
	MULS.W	D3,D5
	MULS.W	D6,D4
	SUB.L	D4,D5
	BGT.S	.VISIBLE
	RTS
.VISIBLE
;	LEA	REMP_GAUCHE,A1
;	MOVE	#(500/2)-1,D6
;.EFF_TBX	CLR.L	(A1)+
;	DBF	D6,.EFF_TBX

	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVEQ	#0,D7

	MOVE.W	(A0)+,D0	;NB DE POINTS COMPOSANT LA SURFACE

	LEA	BUF_EXAM,A1
	MOVE.L	A0,A2
	SUBQ.W	#1,D0
	MOVE.W	D0,NB_PTS
.COPYING	MOVE.L	(A0)+,(A1)+
	DBRA	D0,.COPYING
	MOVE.L	(A2),(A1)+

	LEA	BUF_EXAM,A0
	LEA	BUF_GAUCHE,A2
	LEA	BUF_DROIT,A3
	ADDQ.W	#4,A0
	MOVE.W	-2(A0),D3	;Y DE REFERENCE
NB_PTS = *+2
	MOVE.W	#$1234,D0
	MOVEQ	#-1,D6
	MOVEQ	#-1,D7
ALL_PTS	MOVE.W	(A0),D1	;X
	MOVE.W	2(A0),D2	;Y
	CMP.W	D2,D3
	BGE.S	ON_MONTE
ON_DESCEND	MOVE.L	-4(A0),(A2)+
	MOVE.L	(A0)+,(A2)+
	MOVE.W	D2,D3
	ADDQ.W	#1,D6
	DBRA	D0,ALL_PTS
	BRA.S	FINITO
ON_MONTE	MOVE.L	-4(A0),(A3)+
	MOVE.L	(A0)+,(A3)+
	MOVE.W	D2,D3
	ADDQ.W	#1,D7
	DBRA	D0,ALL_PTS
FINITO	;ICI LES TABLEAU BUF_GAUCHE ET BUF_DROIT SONT CONSTITUêS
	;D6=NB DE PTS-1 DANS BUF_GAUCHE
	;D7=NB DE PTS-1 DANS BUF_DROIT
	LEA	BUF_GAUCHE,A0
MAKE_REMP_GAUCHE
	LEA	REMP_GAUCHE,A1
	MOVE.W	(A0)+,D0	;X1
	MOVE.W	(A0)+,D1	;Y1
	MOVE.W	(A0)+,D2	;X2
	MOVE.W	(A0)+,D3	;Y2
	BSR	CLIPPING_Y
	TST.W	D5
	BLT.S	.NEXT
	SUB.W	D1,D3	;HAUTEUR-1 DU SEGMENT
	BEQ.S	.NEXT

	ADD.W	D1,D1
	ADDA.W	D1,A1

	ADDQ.W	#1,D3
	SUB.W	D0,D2
	BNE.S	.PAS_VERTICALE
.VERTICALE	SUBQ.W	#2,D3
	MOVE.W	D0,(A1)+
.PUT	MOVE.W	D0,(A1)+
	DBRA	D3,.PUT
	BRA.S	.NEXT
.PAS_VERTICALE	EXT.L	D2
	MOVEQ	#8,D4
	ASL.L	D4,D2
	DIVS.W	D3,D2
	EXT.L	D2
	SWAP	D2
	ROL.L	#8,D2
	SUBQ.W	#2,D3
	MOVE.W	D0,(A1)+
.MK_X	ADDX.L	D2,D0
	MOVE.W	D0,(A1)+
	DBRA	D3,.MK_X
.NEXT	DBRA	D6,MAKE_REMP_GAUCHE

	LEA	BUF_DROIT,A0
MAKE_REMP_DROIT	LEA	REMP_DROIT,A1
	MOVE.W	(A0)+,D0	;X1
	MOVE.W	(A0)+,D1	;Y1
	MOVE.W	(A0)+,D2	;X2
	MOVE.W	(A0)+,D3	;Y2
	BSR	CLIPPING_Y
	TST.W	D5
	BLT.S	.NEXT
	MOVE.W	D1,D4
	SUB.W	D3,D1	;HAUTEUR-1 DU SEGMENT
	BEQ.S	.NEXT

	ADD.W	D4,D4
	ADDA.W	D4,A1

	ADDQ.W	#1,D1
	SUB.W	D0,D2
	BNE.S	.PAS_VERTICALE
.VERTICALE	SUBQ.W	#2,D1
	MOVE.W	D0,(A1)
.PUT	MOVE.W	D0,-(A1)
	DBRA	D1,.PUT
	BRA.S	.NEXT
.PAS_VERTICALE	EXT.L	D2
	MOVEQ	#8,D4
	ASL.L	D4,D2
	DIVS.W	D1,D2
	EXT.L	D2
	SWAP	D2
	ROL.L	#8,D2
	SUBQ.W	#2,D1
	MOVE.W	D0,(A1)
.MK_X	ADDX.L	D2,D0
	MOVE.W	D0,-(A1)
	DBRA	D1,.MK_X
.NEXT	DBRA	D7,MAKE_REMP_DROIT

ADR_DEPART= *+2
	LEA	$12345678,A0
	MOVE.W	(A0)+,D7
	SUBQ.W	#1,D7
	MOVE.W	#-1000,D0	;MAXIMUM
	MOVE.W	#20000,D1	;MINIMUM
.TEST_MAX	CMP.W	2(A0),D0
	BGE.S	.FUCK
	MOVE.W	2(A0),D0
.FUCK	CMP.W	2(A0),D1
	BLE.S	.FUCK_2
	MOVE.W	2(A0),D1
.FUCK_2	ADDQ.W	#4,A0
	DBRA	D7,.TEST_MAX
	;D0 = Y MAXIMUM
	;D1 = Y MINIMUM
	CMPI.W	#200,D0
	BLT.S	.OK_Y_MAX
	MOVE.W	#199,D0
.OK_Y_MAX	TST.W	D1
	BGE.S	.OK_Y_MIN
	MOVEQ	#0,D1
.OK_Y_MIN

INIT	LEA	REMP_GAUCHE,A0
	LEA	REMP_DROIT,A1
	ADDQ.W	#1,D0
	ADD.W	D0,D0
	MOVE.W	#15,(A1,D0.W)
	MOVE.W	#25,(A0,D0.W)
	ADD.W	D1,D1
	ADDA.W	D1,A0
	ADDA.W	D1,A1
	MULU.W	#80,D1       ;D1=Y_MIN*160 (POUR ADD ECRAN)

	LEA	TABLE_ADR_COD+40,A6
	MOVE	#-1,D7
	MOVE.L	SCREEN2,D6
	ADD.W	D1,D6	;...+Y_MIN*160
	SUBI.W	#160,D6
	MOVE.L	#TABLE_A2+320*4,D4
	MOVE.W	#160,D5
	LEA	TABLE_A4+320*4,A3
	MOVEQ	#0,D2

	ADD.W	D5,D6	1  PROCHAINE LIGNE:+160
	MOVE.L	D6,A4	1  A3=ADR ECRAN EN .W, WARNING!
	MOVE.L	A4,A5	1  A6=ECRAN TOO (LE A5 DE FULBERT)
	MOVE.L	D4,A2	1  D4=A2=TABLE_A2
	MOVE.W	(A1)+,D1	2  X2
	ADD.W	D1,D1	1  
	ADD.W	D1,D1	1
	MOVE.L	(A3,D1.W),D3	5
	ADD	D3,A5	2
	SWAP	D3	1
	MOVE.W	(A0)+,D1	2  X1
	ADD	D1,D1	1
	ADD	D1,D1	1
	ADD	D1,A2	2  A2=TABLE_A2+X1*4
	ADD	(A2)+,A4	3  OFFSET. A3=>1ER MOT
	SUB	(A2),D3	2  (A2)=X1*2-LE DêCALAGE*1320... RUSê, HEIN?   ;D'OU D3=X2*2-(X1*2-DêCALAGE)=(X2-X1)*2+DêCALAGE*1320, ZOU.
	MOVE.L	(A6,D3.W),A2
	JMP	(A2)

RETOUR_POLY	RTS

CLIPPING_Y	MOVEM.L	D4/D6/A6,-(SP)
	MOVEQ	#0,D5
	LEA	TABLE_Y,A6
	ADD.W	D1,D1
	ADD.W	D3,D3
	MOVEQ	#0,D4
	ADD.W	(A6,D1.W),D4
	ADD.W	(A6,D3.W),D4
	ASR.W	#1,D1
	ASR.W	#1,D3
	TST.W	D4
	BEQ	FIN_NORMALE
	CMPI.W	#-2,D4
	BEQ	RIEN_DU_TOUT
	CMPI.W	#4,D4
	BEQ	RIEN_DU_TOUT
	CMPI.W	#-1,D4
	BEQ	CLIP_HAUT
	CMPI.W	#2,D4
	BEQ	CLIP_BAS

CLIP_HAUT_BAS	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	MOVE.W	D2,D5
	SUB.W	D0,D5	;D5=X2-X1
	MULS.W	#200,D5	;D5=200*(X2-X1)
	DIVS.W	D4,D5
	DIVS.W	D4,D6
	ADD.W	D5,D6	;D6=X2 CLIPPê
	CMPI.W	#200,D1
	BGE.S	.C_EST_Y1
.C_EST_Y2	MOVE.W	D6,D2
	MOVE.W	#199,D3
	BRA.S	SUIT
.C_EST_Y1	MOVE.W	D6,D0
	MOVE.W	#199,D1

SUIT	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	DIVS.W	D4,D6
	;D6=X CLIPPê
	TST.W	D1
	BGE.S	.C_EST_Y2
.C_EST_Y1	MOVE.W	D6,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE
.C_EST_Y2	MOVE.W	D6,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE

CLIP_BAS	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	MOVE.W	D2,D5
	SUB.W	D0,D5	;D5=X2-X1
	MULS.W	#200,D5	;D5=200*(X2-X1)
	DIVS.W	D4,D5
	DIVS.W	D4,D6
	ADD.W	D5,D6	;D6=X2 CLIPPê
	CMPI.W	#200,D1
	BGE.S	.C_EST_Y1
.C_EST_Y2	MOVE.W	D6,D2
	MOVE.W	#199,D3
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE
.C_EST_Y1	MOVE.W	D6,D0
	MOVE.W	#199,D1
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE

CLIP_HAUT	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	DIVS.W	D4,D6
	;D6=X CLIPPê
	TST.W	D1
	BGE.S	.C_EST_Y2
.C_EST_Y1	MOVE.W	D6,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE
.C_EST_Y2	MOVE.W	D6,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE

RIEN_DU_TOUT	MOVE.W	#-1,D5
FIN_NORMALE	MOVEM.L	(SP)+,D4/D6/A6
	RTS

	DCB.W	320,-1
TABLE_Y	DCB.W	200,0
	DCB.W	320,2

	SECTION	BSS
;BSS gÇnÇrale
	DS.B	65536
BUFFER	DS.B	32000*2
	DS.B	100
SCREEN1	DS.L	1
SCREEN2	DS.L	1
Z_BASE	DS.W	1
;Calcul des points
MATRICE	DS.W	9
BUF_EXP	DS.W	(LONG_EXP/4)*5
NB_VBL	DS.W	1
BUF_PTS	DS.W	500*3
;Routine d'affichage
TABLE_A4	DS.L	320*3
TABLE_A2	DS.L	320*3
BUF_EXAM	DS.W	2*50
BUF_GAUCHE	DS.W	4*50
BUF_DROIT	DS.W	4*50
REMP_GAUCHE	DS.W	250
REMP_DROIT	DS.W	250
TABLE_ADR_COD	DS.B	(1280+40)*16
BUF_COD_GEN	DS.B	39000
