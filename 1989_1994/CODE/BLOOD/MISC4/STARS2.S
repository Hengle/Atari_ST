;ROTATIONS V.2: A PEU PRES 400 ETOILES EN TEMPS REEL PAR VBL!

MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR.B	$FFFF8260.W
	BSR	PREP_ECR
	BSR	PREPA_LOG_EXP

	MOVE.L	#EFFAC_1,ADR_EFF
	MOVE.L	#EFFAC_2,ADR_EFF+4
	MOVE.L	#EFFAC_1,ADR_EFF+8
	MOVE.L	#EFFAC_2,ADR_EFF+12
	MOVE.L	#EFFAC_1,ADR_EFF+16
	MOVE.L	#EFFAC_2,ADR_EFF+20
	MOVE.L	#EFFAC_1,ADR_EFF+24
	MOVE.L	#EFFAC_2,ADR_EFF+28
	CLR.W	PLANES

	LEA	COEFF,A0
	LEA	LOGARITHMES+512*2(PC),A1
.CONT	MOVE.W	(A0),D0
	CMPI.W	#$200,D0
	BLE.S	.OK
	MOVEQ	#0,D0
.OK	ADD.W	D0,D0
	MOVE.W	(A1,D0.W),(A0)+
	CMPA.L	#FIN_COEFF,A0
	BLT.S	.CONT

	CLR.W	Z_BASE

	LEA	POINTS+2,A0
	MOVE.W	#300-1,D7
.MULTI	REPT	3
	MOVE.W	(A0),D0
;	ADDI.W	#512,D0
	ADD.W	D0,D0
	MOVE.W	D0,(A0)+
	ENDR
	DBRA	D7,.MULTI

	LEA	SINUS,A0
	LEA	SINUS+LONG_SINUS,A1
	MOVE.W	#(LONG_SINUS/8)-1,D7
.RECOPY	MOVE.W	(A0)+,(A1)+
	DBRA	D7,.RECOPY

	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVE.L	#VBLR,$70.W
	CLR.W	NB_VBL
	MOVE.W	#$2300,SR

IT_VBL	BSR	VSYNC
	BSR	EFFAC
	ADDQ.W	#1,PLANES
;	ADDI.W	#$123,$FFFF8240.W
	LEA	POINTS,A0
	LEA	ANGLES,A1
	LEA	TRANS,A6
	LEA	BUF_PTS,A2
	BSR	ROTATE
	BSR	SWAPEC

	ADDQ.W	#1,PLANE
	ANDI.W	#7,PLANE

	LEA	ADR_EFF,A0
	MOVE.L	4(A0),(A0)+
	MOVE.L	4(A0),(A0)+
	MOVE.L	4(A0),(A0)+
	MOVE.L	4(A0),(A0)+
	MOVE.L	4(A0),(A0)+
	MOVE.L	4(A0),(A0)+
	MOVE.L	4(A0),(A0)+

	MOVE.W	#$770,$FFFF8240.W
	MOVE.W	#$000,$FFFF8240.W
	LEA	ANGLES,A0
	MOVE.W	(A0),D0
	ADDI.W	#-2,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+
	MOVE.W	(A0),D0
	ADDI.W	#3,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+
	MOVE.W	(A0),D0
	ADDI.W	#1,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+
	BRA	IT_VBL

VSYNC	CMPI.W	#1,NB_VBL
	BLT.S	VSYNC
	CLR.W	NB_VBL
	RTS

VBLR	ADDQ.W	#1,NB_VBL
	RTE

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

EFFAC	MOVE.L	SCREEN2,A0
	MOVE.W	PLANE,D0
	ANDI.W	#6,D0
	ADDA.W	D0,A0
	MOVEQ	#0,D0
	MOVE.L	ADR_EFF,A1
	JMP	(A1)

EFFAC_1	REPT	300
	MOVE.W	D0,0(A0)
	ENDR
	RTS
EFFAC_2	REPT	300
	MOVE.W	D0,0(A0)
	ENDR
	RTS
EFFAC_3	REPT	300
	MOVE.W	D0,0(A0)
	ENDR
	RTS
EFFAC_4	REPT	300
	MOVE.W	D0,0(A0)
	ENDR
	RTS
EFFAC_5	REPT	300
	MOVE.W	D0,0(A0)
	ENDR
	RTS
EFFAC_6	REPT	300
	MOVE.W	D0,0(A0)
	ENDR
	RTS
EFFAC_7	REPT	300
	MOVE.W	D0,0(A0)
	ENDR
	RTS
EFFAC_8	REPT	300
	MOVE.W	D0,0(A0)
	ENDR
	RTS

TABLE_ADR_EFFAC	DC.L	EFFAC_1,EFFAC_2,EFFAC_3,EFFAC_4
	DC.L	EFFAC_5,EFFAC_6,EFFAC_7,EFFAC_8

;ENTRêES : A0=TABLE DE POINTS ( .W:NB DE POINTS, ET LES POINTS)
;          A1=TABLE D'ANGLE ( ANGLE X, ANGLE Y, ANGLE Z)
;          A6=TABLE DE TRANSLATION ( U_X, U_Y, U_Z)
;          A2=TABLE DE DESTINATION POUR LES POINTS

;Formules de rotation 3 axes:
;X'=X[SIN(T)SIN(U)SIN(V)+COS(T)COS(V)]+Y[COS(T)SIN(U)SIN(V)-SIN(T)COS(V)]+Z[COS(U)SIN(V)]
;Y'=X[SIN(T)COS(U)]+Y[COS(T)COS(U)]-ZSIN(U)
;Z'=X[SIN(T)SIN(U)COS(V)-COS(T)SIN(V)]+Y[COS(T)SIN(U)COS(V)+SIN(T)SIN(V)]+Z[COS(U)COS(V)]

ROTATE	LEA	SINUS(PC),A4	;SINUS
	LEA	LONG_SINUS/4(A4),A3	;COSINUS

	MOVE.W	(A1)+,D0	;ANGLE_X
	ADD.W	D0,D0
	MOVE.W	(A3,D0.W),D1	;COSINUS TETA_X
	MOVE.W	(A4,D0.W),D0	;SINUS TETA_X

	MOVE.W	(A1)+,D2	;ANGLE_Y
	ADD.W	D2,D2
	MOVE.W	(A3,D2.W),D3	;COSINUS TETA_Y
	MOVE.W	(A4,D2.W),D2	;SINUS TETA_Y

	MOVE.W	(A1)+,D4	;ANGLE_Z
	ADD.W	D4,D4
	MOVE.W	(A3,D4.W),D5	;COSINUS TETA_Z
	MOVE.W	(A4,D4.W),D4	;SINUS TETA_Z

	LEA	MATRICE,A4
	LEA	LOGARITHMES+512*2(PC),A3
	;ON FABRIQUE SIN(T)*SIN(U)*SIN(V)+COS(T)*COS(V)
	MOVE.W	D0,D6	;D6=SIN(T)
	MULS.W	D2,D6	;D6=SIN(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D4,D6	;D6=SIN(T)*SIN(U)*SIN(V)
	MOVE.W	D1,D7	;D7=COS(T)
	MULS.W	D5,D7	;D7=COS(T)*COS(V)
	ADD.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(T)*SIN(U)*SIN(V)-SIN(T)*COS(V)
	MOVE.W	D1,D6	;D6=COS(T)
	MULS.W	D2,D6	;D6=COS(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D4,D6	;D6=COS(T)*SIN(U)*SIN(V)
	MOVE.W	D0,D7	;D7=SIN(T)
	MULS.W	D5,D7	;D7=SIN(T)*COS(V)
	SUB.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(U)*SIN(V)
	MOVE.W	D3,D6	;D6=COS(U)
	MULS.W	D4,D6	;D6=COS(U)*SIN(V)
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE SIN(T)*COS(U)
	MOVE.W	D0,D6	;D6=SIN(T)
	MULS.W	D3,D6	;D6=SIN(T)*COS(U)
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(T)*COS(U)
	MOVE.W	D1,D6	;D6=COS(T)
	MULS.W	D3,D6	;D6=COS(T)*COS(U)
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE -SIN(U)
	MOVE.W	D2,D6
	NEG.W	D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE SIN(T)*SIN(U)*COS(V)-COS(T)*SIN(V)
	MOVE.W	D0,D6	;D6=SIN(T)
	MULS.W	D2,D6	;D6=SIN(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D5,D6	;D6=SIN(T)*SIN(U)*COS(V)
	MOVE.W	D1,D7	;D7=COS(T)
	MULS.W	D4,D7	;D7=COS(T)*SIN(V)
	SUB.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(T)*SIN(U)*COS(V)+SIN(T)*SIN(V)
	MOVE.W	D1,D6	;D6=COS(T)
	MULS.W	D2,D6	;D6=COS(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D5,D6	;D6=COS(T)*SIN(U)*COS(V)
	MOVE.W	D0,D7	;D7=SIN(T)
	MULS.W	D4,D7	;D7=SIN(T)*SIN(V)
	ADD.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(U)*COS(V)
	MULS.W	D3,D5	;D5=COS(U)*COS(V)
	ASR.L	#8,D5
	ADD.W	D5,D5
	MOVE.W	(A3,D5.W),(A4)+

	MOVE.W	(A6)+,D0
	ADD.W	D0,D0	;U_X*2
	MOVE.W	D0,TRANSLATE_X
	MOVE.W	(A6)+,D0
	ADD.W	D0,D0	;U_Y*2
	MOVE.W	D0,TRANSLATE_Y
	MOVE.W	(A6),D0
	ADD.W	D0,D0	;U_Z*2
	MOVE.W	D0,TRANSLATE_Z

	MOVE.W	(A0)+,D7	;D7=NB DE POINTS
	SUBQ.W	#1,D7
	MOVE.L	#MATRICE,D6
	LEA	BUF_EXP,A5

	LEA	CORES_X,A1	;A2
	MOVE.L	SCREEN2,A2	;A3
	MOVE.W	PLANE,D0
	ANDI.W	#6,D0
	ADDA.W	D0,A2
	MOVE.W	PLANE,D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	LEA	ADR_EFFAC,A6
	MOVE.L	(A6,D0.W),A6
	MOVE.L	A6,ADR_EFF+28	;A5
	ADDQ.W	#2,A6

	LEA	LOGARITHMES+512*2(PC),A3

ROTATE_ALL	MOVE.L	D6,A4
	MOVE.W	(A0)+,D0	;X*2
TRANSLATE_X = *+2
	ADDI.W	#$1234,D0
	MOVE.W	(A0)+,D1	;Y*2
TRANSLATE_Y = *+2
	ADDI.W	#$1234,D2
	MOVE.W	(A0)+,D2	;Z*2
TRANSLATE_Z = *+2
	ADDI.W	#$1234,D2

	MOVE.W	(A3,D0.W),D0	;D0=LOG(X)
	MOVE.W	(A3,D1.W),D1	;D1=LOG(Y)
	MOVE.W	(A3,D2.W),D2	;D2=LOG(Z)

	MOVE.W	D0,D3	;LOG(X)
	ADD.W	(A4)+,D3	;LOG(X)+LOG(COEFF)
	MOVE.W	(A5,D3.W),D3	;D3=X*COEFF
	MOVE.W	D1,D4	;LOG(Y)
	ADD.W	(A4)+,D4	;LOG(Y)+LOG(COEFF)
	ADD.W	(A5,D4.W),D3
	MOVE.W	D2,D5	;LOG(Z)
	ADD.W	(A4)+,D5	;LOG(Z)+LOG(COEFF)
	ADD.W	(A5,D5.W),D3

	MOVE.W	D0,D4	;LOG(X)
	ADD.W	(A4)+,D4	;LOG(X)+LOG(COEFF)
	MOVE.W	(A5,D4.W),D4	;D4=X*COEFF
	MOVE.W	D1,D5	;LOG(Y)
	ADD.W	(A4)+,D5	;LOG(Y)+LOG(COEFF)
	ADD.W	(A5,D5.W),D4
	MOVE.W	D2,D5	;LOG(Z)
	ADD.W	(A4)+,D5	;LOG(Z)+LOG(COEFF)
	ADD.W	(A5,D5.W),D4

	ADD.W	(A4)+,D0	;LOG(X)+LOG(COEFF)
	MOVE.W	(A5,D0.W),D0	;D3=X*COEFF
	ADD.W	(A4)+,D1	;LOG(Y)+LOG(COEFF)
	ADD.W	(A5,D1.W),D0
	ADD.W	(A4)+,D2	;LOG(Z)+LOG(COEFF)
	ADD.W	(A5,D2.W),D0

	ADDI.W	#COEFF+380*2-CORES_X,D0
	MOVE.W	(A1,D0.W),D0	;LOG DU COEFF 3D
	MOVE.W	(A3,D3.W),D3	;LOG DE X
	ADD.W	D0,D3	;LOG DE X+LOG DE COEFF
	ADD.W	(A3,D4.W),D0	;LOG DE Y+LOG DE COEFF

	MOVE.W	(A5,D3.W),D3
	MOVE.W	(A5,D0.W),D4

	ADDI.W	#CORES_Y-CORES_X,D4
	MOVE.W	(A1,D4.W),D4
	ADD.W	D3,D3
	ADD.W	2(A1,D3.W),D4
	MOVE.W	(A1,D3.W),D3
	OR.W	D3,(A2,D4.W)
	MOVE.W	D4,(A6)
	ADDQ.W	#4,A6

	DBRA	D7,ROTATE_ALL
	RTS

PREPA_LOG_EXP	;ON ARRANGE LA PARTIE NEGATIVE DE LA TABLE DES LOG.
	LEA	LOGARITHMES(PC),A0
	MOVE.W	#512-1,D7
LOG_NEGATIFS	MOVE.W	(A0),D0
	ADD.W	D0,D0
	ADDI.W	#LONG_EXP/2,D0
	MOVE.W	D0,(A0)+
	DBRA	D7,LOG_NEGATIFS
	MOVE.W	#LONG_EXP/2,D7
	MULU.W	#3,D7
	MOVE.W	D7,(A0)+	;D7=LONG_EXP*3 (ZERO)
	MOVE.W	#512-1,D7
LOG_POSITIFS	MOVE.W	(A0),D0
	ADD.W	D0,D0
	MOVE.W	D0,(A0)+	;LOG*2
	DBRA	D7,LOG_POSITIFS

;ON CREE LA PARTIE NEGATIVE ET LA 2EME PARTIE POSITIVE DES EXPONENTIELLES.
	LEA	EXPONENTIELLES(PC),A0
	LEA	BUF_EXP,A1
	LEA	LONG_EXP/2(A1),A2
	LEA	LONG_EXP/2(A2),A3
	MOVE.W	#LONG_EXP/4-1,D7
MAKE_EXP	MOVEQ	#0,D0
	MOVE.L	(A0)+,D0
	LSR.L	#8,D0	;VALEUR REELLE DU RESULTAT
;	ADDI.W	#512,D0
	ADD.W	D0,D0	;*2
	MOVE.W	D0,(A1)+
	MOVE.W	D0,(A3)+
	NEG.W	D0
	MOVE.W	D0,(A2)+
	DBRA	D7,MAKE_EXP

;ON CREE LES 2 TABLES DE ZERO LONGUES CHACUNES DE LONG_EXP.
	LEA	BUF_EXP+(LONG_EXP/2)*3,A0
	MOVE.W	#(LONG_EXP/4)*2-1,D7
MAKE_ZERO_TABLE	CLR.W	(A0)+
	DBRA	D7,MAKE_ZERO_TABLE
	RTS

PREP_ECR	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000+1280,D0
	MOVE.L	D0,SCREEN2
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

POINTS	DC.W	280
	INCBIN	random.PTS

ANGLES	DC.W	0,0,0
TRANS	DC.W	0,0,0

SINUS	INCBIN	SINUSROT.DAT
LONG_SINUS = *-SINUS
	DCB.W	LONG_SINUS/4,0

LOGARITHMES	INCBIN	LOG512.LOG

EXPONENTIELLES	INCBIN	EXP512.EXP
LONG_EXP = *-EXPONENTIELLES

	DCB.W	1000,0
COEFF	INCBIN	COEFF2.3D
FIN_COEFF

	DCB.W	500,0
N	SET	0
	REPT	10
	DC.W	32768,N,16384,N,8192,N,4096,N,2048,N,1024,N,512,N,256,N,128,N,64,N,32,N,16,N,8,N,4,N,2,N,1,N
N	SET	N+8
	ENDR
CORES_X	REPT	10
	DC.W	32768,N,16384,N,8192,N,4096,N,2048,N,1024,N,512,N,256,N,128,N,64,N,32,N,16,N,8,N,4,N,2,N,1,N
N	SET	N+8
	ENDR
	DCB.W	500,0

	DCB.W	200,-160
N	SET	0
	REPT	100
	DC.W	N
N	SET	N+160
	ENDR
CORES_Y	REPT	100
	DC.W	N
N	SET	N+160
	ENDR
	DCB.W	200,-160

	SECTION	BSS
	DS.B	256+160
BUFFER	DS.B	32000*2+1280
	DS.B	100
SCREEN1	DS.L	1
SCREEN2	DS.L	1
ADR_EFF	DS.L	2*4
PLANE	DS.W	1
Z_BASE	DS.W	1
MATRICE	DS.W	9
BUF_EXP	DS.W	(LONG_EXP/4)*5
NB_VBL	DS.W	1
BUF_PTS	DS.W	500*3