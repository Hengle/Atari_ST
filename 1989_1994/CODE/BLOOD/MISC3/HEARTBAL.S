;Cheater 320*200= 513.6 lignes/VBL!
;	+ le coeff multiplicatif
;	+ la gestion correcte du z
;	+ routine d'affichage plus courte
;	+ une routine 3D VRAIMENT sans bugs!
;	+ 2 algos d'effaáage...
;	+ la gestion des 4 plans!

DONNEE_INIT	= 135	150
DONNEE_INIT2	= 100
TIME_F	= 128+2	;Nombre de vbls Ö prÇcalculer
NB_PTS_	= 40
NB_FACES	= 1

NB_PTS_2	= 10*2
NB_FACES2	= 5*2

COEFF_MULTI	= 2
COEFF_INIT	= 380
X_DEP	= 160
STR2INIT	= 2*128

ALGO	= 0	0=Normal, 1=Par colonne

X1	EQU	0
X2	EQU	4
X3	EQU	8
X4	EQU	12
X5	EQU	16
X6	EQU	20
X7	EQU	24
X8	EQU	28
X9	EQU	32
X10	EQU	36
X11	EQU	40
X12	EQU	44
X13	EQU	48
X14	EQU	52
X15	EQU	56
X16	EQU	60
X17	EQU	64
X18	EQU	68
X19	EQU	72
X20	EQU	76
X21	EQU	80
X22	EQU	84
X23	EQU	88
X24	EQU	92
X25	EQU	96
X26	EQU	100
X27	EQU	104
X28	EQU	108
X29	EQU	112
X30	EQU	116
X31	EQU	120
X32	EQU	124
X33	EQU	128
X34	EQU	132
X35	EQU	136
X36	EQU	140
X37	EQU	144
X38	EQU	148
X39	EQU	152
X40	EQU	156
X41	EQU	160
X42	EQU	164
X43	EQU	168
X44	EQU	172
X45	EQU	176
X46	EQU	180
X47	EQU	184
X48	EQU	188
X49	EQU	192
X50	EQU	196
X51	EQU	200
X52	EQU	204
X53	EQU	208
X54	EQU	212
X55	EQU	216
X56	EQU	220
X57	EQU	224
X58	EQU	228
X59	EQU	232
X60	EQU	236
X61	EQU	240
X62	EQU	244
X63	EQU	248
X64	EQU	252
X65	EQU	256
X66	EQU	260
X67	EQU	264
X68	EQU	268
X69	EQU	272
X70	EQU	276
X71	EQU	280
X72	EQU	284
X73	EQU	288
X74	EQU	292
X75	EQU	296
X76	EQU	300
X77	EQU	304
X78	EQU	308
X79	EQU	312
X80	EQU	316

MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP
*************************************************************************

	MOVE.L	#FIN,$008.W
	MOVE.L	#FIN,$00C.W
	MOVE.L	#FIN,$010.W
	MOVE.L	#FIN,$014.W
	MOVE.L	#FIN,$018.W
	MOVE.L	#FIN,$01C.W
	MOVE.L	#FIN,$020.W

	LEA	DEB_BSS,A0
	LEA	END_BSS,A1
.KILL_IT	CLR.L	(A0)+
	CMP.L	A1,A0
	BLE.S	.KILL_IT

	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000,D0
	MOVE.L	D0,SCREEN2

	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W

	LEA	POINTS+2,A1
	MOVE	#COEFF_MULTI,D0
	MOVE	#(NB_PTS_*3)-1,D7
.OQP	MOVEQ	#0,D1
	MOVE	(A1),D1
	MULS	D0,D1
	MOVE	D1,(A1)+
	DBF	D7,.OQP

	LEA	POINTS,A0
	MOVE	(A0)+,D7
	SUBQ	#1,D7
.X2	REPT	3
	MOVE	(A0),D0
	ADD	D0,D0
	MOVE	D0,(A0)+
	ENDR
	DBF	D7,.X2

	LEA	POINTS,A0
	LEA	OBJ,A1
	MOVE	(A0)+,D7
	SUBQ	#1,D7
.COPIT	MOVE.L	(A0)+,(A1)+
	MOVE	(A0)+,(A1)+
	DBF	D7,.COPIT

	LEA	POINTS2+2,A1
	MOVE	#COEFF_MULTI,D0
	MOVE	#(NB_PTS_2*3)-1,D7
.OQP2	MOVEQ	#0,D1
	MOVE	(A1),D1
	MULS	D0,D1
	MOVE	D1,(A1)+
	DBF	D7,.OQP2

	LEA	POINTS2,A0
	MOVE	(A0)+,D7
	SUBQ	#1,D7
.X22	REPT	3
	MOVE	(A0),D0
	ADD	D0,D0
	MOVE	D0,(A0)+
	ENDR
	DBF	D7,.X22

	LEA	POINTS2,A0
	LEA	OBJ2,A1
	MOVE	(A0)+,D7
	SUBQ	#1,D7
.COPIT2	MOVE.L	(A0)+,(A1)+
	MOVE	(A0)+,(A1)+
	DBF	D7,.COPIT2

	MOVE	#$023,$FFFF8240.W
	MOVE	#$334,$FFFF8242.W
	MOVE	#$434,$FFFF8244.W
	MOVE	#$434,$FFFF8246.W
	MOVE	#$102,$FFFF8248.W
	MOVE	#$102,$FFFF824A.W
	MOVE	#$102,$FFFF824C.W
	MOVE	#$102,$FFFF824E.W

	MOVE	#$112,$FFFF8250.W
	MOVE	#$112,$FFFF8252.W
	MOVE	#$112,$FFFF8254.W
	MOVE	#$112,$FFFF8256.W
	MOVE	#$112,$FFFF8258.W
	MOVE	#$112,$FFFF825A.W
	MOVE	#$112,$FFFF825C.W
	MOVE	#$112,$FFFF825E.W

	MOVE	#STR2INIT,MOD_STR2
	JSR	PREP_STRECH

	LEA	TABLE_ADR_COD,A0
	MOVE	#5279,D7
.C	MOVE.L	#RT_COOL,(A0)+
	DBF	D7,.C

	LEA	TABLE_ADR_COD2,A0
	MOVE	#5279,D7
.C2	MOVE.L	#RT_COOL2,(A0)+
	DBF	D7,.C2

	BSR	PREPA_LOG_EXP
	CLR	CHOICE
	;MOVE	#1,CHOICE
	JSR	INIT_ROUT_POLY
	JSR	INIT_ROUT_POLY2
	MOVE.L	#RT_COOL,TABLE_ADR_COD+40
	MOVE.L	#RT_COOL2,TABLE_ADR_COD2+40

	MOVE	#DONNEE_INIT,DONNEE
	MOVE	#DONNEE_INIT2,DONNEE2
	MOVE.L	#BUF_COD,ADR_BUF
	MOVE.L	#TABLE_ADR,ADR_TAB
	MOVE.L	#BUF_INFO,ADR_INFO
	MOVE.L	#BUF_TABLOS,ADR_TABLOS
	MOVE.L	#BUF_VISION,ADR_VISION

	LEA	SAVE_VALUES,A0
	LEA	ANGLES,A1
	MOVE	DONNEE,(A0)+
	MOVE.L	(A1)+,(A0)+
	MOVE	(A1),(A0)

	CLR.W	Z_BASE
	JSR	GERE_Z

	LEA	SINUS,A0
	LEA	SINUS+LONG_SINUS,A1
	MOVE.W	#(LONG_SINUS/8)-1,D7
.RECOPY	MOVE.W	(A0)+,(A1)+
	DBRA	D7,.RECOPY

	MOVE.W	#$2700,SR
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVE.L	#VBLR,$70.W
	CLR.W	NB_VBL
	MOVE.W	#$2300,SR

	MOVE.L	#BUF_TEMP,D0
	MOVE.L	D0,TEMP1
	ADDI.L	#32000,D0
	MOVE.L	D0,TEMP2

	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W

	LEA	SAVE_VALUES,A0
	LEA	ANGLES,A1
	MOVE	(A0)+,DONNEE
	MOVE.L	(A0)+,(A1)+
	MOVE	(A0),(A1)

	CLR.W	Z_BASE
	JSR	GERE_Z

MAIN_LOOP	BSR	VSYNC
	MOVE	#$011,$FFFF8240.W

	LEA	POINTS,A0
	LEA	ANGLES_NULS,A1
	LEA	TRANS,A6
	LEA	BUF_PTS,A2
	BSR	ROTATE
	LEA	POINTS2,A0
	LEA	ANGLES,A1
	LEA	TRANS,A6
	LEA	BUF_PTS2,A2
	BSR	ROTATE

	BSR	EFFAC

	BSR	AFFICH
	JSR	CREE_EFF

	BSR	SWAPEC

	JSR	GERE_Z

	MOVE.B	$FFFFFC02.W,D7
	LEA	ANGLES,A0
	MOVE.W	(A0),D0
	ADD	ADX,D0
	CMPI.B	#$1,D7
	BNE.S	.NO_F1
	ADDQ.W	#2,D0
.NO_F1
	CMPI.B	#$2,D7
	BNE.S	.NO_F2
	SUBQ.W	#2,D0
.NO_F2
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+
	MOVE.W	(A0),D0
	ADD	ADY,D0
	CMPI.B	#$3,D7
	BNE.S	.NO_F3
	ADDQ.W	#2,D0
.NO_F3
	CMPI.B	#$4,D7
	BNE.S	.NO_F4
	SUBQ.W	#2,D0
.NO_F4
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+
	MOVE.W	(A0),D0
	ADD	ADZ,D0
	CMPI.B	#$5,D7
	BNE.S	.NO_F5
	ADDQ.W	#2,D0
.NO_F5
	CMPI.B	#$6,D7
	BNE.S	.NO_F6
	SUBQ.W	#2,D0
.NO_F6
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+

	CMPI.B	#7,D7
	BNE.S	.NO7
	ADDQ.W	#1,Z_BASE
.NO7
	CMPI.B	#8,D7
	BNE.S	.NO8
	SUBQ.W	#1,Z_BASE
.NO8
	JSR	GERE_TIME

	CMPI	#TIME_F,TIME
	BEQ.S	TERMINê
	BRA	MAIN_LOOP
TERMINê
	JMP	SUITE_DEMO

CREE_EFF
	JSR	COD_GEN
	MOVE.L	SCREEN2,A0
	MOVE.L	TEMP2,A1
	MOVE	#200-1,D7
.REMP_B
	REPT	20
	MOVE.L	(A0)+,(A1)+
	MOVE.L	(A0)+,(A1)+
	ENDR
	DBF	D7,.REMP_B
	RTS

GERE_TIME	ADDQ	#1,TIME
	ADDQ	#4,MOD_STR
	ADDQ	#4,MOD_STR2
	RTS
	LEA	PROF,A0
MOD_PROF	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$1234,(A0)
	BNE.S	.E
	CLR	MOD_PROF
	LEA	PROF,A0
.E	MOVE	(A0),D0
	LSR	#2,D0
	ADD	#100,D0
	MOVE	D0,MOD_Y+2
	ADDQ	#4,MOD_PROF
	RTS
;	CMPI	#TIME1,TIME
;	BGE.S	.NON
;	SUBQ	#1,FLAG
;	BNE.S	.NON
;	MOVE	#FLAG_INIT,FLAG
;	ADDQ	#2,DONNEE
;.NON
;	CMPI	#TIME2,TIME
;	BLE.S	.NON2
;	SUBQ	#8,MOD_Y+2
;	ADDQ	#6,MOD_X+2
;.NON2
;	RTS

SUITE_DEMO
LETS_GO
	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVEQ	#0,D0
	MOVE	#7999,D7
.EFF_ECRS	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A1)+
	DBF	D7,.EFF_ECRS
KOD_GEN_TWO
	JSR	CREE_TABLOX

	CLR	MOD_PROF
	MOVE	#STR2INIT,MOD_STR2
	CLR	MOD_STR
	CLR	TIME
	MOVE.L	#BUF_INFO_TABLO,ADR_TABLO
	MOVE.L	#BUF_TABLOS,ADR_TABLOS
	LEA	SAVE_VALUES,A0
	LEA	ANGLES,A1
	MOVE	(A0)+,DONNEE
	MOVE.L	(A0)+,(A1)+
	MOVE	(A0),(A1)
	JSR	GERE_Z
	MOVE	#100,MOD_Y+2
	MOVE	#X_DEP,MOD_X+2

LOOP_PR_T
	LEA	POINTS,A0
	LEA	ANGLES_NULS,A1
	LEA	TRANS,A6
	LEA	BUF_PTS,A2
	BSR	ROTATE
	LEA	POINTS2,A0
	LEA	ANGLES,A1
	LEA	TRANS,A6
	LEA	BUF_PTS2,A2
	BSR	ROTATE

	BSR	AFFICH
	JSR	GERE_Z

	MOVE.B	$FFFFFC02.W,D7
	LEA	ANGLES,A0
	MOVE.W	(A0),D0
	ADD	ADX,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+

	MOVE.W	(A0),D0
	ADD	ADY,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+

	MOVE.W	(A0),D0
	ADD	ADZ,D0
	ANDI.W	#1023,D0
	MOVE.W	D0,(A0)+

	CMPI	#TIME_F,TIME
	BEQ.S	KOD_GEN_OUT
	JSR	GERE_TIME
	BRA	LOOP_PR_T
KOD_GEN_OUT
;OUF! On arrive donc tout doucement Ö la boucle ultime, la plus WARG!, la
;plus OUHLALA!, la plus WIIIIIIIIIIIIIIIIIIZ!..... :

;On efface, dÇjÖ, parce que depuis le temps, ils doivent plus etre träs
;clairs, les Screens...
LAST_HOPE
	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVEQ	#0,D0
	MOVE	#7999,D7
.EFF_ECRS	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A1)+
	DBF	D7,.EFF_ECRS

	MOVE	#STR2INIT,MOD_STR2
	CLR	MOD_STR
	CLR	TIME		;Indispensable.
	CLR	MOD_PROF
	LEA	MODIF,A1
	MOVE.L	#$4E714E71,(A1)+	;Sinon, grosse
	MOVE	#$4E71,(A1)		;panique...
	MOVE.L	#TABLE_ADR,SAVE_ULTIME_A1+2	;Effaáage, ready.
	MOVE.L	#BUF_INFO,ADR_INFO	;Infos effaáage, ready.
	MOVE.L	#BUF_INFO_TABLO,ADR_TABLO	;Infos affichage, ready.
	MOVE.L	#BUF_TABLOS,ADR_TABLOS	;Affichage, ready, pfoooo.
	MOVE.L	#BUF_VISION,ADR_VISION	;Visible ou non
	CLR	VISION
	MOVE	#100,MOD_Y+2	;Au cas oó.
	MOVE	#X_DEP,MOD_X+2	;Idem
	LEA	SAVE_VALUES,A0	;On rÇinitialise tout
	LEA	ANGLES,A1	;le bordel.
	MOVE	(A0)+,DONNEE	;
	MOVE.L	(A0)+,(A1)+	;
	MOVE	(A0),(A1)	;
	JSR	GERE_Z	;

LAST_RUN
	BSR	VSYNC
	CMPI.B	#$39,$FFFFFC02.W
	BNE.S	.ONE
	BSR	VSYNC
.ONE
	MOVE	#$100,$FFFF8240.W
	MOVE	#$700,$FFFF8242.W
	MOVE	#$400,$FFFF8244.W
	MOVE	#$400,$FFFF8246.W
	MOVE	#$777,$FFFF8248.W
	MOVE	#$777,$FFFF824A.W
	MOVE	#$777,$FFFF824C.W
	MOVE	#$777,$FFFF824E.W

	MOVE	#$444,$FFFF8250.W
	MOVE	#$444,$FFFF8252.W
	MOVE	#$444,$FFFF8254.W
	MOVE	#$444,$FFFF8256.W
	MOVE	#$444,$FFFF8258.W
	MOVE	#$444,$FFFF825A.W
	MOVE	#$444,$FFFF825C.W
	MOVE	#$444,$FFFF825E.W

;Bon. Les choses sÇrieuses commencent. On commence par rÇgler le
;compte de l'effaáage.

SAVE_ULTIME_A1	LEA	TABLE_ADR,A1
	TST	(A1)
	BNE.S	.CA_TOURNE
	JMP	DEF_FUCK
.CA_TOURNE	MOVE.L	(A1)+,A2
	MOVE.L	A1,SAVE_ULTIME_A1+2
	MOVE.L	SCREEN2,A0
	MOVEQ	#0,D0
	JSR	(A2)

	JSR	AFFICH2

	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2

	MOVE.L	SCREEN1,D0
	lsr.l	#8,d0
	LEA	$FFFF8201.W,A0
	movep	d0,(a0)

	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NO_TIME
	ST	$FFFF8240.W
.NO_TIME

	CMPI	#TIME_F-1,TIME
	BEQ.S	DEF_FUCK
	JSR	GERE_TIME

	BRA	LAST_RUN

DEF_FUCK
	MOVE	#2,TIME		;Indispensable.
	MOVE.L	#TABLE_ADR,SAVE_ULTIME_A1+2	;Effaáage, ready.
	MOVE.L	SAVE_ULTIME_A1+2,A1
	ADDQ	#8,A1
	MOVE.L	A1,SAVE_ULTIME_A1+2

	MOVE.L	#BUF_TABLOS,ADR_TABLOS	;Affichage, ready, pfoooo.
	MOVE.L	#BUF_VISION,ADR_VISION	;Visible ou non
	CLR	VISION

	MOVE.L	SAVE_POUR_APRES,ADR_TABLOS

	MOVE.L	ADR_VISION,A0
	LEA	(NB_FACES+NB_FACES2)*2(A0),A0
	MOVE.L	A0,ADR_VISION

	BRA	LAST_RUN

;TIMER
;	CLR.B	$FFFFFA1B.W
;	MOVE.B	V1,$FFFFFA21.W
;	MOVE.B	#8,$FFFFFA1B.W
;	MOVE.L	#TIMER2,$120.W
;	BCLR	#0,$FFFFFA0F.W
;	RTE

OBJ	DCB	3*NB_PTS_
OBJ2	DCB	3*NB_PTS_2

GERE_Z	LEA	OBJ,A0
	LEA	POINTS+2,A1
	MOVE	DONNEE,D0

	REPT	NB_PTS_*3
	MOVEQ	#0,D1
	MOVE	(A0)+,D1
	MULS	D0,D1
	LSR.L	#8,D1
	ADD	D1,D1
	MOVE	D1,(A1)+
	ENDR

	LEA	OBJ2,A0
	LEA	POINTS2+2,A1
	MOVE	DONNEE2,D0

	REPT	NB_PTS_2*3
	MOVEQ	#0,D1
	MOVE	(A0)+,D1
	MULS	D0,D1
	LSR.L	#8,D1
	ADD	D1,D1
	MOVE	D1,(A1)+
	ENDR

	RTS

ADR_BUF	DS.L	1
ADR_TAB	DS.L	1
;
;Routine valable si tout plan n l'emporte sur tous les plans <n
;

COD_GEN	MOVE.L	SCREEN2,A0	On vient de l'Çcrire
	MOVE.L	TEMP2,A1	Ecran prÇcÇdent
	MOVE.L	ADR_BUF,A6
	MOVE.L	ADR_TAB,A5
	MOVE.L	A6,(A5)+
	MOVE.L	A5,ADR_TAB
	MOVEQ	#0,D7	Offset Y
	MOVEQ	#0,D6	Offset X
LOOP_GEN
**
	MOVE	6(A0),D0	New Plan4
	BEQ	.NEW_P4_NUL
;New P4 utilisÇ...
	CMPI	#-1,D0
	BEQ	.PLEIN
	MOVE	(A0),D0
	BEQ	.P1V
	MOVE	2(A0),D0
	BEQ.S	.P2VB
	MOVE	4(A0),D0
	BEQ.S	.P3VB
	BRA	RIEN_A_FAIRE
.P3VB	MOVE	4(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	BRA	RIEN_A_FAIRE
.P2VB	MOVE	4(A0),D0
	BEQ.S	.P3VC
	MOVE	2(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE
.P3VC	;NEW 2/3 VIDES
	MOVE	2(A1),D0
	BEQ.S	.OP2V
	MOVE	4(A1),D0
	BEQ.S	.Z
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE
.Z
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE
.OP2V	MOVE	4(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	BRA	RIEN_A_FAIRE

.P1V
	MOVE	2(A0),D0
	BEQ	.P2V
	MOVE	4(A0),D0
	BEQ.S	.P3V_P2PV
	MOVE	(A1),D0
	BEQ.S	.OP1VA
	MOVE	2(A1),D0
	BEQ.S	.E
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE
.E
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE

.OP1VA	MOVE	2(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE
.P3V_P2PV	MOVE	(A1),D0
	BEQ.S	.OP1VK
	MOVE	4(A1),D0
	BEQ.S	.LOLO
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE
.LOLO
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE

.OP1VK	MOVE	4(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	BRA	RIEN_A_FAIRE

.P2V	MOVE	4(A0),D0
	BEQ.S	.P3V
	MOVE	(A1),D0
	BEQ.S	.OP1VK2
	MOVE	2(A1),D0
	BEQ.S	.L2
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE
.L2
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE

.OP1VK2	MOVE	2(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE

.P3V
	MOVE	(A1),D0
	BEQ.S	.OLDP1VID
	MOVE	2(A1),D0
	BEQ.S	.ZZE
	MOVE	4(A1),D0
	BEQ.S	.EDED
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE
.EDED
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE
	
.ZZE	MOVE	4(A1),D0
	BEQ.S	.POPOP
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE
.POPOP	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE
.OLDP1VID
	MOVE	2(A1),D0
	BEQ.S	.OLDP2VID
	MOVE	4(A1),D0
	BEQ.S	.AAA
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE
.AAA
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE
.OLDP2VID
	MOVE	4(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	BRA	RIEN_A_FAIRE	
.PLEIN	TST	(A0)
	BNE.S	.V1
	MOVE	(A1),(A0)
.V1	TST	2(A0)
	BNE.S	.V2
	MOVE	2(A1),2(A0)
.V2	TST	4(A0)
	BNE.S	.V3
	MOVE	4(A1),4(A0)
.V3	BRA	RIEN_A_FAIRE

*
.NEW_P4_NUL	MOVE	6(A1),D0
	BEQ.S	FIRST_VERSION
;Ici: New P4 nul, Old P4 utilisÇ
	MOVE	4(A0),D0
	BEQ.S	.NEW_P3_NUL
;New P3 utilisÇ, New P4 nul: on efface que le old plan4
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#6,(A6)+
	BRA.S	FIRST_VERSION
*
.NEW_P3_NUL	MOVE	4(A1),D0
	BEQ.S	.OLD_P3_NUL
;New P3/P4 nuls. Pas les Olds. Kill!
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	CLR.L	4(A1)	On les dÇgage, on enchaine.
	BRA.S	FIRST_VERSION
*
.OLD_P3_NUL
;New P3/P4 et old P3 nuls: on efface juste le old P4
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#6,(A6)+
;et on enchaine sur la 1äre version....
**
;Ici: plan 4 inutilisÇ (1äre version de ce gÇnÇrateur)
FIRST_VERSION	MOVE	(A0),D0	New Plan1
	BEQ	.NEW_P1_NUL
;Ici: New P1 occupÇ.
	MOVE	2(A0),D0
	BNE.S	.OQP2
;Ici: New P1 occupÇ, New P2 vide.
	MOVE	4(A0),D0
	BEQ.S	.VID3
;Ici: New P1 occupÇ, New P2 vide, New P3 occupÇ.
	CMPI	#-1,D0
	BNE.S	.OK_1
	MOVE	2(A1),2(A0)
	BRA	RIEN_A_FAIRE
.OK_1	MOVE	2(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE
.VID3
;Ici: New P1 occupÇ, New P2 vide, New P3 vide.
	MOVE	2(A1),D0
	BEQ.S	.VID2
	MOVE	4(A1),D0
	BEQ.S	.VID3B
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE
.VID3B
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA	RIEN_A_FAIRE
.VID2	MOVE	4(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	BRA	RIEN_A_FAIRE
.OQP2	MOVE	4(A0),D0
	BNE	RIEN_A_FAIRE	(3 new plans OQP)
;Ici: New P1 et New P2 occupÇs, New P3 vide.
	MOVE	4(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
	BRA	RIEN_A_FAIRE
*****
.NEW_P1_NUL	MOVE	2(A0),D0	New Plan2
	BEQ.S	.NEW_P2_NUL
;Ici: New P1 nul. New P2 occupÇ.
	MOVE	4(A0),D0
	BEQ.S	.NUL3
;Ici: New P1 nul. New P2 occupÇ. New P3 occupÇ.
	MOVE	(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE
.NUL3
;Ici: New P1 et New P3 nuls. New P2 occupÇ.
	MOVE	4(A1),D0
	BEQ.S	.NUL_3
;Ici: Old P3 non nul.
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+
.NUL_3
;Ici: Old P3 nul.
	CMPI	#-1,2(A0)
	BNE.S	.OK_2
	MOVE	(A1),(A0)
	BRA	RIEN_A_FAIRE
.OK_2	MOVE	(A1),D0
	BEQ	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA	RIEN_A_FAIRE
*****
.NEW_P2_NUL	MOVE	4(A0),D0	New Plan3
	BEQ.S	.TOUS_NULS
;Ici: New P1 et New P2 nuls, New P3 occupÇ.
;Si P3=-1, c'est bon vu que P3 l'emporte sur tout.
;Sinon on efface les plans 1 et 2.
	CMPI	#-1,D0
	BNE.S	.OK_3
	MOVE.L	(A1),(A0)
	BRA	RIEN_A_FAIRE
.OK_3	MOVE	(A1),D0
	BEQ.S	.NUL1
	MOVE	2(A1),D0
	BEQ.S	.NUL2
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA.S	RIEN_A_FAIRE
.NUL2
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA.S	RIEN_A_FAIRE

.NUL1	MOVE	2(A1),D0
	BEQ.S	RIEN_A_FAIRE
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA.S	RIEN_A_FAIRE
**************************************************************************
.TOUS_NULS	;les 3 nouveaux plans sont nuls.
	MOVE	(A1),D0	Old Plan1
	BEQ.S	.OLD_P1_NUL
*****
;Ici: ancien plan1 non nul. A effacer, en w ou l.
	MOVE	2(A1),D0	Old Plan2
	BNE.S	.MOVE_L_
;Ici: old P1 non nul, old P2 nul => MOVE.W et raccord
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA.S	.OLD_P2_NUL
.MOVE_L_
;Ici: old P1 et old P2 non nuls => MOVE.L et raccord
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)+
	BRA.S	.OLD_P2_NUL
*****
.OLD_P1_NUL	MOVE	2(A1),D0	Old Plan2
	BEQ.S	.OLD_P2_NUL
;Ici: ancien plan1 nul, ancien plan2 non nul.
;A effacer en .W ou .L
	MOVE	4(A1),D0	Old Plan3
	BNE.S	.MOVE_L
;Ici: effacage du plan2 only.
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA.S	RIEN_A_FAIRE
.MOVE_L
;Ici: effacage des plans 2 et 3.
	MOVE	#$2140,(A6)+	MOVE.L D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#2,(A6)+
	BRA.S	RIEN_A_FAIRE
*****
.OLD_P2_NUL	MOVE	4(A1),D0	Old Plan3
	BEQ.S	RIEN_A_FAIRE
;Ici: tout est nul sauf l'ancien plan3. Donc on l'efface.
	MOVE	#$3140,(A6)+	MOVE D0,n(A0)
	MOVE	D7,(A6)
	ADD	D6,(A6)
	ADDQ	#4,(A6)+	Plan3
*****
RIEN_A_FAIRE	;les 3 anciens plans sont nuls Çgalement.
	IFNE	ALGO
	ADD	#160,D7
	LEA	20*8(A0),A0
	LEA	20*8(A1),A1
	CMPI	#160*200,D7
	BNE	.LOOP_GEN
	MOVEQ	#0,D7
	ADDQ	#8,D6

	LEA	-20*8*200+8(A0),A0
	LEA	-20*8*200+8(A1),A1
	
	MOVE.L	SCREEN2,A2
	LEA	160(A2),A2
	CMP.L	A0,A2
	BNE	LOOP_GEN
	MOVE	#$4E75,(A6)+
	MOVE.L	A6,ADR_BUF
	RTS
	ENDC

	IFEQ	ALGO
	ADDQ	#8,D7
	ADDQ	#8,A0	On passe au
	ADDQ	#8,A1	bloc suivant
	MOVE.L	SCREEN2,A2
	LEA	200*160(A2),A2
	CMP.L	A0,A2
	BNE	LOOP_GEN
	MOVE	#$4E75,(A6)+
	MOVE.L	A6,ADR_BUF
	RTS
	ENDC


DONNEE	DC	194
DONNEE2	DC	194
TIME	DC	0

VSYNC	CMPI	#1,NB_VBL
	BLT.S	VSYNC
	CLR.W	NB_VBL
	RTS

VBLR	ADDQ.W	#1,NB_VBL
	RTE

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2

	MOVE.L	TEMP1,D0
	MOVE.L	TEMP2,TEMP1
	MOVE.L	D0,TEMP2

	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS

FIN	MOVE.L	4.W,A0
	JMP	(A0)

EFFAC
	MOVE.L	SCREEN2,A0
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVE.L	D0,A1
	MOVE.L	D0,A2
	MOVE.L	D0,A3
	MOVE.L	D0,A4
	MOVE.L	D0,A5
	MOVE.L	D0,A6
	MOVE	#200-1,D7
.EFF	MOVEM.L	D0-D6/A1-A6,(A0)
	MOVEM.L	D0-D6/A1-A6,4*13(A0)
	MOVEM.L	D0-D6/A1-A6,4*13*2(A0)
	MOVE.L	D0,4*13*3(A0)
	LEA	160(A0),A0
	DBF	D7,.EFF
	RTS
	;194    (DONNEE)
EMUL_EFFAC
	MOVE.L	SCREEN2,A0
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVE.L	D0,A1
	MOVE.L	D0,A2
	MOVE.L	D0,A3
	MOVE.L	D0,A4
	MOVE.L	D0,A5
	MOVE.L	D0,A6
	MOVE	#200-1,D7
.EFF	MOVEM.L	D0-D6/A1-A6,(A0)
	MOVEM.L	D0-D6/A1-A6,4*13(A0)
	MOVEM.L	D0-D6/A1-A6,4*13*2(A0)
	MOVE.L	D0,4*13*3(A0)
	LEA	0(A0),A0
	DBF	D7,.EFF
	RTS

AFFICH	LEA	BUF_PTS,A0
	JSR	PROJETTE
	LEA	BUF_PTS2,A0
	JSR	PROJETTE2

	JSR	GERE_STRECH

	LEA	DONNêES_AFFICH,A6
	MOVE	(A6)+,D7
.LOOP_AFF	MOVE.L	D7,-(SP)
	MOVE	(A6)+,MOD_PLAN
	LEA	COORD,A0
	LEA	face_en_cours,A1
	MOVE	(A6),(A1)+
	MOVE	(A6)+,D6
	SUBQ	#1,D6
.FACES	MOVE	(A6)+,D5
	MOVE.L	(A0,D5.W),(A1)+
	DBF	D6,.FACES
	LEA	face_en_cours,A0
	MOVE.L	A6,-(SP)
	JSR	RT_POLY
	MOVE.L	(SP)+,A6
	MOVE.L	(SP)+,D7
	DBF	D7,.LOOP_AFF
NOOH
	LEA	DONNêES_AFFICH2,A6
	MOVE	(A6)+,D7
.LOOP_AFF	MOVE.L	D7,-(SP)
	MOVE	(A6)+,MOD_PLAN
	LEA	COORD2,A0
	LEA	face_en_cours,A1
	MOVE	(A6),(A1)+
	MOVE	(A6)+,D6
	SUBQ	#1,D6
.FACES	MOVE	(A6)+,D5
	MOVE.L	(A0,D5.W),(A1)+
	DBF	D6,.FACES
	LEA	face_en_cours,A0
	MOVE.L	A6,-(SP)
	JSR	RT_POLY
	MOVE.L	(SP)+,A6
	MOVE.L	(SP)+,D7
	DBF	D7,.LOOP_AFF

	RTS

SPE	DC	0
AFFICH2
	MOVE.L	ADR_TABLOS,A3

	LEA	DONNêES_AFFICH,A6
	MOVE	(A6)+,D7
.LOOP_AFF	MOVE.L	D7,-(SP)
	;MOVE	(A6)+,MOD_PLAN
	MOVE	(A6)+,MOD_PLAN2
	LEA	COORD,A0
	LEA	face_en_cours,A1
	MOVE	(A6),(A1)+
	MOVE	(A6)+,D6
	SUBQ	#1,D6
.FACES	MOVE	(A6)+,D5
	MOVE.L	(A0,D5.W),(A1)+
	DBF	D6,.FACES
	LEA	face_en_cours,A0
	MOVE.L	A6,-(SP)
	JSR	RT_POLY2
	MOVE.L	(SP)+,A6
	MOVE.L	(SP)+,D7
	DBF	D7,.LOOP_AFF
BOOH
	LEA	DONNêES_AFFICH2,A6
	MOVE	(A6)+,D7
.LOOP_AFF	MOVE.L	D7,-(SP)
	;MOVE	(A6)+,MOD_PLAN
	MOVE	(A6)+,MOD_PLAN2
	LEA	COORD2,A0
	LEA	face_en_cours,A1
	MOVE	(A6),(A1)+
	MOVE	(A6)+,D6
	SUBQ	#1,D6
.FACES	MOVE	(A6)+,D5
	MOVE.L	(A0,D5.W),(A1)+
	DBF	D6,.FACES
	LEA	face_en_cours,A0
	MOVE.L	A6,-(SP)
	JSR	RT_POLY2
	MOVE.L	(SP)+,A6
	MOVE.L	(SP)+,D7
	DBF	D7,.LOOP_AFF

	MOVE.L	A3,ADR_TABLOS
	ADDQ	#1,SPE
	CMPI	#2,SPE
	BNE.S	.FOI
	MOVE.L	A3,SAVE_POUR_APRES
.FOI	RTS
SAVE_POUR_APRES	DC.L	0
face_en_cours	dC.w	4
	ds.l	100

PROJETTE	LEA	CORES_X,A2
	LEA	COEFF+COEFF_INIT*2,A1	380*2
	LEA	COORD,A5
	MOVE.W	#NB_PTS_-1,D7
AFF_ALL	MOVE.W	(A0)+,D0
	MOVE.W	(A0)+,D1
	MOVE.W	(A0)+,D2
	ADD.W	Z_BASE,D2
	ADD.W	D2,D2
	MOVE.W	(A1,D2.W),D2
	MULS.W	D2,D0
	ASR.L	#8,D0
	MULS.W	D2,D1
	ASR.L	#8,D1
MOD_X	ADDI.W	#X_DEP,D0
MOD_Y	ADDI.W	#100,D1
	MOVE	D0,(A5)+
	MOVE	D1,(A5)+
	;MULS.W	#160,D1
	;ADD.W	D0,D0
	;ADD.W	D0,D0
	;ADD.W	2(A2,D0.W),D1
	;MOVE.W	(A2,D0.W),D0
	;OR.W	D0,(A3,D1.W)
	DBRA	D7,AFF_ALL
	RTS
PROJETTE2	LEA	CORES_X,A2
	LEA	COEFF+COEFF_INIT*2,A1	380*2
	LEA	COORD2,A5
	MOVE.W	#NB_PTS_2-1,D7
AFF_ALL2	MOVE.W	(A0)+,D0
	MOVE.W	(A0)+,D1
	MOVE.W	(A0)+,D2
	ADD.W	Z_BASE,D2
	ADD.W	D2,D2
	MOVE.W	(A1,D2.W),D2
	MULS.W	D2,D0
	ASR.L	#8,D0
	MULS.W	D2,D1
	ASR.L	#8,D1
	ADDI.W	#X_DEP,D0
	ADDI.W	#100,D1
	MOVE	D0,(A5)+
	MOVE	D1,(A5)+
	;MULS.W	#160,D1
	;ADD.W	D0,D0
	;ADD.W	D0,D0
	;ADD.W	2(A2,D0.W),D1
	;MOVE.W	(A2,D0.W),D0
	;OR.W	D0,(A3,D1.W)
	DBRA	D7,AFF_ALL2
	RTS

COORD	DCB	2*NB_PTS_,0
COORD2	DCB	2*NB_PTS_2,0

;ENTRêES : A0=TABLE DE POINTS ( .W:NB DE POINTS, ET LES POINTS)
;          A1=TABLE D'ANGLE ( ANGLE X, ANGLE Y, ANGLE Z)
;          A6=TABLE DE TRANSLATION ( U_X, U_Y, U_Z)
;          A2=TABLE DE DESTINATION POUR LES POINTS

;Formules de rotation 3 axes:
;X'=X[SIN(T)SIN(U)SIN(V)+COS(T)COS(V)]+Y[COS(T)SIN(U)SIN(V)-SIN(T)COS(V)]+Z[COS(U)SIN(V)]
;Y'=X[SIN(T)COS(U)]+Y[COS(T)COS(U)]-ZSIN(U)
;Z'=X[SIN(T)SIN(U)COS(V)-COS(T)SIN(V)]+Y[COS(T)SIN(U)COS(V)+SIN(T)SIN(V)]+Z[COS(U)COS(V)]
ROTATE	LEA	SINUS(PC),A4	;SINUS
	LEA	LONG_SINUS/4(A4),A3	;COSINUS

	MOVE.W	(A1)+,D0	;ANGLE_X
	ADD.W	D0,D0
	MOVE.W	(A3,D0.W),D1	;COSINUS TETA_X
	MOVE.W	(A4,D0.W),D0	;SINUS TETA_X

	MOVE.W	(A1)+,D2	;ANGLE_Y
	ADD.W	D2,D2
	MOVE.W	(A3,D2.W),D3	;COSINUS TETA_Y
	MOVE.W	(A4,D2.W),D2	;SINUS TETA_Y

	MOVE.W	(A1)+,D4	;ANGLE_Z
	ADD.W	D4,D4
	MOVE.W	(A3,D4.W),D5	;COSINUS TETA_Z
	MOVE.W	(A4,D4.W),D4	;SINUS TETA_Z

	LEA	MATRICE,A4
	LEA	LOGARITHMES+512*2(PC),A3
	;ON FABRIQUE SIN(T)*SIN(U)*SIN(V)+COS(T)*COS(V)
	MOVE.W	D0,D6	;D6=SIN(T)
	MULS.W	D2,D6	;D6=SIN(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D4,D6	;D6=SIN(T)*SIN(U)*SIN(V)
	MOVE.W	D1,D7	;D7=COS(T)
	MULS.W	D5,D7	;D7=COS(T)*COS(V)
	ADD.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	TST.W	D6
	BNE.S	.OK1
	MOVEQ	#1*2,D6
.OK1	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(T)*SIN(U)*SIN(V)-SIN(T)*COS(V)
	MOVE.W	D1,D6	;D6=COS(T)
	MULS.W	D2,D6	;D6=COS(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D4,D6	;D6=COS(T)*SIN(U)*SIN(V)
	MOVE.W	D0,D7	;D7=SIN(T)
	MULS.W	D5,D7	;D7=SIN(T)*COS(V)
	SUB.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	TST.W	D6
	BNE.S	.OK2
	MOVEQ	#1*2,D6
.OK2	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(U)*SIN(V)
	MOVE.W	D3,D6	;D6=COS(U)
	MULS.W	D4,D6	;D6=COS(U)*SIN(V)
	ASR.L	#8,D6
	ADD.W	D6,D6
	TST.W	D6
	BNE.S	.OK3
	MOVEQ	#1*2,D6
.OK3	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE SIN(T)*COS(U)
	MOVE.W	D0,D6	;D6=SIN(T)
	MULS.W	D3,D6	;D6=SIN(T)*COS(U)
	ASR.L	#8,D6
	ADD.W	D6,D6
	TST.W	D6
	BNE.S	.OK4
	MOVEQ	#1*2,D6
.OK4	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(T)*COS(U)
	MOVE.W	D1,D6	;D6=COS(T)
	MULS.W	D3,D6	;D6=COS(T)*COS(U)
	ASR.L	#8,D6
	ADD.W	D6,D6
	TST.W	D6
	BNE.S	.OK5
	MOVEQ	#1*2,D6
.OK5	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE -SIN(U)
	MOVE.W	D2,D6
	NEG.W	D6
	ADD.W	D6,D6
	TST.W	D6
	BNE.S	.OK6
	MOVEQ	#1*2,D6
.OK6	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE SIN(T)*SIN(U)*COS(V)-COS(T)*SIN(V)
	MOVE.W	D0,D6	;D6=SIN(T)
	MULS.W	D2,D6	;D6=SIN(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D5,D6	;D6=SIN(T)*SIN(U)*COS(V)
	MOVE.W	D1,D7	;D7=COS(T)
	MULS.W	D4,D7	;D7=COS(T)*SIN(V)
	SUB.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	TST.W	D6
	BNE.S	.OK7
	MOVEQ	#1*2,D6
.OK7	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(T)*SIN(U)*COS(V)+SIN(T)*SIN(V)
	MOVE.W	D1,D6	;D6=COS(T)
	MULS.W	D2,D6	;D6=COS(T)*SIN(U)
	ASR.L	#8,D6
	MULS.W	D5,D6	;D6=COS(T)*SIN(U)*COS(V)
	MOVE.W	D0,D7	;D7=SIN(T)
	MULS.W	D4,D7	;D7=SIN(T)*SIN(V)
	ADD.L	D7,D6
	ASR.L	#8,D6
	ADD.W	D6,D6
	TST.W	D6
	BNE.S	.OK8
	MOVEQ	#1*2,D6
.OK8	MOVE.W	(A3,D6.W),(A4)+

	;ON FABRIQUE COS(U)*COS(V)
	MULS.W	D3,D5	;D5=COS(U)*COS(V)
	ASR.L	#8,D5
	ADD.W	D5,D5
	TST.W	D5
	BNE.S	.OK9
	MOVEQ	#1*2,D5
.OK9	MOVE.W	(A3,D5.W),(A4)+

	MOVE.W	(A6)+,D0
	ADD.W	D0,D0	;U_X*2
	MOVE.W	D0,TRANSLATE_X
	MOVE.W	(A6)+,D0
	ADD.W	D0,D0	;U_Y*2
	MOVE.W	D0,TRANSLATE_Y
	MOVE.W	(A6),D0
	ADD.W	D0,D0	;U_Z*2
	MOVE.W	D0,TRANSLATE_Z

	MOVE.W	(A0)+,D7	;D7=NB DE POINTS
	SUBQ.W	#1,D7
	MOVE.L	#MATRICE,D6
	LEA	BUF_EXP,A5

ROTATE_ALL	MOVE.L	D6,A4
	MOVE.W	(A0)+,D0	;X*2
TRANSLATE_X = *+2
	ADDI.W	#$1234,D0
	MOVE.W	(A0)+,D1	;Y*2
TRANSLATE_Y = *+2
	ADDI.W	#$1234,D1
	MOVE.W	(A0)+,D2	;Z*2
TRANSLATE_Z = *+2
	ADDI.W	#$1234,D2

	REPT	3
	MOVE.W	(A3,D0.W),D3	;LOG(X)
	ADD.W	(A4)+,D3	;LOG(X)+LOG(COEFF)
	MOVE.W	(A5,D3.W),D3	;D3=X*COEFF
	MOVE.W	(A3,D1.W),D4	;LOG(Y)
	ADD.W	(A4)+,D4	;LOG(Y)+LOG(COEFF)
	MOVE.W	(A5,D4.W),D4	;D4=Y*COEFF
	MOVE.W	(A3,D2.W),D5	;LOG(Z)
	ADD.W	(A4)+,D5	;LOG(Z)+LOG(COEFF)
	MOVE.W	(A5,D5.W),D5	;D5=Z*COEFF
	ADD.W	D4,D3
	ADD.W	D5,D3
	MOVE.W	D3,(A2)+
	ENDR

	DBRA	D7,ROTATE_ALL
	RTS

PREPA_LOG_EXP	;ON ARRANGE LA PARTIE NEGATIVE DE LA TABLE DES LOG.
	LEA	LOGARITHMES(PC),A0
	MOVE.W	#512-1,D7
LOG_NEGATIFS	MOVE.W	(A0),D0
	ADD.W	D0,D0
	ADDI.W	#LONG_EXP/2,D0
	MOVE.W	D0,(A0)+
	DBRA	D7,LOG_NEGATIFS
	MOVE.W	#LONG_EXP/2,D7
	MULU.W	#3,D7
	MOVE.W	D7,(A0)+	;D7=LONG_EXP*3 (ZERO)
	MOVE.W	#512-1,D7
LOG_POSITIFS	MOVE.W	(A0),D0
	ADD.W	D0,D0
	MOVE.W	D0,(A0)+	;LOG*2
	DBRA	D7,LOG_POSITIFS

;ON CREE LA PARTIE NEGATIVE ET LA 2EME PARTIE POSITIVE DES EXPONENTIELLES.
	LEA	EXPONENTIELLES(PC),A0
	LEA	BUF_EXP,A1
	LEA	LONG_EXP/2(A1),A2
	LEA	LONG_EXP/2(A2),A3
	MOVE.W	#LONG_EXP/4-1,D7
MAKE_EXP	MOVEQ	#0,D0
	MOVE.L	(A0)+,D0
	LSR.L	#8,D0	;VALEUR REELLE DU RESULTAT
	MOVE.W	D0,(A1)+
	MOVE.W	D0,(A3)+
	NEG.W	D0
	MOVE.W	D0,(A2)+
	DBRA	D7,MAKE_EXP

;ON CREE LES 2 TABLES DE ZERO LONGUES CHACUNES DE LONG_EXP.
	LEA	BUF_EXP+(LONG_EXP/2)*3,A0
	MOVE.W	#(LONG_EXP/4)*2-1,D7
MAKE_ZERO_TABLE	CLR.W	(A0)+
	DBRA	D7,MAKE_ZERO_TABLE
	RTS

SINUS	INCBIN	SINUSROT.DAT
LONG_SINUS = *-SINUS
	DCB.W	LONG_SINUS/4,0

LOGARITHMES	INCBIN	LOG512.LOG

EXPONENTIELLES	INCBIN	EXP512.EXP
LONG_EXP = *-EXPONENTIELLES

COEFF	INCBIN	COEFF2.3D

	DCB.W	500,0
N	SET	0
CORES_X	REPT	20
	DC.W	32768,N,16384,N,8192,N,4096,N,2048,N,1024,N,512,N,256,N,128,N,64,N,32,N,16,N,8,N,4,N,2,N,1,N
N	SET	N+8
	ENDR
	DCB.W	500,0

*** Partie affichage
CHOICE	DC	0	;0=MOVE
			;1=OR
INIT_ROUT_POLY	LEA	BUF_COD_GEN,A0
	LEA	TABLE_ADR_COD,A1

	MOVE.L	#RETOUR_POLY,(A1)+
	MOVEQ	#9-1,D3
.GO	MOVE.L	#RT_COOL,(A1)+
	DBRA	D3,.GO

	MOVE.W	#$FFFF,D0	;1ER MOTIF
	MOVE.W	#$8000,D1	;DERNIER MOTIF
	MOVEQ	#0,D3	;DECALAGE

	MOVEQ	#16-1,D6
.DECAL
	MOVEQ	#16+1,D5
	ADD.W	#18*16,D5	;D5=LONGUEUR DE LA LIGNE
	ADD.W	D3,D5

	MOVE.W	#-144,D4
	MOVEQ	#18-1,D7
.COPY_MOVED7	BSR	POZ_ADRESSE
	MOVE.W	#$3B47,(A0)+	;MOVE.W D7,d16(A5)
	MOVE.W	D4,(A0)+
	ADDQ.W	#8,D4
	SUBI.W	#16,D5
	DBRA	D7,.COPY_MOVED7

	MOVE.W	#16+1,D5
	ADD.W	D3,D5
	BSR	POZ_ADRESSE
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_1
	MOVE.W	#$3887,(A0)+	;MOVE.W D7,(A4)
	BRA.S	.RETOUR_1
.PAS_D7_1
	TST	CHOICE
	BNE.S	.OR1
	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	BRA.S	.MOV1
.OR1	MOVE	#$0054,(A0)+	OR.W #$Imm,(A4)
.MOV1	MOVE.W	D0,(A0)+
.RETOUR_1	MOVE.W	#1,D5
	ADD.W	D3,D5
	BSR	POZ_ADRESSE
	CMPI.W	#-1,D1
	BNE.S	.PAS_D7_2
	MOVE.W	#$3A87,(A0)+	;MOVE.W D7,(A5)
	BRA.S	.RETOUR_2
.PAS_D7_2
	TST	CHOICE
	BNE.S	.OR2
	MOVE.W	#$3ABC,(A0)+	;MOVE.W #$Imm,(A5)
	BRA.S	.MOV2
.OR2	MOVE	#$0055,(A0)+	OR "             "
.MOV2	MOVE.W	D1,(A0)+
.RETOUR_2
	BSR	COPY_RT_COOL

	ASR.W	#1,D1
	ADDQ.W	#1,D3	;LONGUEUR SUIVANT
	DBRA	D6,.DECAL

	LEA	TABLE_ADR_COD+1320,A1

	MOVE.W	#$7FFF,D3	;1ER MOTIF
	MOVEQ	#14,D5

	MOVEQ	#14,D2
ALL_RT
	MOVE.L	#RETOUR_POLY,(A1)+
	MOVEQ	#9-1,D0
.GO	MOVE.L	#RT_COOL,(A1)+
	DBRA	D0,.GO

	MOVE.W	#1,A3

	MOVEQ	#0,D0
	MOVE.W	D5,D6
LITTLE	BSR	POZ_ADRESSE2
	BSET	D6,D0
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_LITTLE
	MOVE.W	#$3887,(A0)+
	BRA.S	.RETOUR_LITTLE
.PAS_D7_LITTLE
	TST	CHOICE
	BNE.S	.OR3
	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	BRA.S	.MOV3
.OR3	MOVE	#$0054,(A0)+
.MOV3	MOVE.W	D0,(A0)+

.RETOUR_LITTLE
	BSR	COPY_RT_COOL

	ADDQ.W	#1,A3
	DBRA	D6,LITTLE

	MOVE.W	D3,D0
	MOVE.W	#$8000,D1	;DERNIER MOTIF

	MOVEQ	#16-1,D6
DECAL
	MOVE.W	#18*16,A3
	ADD.W	D5,A3
	ADDQ.W	#1,A3
	MOVEQ	#16,D4
	SUB.W	D6,D4
	ADDA.W	D4,A3

	MOVE.W	#-144,D4
	MOVEQ	#18-1,D7
COPY_MOVED7	BSR	POZ_ADRESSE2
	MOVE.W	#$3B47,(A0)+	;MOVE.W D7,d16(A5)
	MOVE.W	D4,(A0)+
	ADDQ.W	#8,D4
	LEA	-16(A3),A3
	DBRA	D7,COPY_MOVED7

	MOVE.W	D5,A3
	ADDQ.W	#1,A3
	MOVEQ	#16,D4
	SUB.W	D6,D4
	ADDA.W	D4,A3
	BSR	POZ_ADRESSE2
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_3
	MOVE.W	#$3887,(A0)+	;MOVE.W D7,(A4)
	BRA.S	.RETOUR_3
.PAS_D7_3
	TST	CHOICE
	BNE.S	.OR4
	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	BRA.S	.MOV4
.OR4	MOVE	#$0054,(A0)+
.MOV4	MOVE.W	D0,(A0)+
.RETOUR_3	CMPI.W	#-1,D1
	BNE.S	.PAS_D7_4
	MOVE.W	#$3A87,(A0)+	;MOVE.W D7,(A5)
	BRA.S	.RETOUR_4
.PAS_D7_4
	TST	CHOICE
	BNE.S	.OR5
	MOVE.W	#$3ABC,(A0)+	;MOVE.W #$Imm,(A5)
	BRA.S	.MOV5
.OR5	MOVE	#$0055,(A0)+
.MOV5	MOVE.W	D1,(A0)+
.RETOUR_4
	BSR	COPY_RT_COOL

	ASR.W	#1,D1
	DBRA	D6,DECAL

	SUBQ.W	#1,D5
	LSR.W	#1,D3
	LEA	1280(A1),A1
	DBRA	D2,ALL_RT

*******
TBL4:	LEA	TABLE_A4,A0
	MOVE	#639,D7
.DEBT	CLR.L	(A0)+
	DBF	D7,.DEBT

	LEA	MINI_TABLE,A1
	MOVEQ	#0,D6	D6=X
	MOVEQ	#20-1,D7
.F	MOVEQ	#16-1,D0
.SXTEEN	MOVE	D6,(A0)+
	MOVE	(A1),(A0)+
	ADDQ	#4,D6
	DBF	D0,.SXTEEN
	ADDQ	#2,A1
	DBF	D7,.F

	MOVE	#639,D7
.FINT	MOVE	#319*4,(A0)+
	MOVE	#152,(A0)+
	;CLR	(A0)+
	DBF	D7,.FINT
TBL2:
	LEA	TABLE_A2,A0
	MOVE	#639,D7
.DEBT	CLR.L	(A0)+
	DBF	D7,.DEBT

	LEA	MINI_TABLE,A1
	MOVEQ	#0,D6	D6=X
	MOVEQ	#20-1,D7
.F	MOVEQ	#16-1,D0
.SXTEEN	MOVE	(A1),(A0)+
	MOVE	D6,(A0)
	MOVE	D6,D5
	LSR	#2,D5
	AND	#15,D5
	MULU	#1320,D5
	SUB	D5,(A0)+
	ADDQ	#4,D6
	DBF	D0,.SXTEEN
	ADDQ	#2,A1
	DBF	D7,.F

	MOVE	#639,D7
.FINT	;CLR	(A0)+
	MOVE	#152,(A0)+
	MOVE	#319*4,(A0)+
	DBF	D7,.FINT
	RTS

MINI_TABLE
N	SET	0
	REPT	20
	DC	N
N	SET	N+8
	ENDR

POZ_ADRESSE2	MOVEM.L	D5/A0,-(SP)
	MOVE.W	A3,D5
	SUBQ.W	#1,D5
	ADD.W	D5,D5
	ADD.W	D5,D5
;	SUBA.L	#BUF_COD_GEN,A0
	MOVE.L	A0,(A1,D5.W)
	MOVEM.L	(SP)+,D5/A0
	RTS

POZ_ADRESSE	MOVEM.L	D5/A0,-(SP)
	SUBQ.W	#1,D5
	ADD.W	D5,D5
	ADD.W	D5,D5
;	SUBA.L	#BUF_COD_GEN,A0
	MOVE.L	A0,(A1,D5.W)
	MOVEM.L	(SP)+,D5/A0
	RTS

COPY_RT_COOL	LEA	RT_COOL,A6
	MOVE.W	#LONG_RT_COOL,D7
.COPY	MOVE.W	(A6)+,(A0)+
	DBRA	D7,.COPY
	RTS

RT_COOL	ADD.L	D5,D6	1  PROCHAINE LIGNE:+160
	MOVE.L	D6,A4	1  A3=ADR ECRAN EN .W, WARNING!
	MOVE.L	A4,A5	1  A6=ECRAN TOO (LE A5 DE FULBERT)
	MOVE.L	D4,A2	1  D4=A2=TABLE_A2

	MOVE.W	(A1)+,D1	2  X2
	ADD.W	D1,D1	1  
	ADD.W	D1,D1	1

	MOVE.L	(A3,D1.W),D3	5
	ADD	D3,A5	2
	SWAP	D3	1

	MOVE.W	(A0)+,D1	2  X1
	ADD	D1,D1	1
	ADD	D1,D1	1
	ADD	D1,A2	2  A2=TABLE_A2+X1*4
	ADD	(A2)+,A4	3  OFFSET. A3=>1ER MOT
	SUB	(A2),D3	2  (A2)=X1*2-LE DêCALAGE... RUSê, HEIN?
	   ;D'OU D3=X2*2-(X1*2-DêCALAGE)=(X2-X1)*2+DêCALAGE, ZOU.
	MOVE.L	(A6,D3.W),A2	;5
	JMP	(A2)	;2

;TOTAL:31 NOPS. +58=89 NOPS.
LONG_RT_COOL = ((*-RT_COOL)/2)-1

RT_POLY
	TST	VISION
	BEQ.S	.NO
	MOVE.L	ADR_VISION,A1
	CLR.B	(A1)+
	MOVE.L	A1,ADR_VISION
.NO
	MOVE.L	A0,ADR_DEPART
	MOVE	#$4E75,MODIFIê
	LEA	2(A0),A1	;A1 POINTE SUR LES POINTS
	MOVE.W	(A1),D3
	SUB.W	4(A1),D3
	MOVE.W	2(A1),D4
	SUB.W	6(A1),D4
	MOVE.W	8(A1),D6
	SUB.W	4(A1),D6
	MOVE.W	$A(A1),D5
	SUB.W	6(A1),D5
	MULS.W	D3,D5
	MULS.W	D6,D4
	SUB.L	D4,D5
	BGT.S	.VISIBLE
	RTS
.VISIBLE
	LEA	REMP_GAUCHE,A6
	MOVE	#259,D0
.KILL1	CLR	(A6)+
	DBF	D0,.KILL1
	LEA	REMP_DROIT,A6
	MOVE	#259,D0
.KILL2	CLR	(A6)+
	DBF	D0,.KILL2

	;MOVE	#25,REMP_GAUCHE+201*2
	;MOVE	#15,REMP_DROIT+201*2

	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	MOVEQ	#0,D6
	MOVEQ	#0,D7

	MOVE.W	(A0)+,D0	;NB DE POINTS COMPOSANT LA SURFACE
	LEA	BUF_EXAM,A1
	MOVE.L	A0,A2
	SUBQ.W	#1,D0
	MOVE.W	D0,NB_PTS
.COPYING	MOVE.L	(A0)+,(A1)+
	DBRA	D0,.COPYING
	MOVE.L	(A2),(A1)+

	LEA	BUF_EXAM,A0
	LEA	BUF_GAUCHE,A2
	LEA	BUF_DROIT,A3
	ADDQ.W	#4,A0
	MOVE.W	-2(A0),D3	;Y DE REFERENCE
NB_PTS = *+2
	MOVE.W	#$1234,D0
	MOVEQ	#-1,D6
	MOVEQ	#-1,D7
ALL_PTS	MOVE.W	(A0),D1	;X
	MOVE.W	2(A0),D2	;Y
	CMP.W	D2,D3
	BGE.S	ON_MONTE
ON_DESCEND	MOVE.L	-4(A0),(A2)+
	MOVE.L	(A0)+,(A2)+
	MOVE.W	D2,D3
	ADDQ.W	#1,D6
	DBRA	D0,ALL_PTS
	BRA.S	FINITO
ON_MONTE	MOVE.L	-4(A0),(A3)+
	MOVE.L	(A0)+,(A3)+
	MOVE.W	D2,D3
	ADDQ.W	#1,D7
	DBRA	D0,ALL_PTS
FINITO	;ICI LES TABLEAU BUF_GAUCHE ET BUF_DROIT SONT CONSTITUêS
	;D6=NB DE PTS-1 DANS BUF_GAUCHE
	;D7=NB DE PTS-1 DANS BUF_DROIT

	LEA	BUF_GAUCHE,A0
MAKE_REMP_GAUCHE
	LEA	REMP_GAUCHE,A1
	MOVE.W	(A0)+,D0	;X1
	MOVE.W	(A0)+,D1	;Y1
	MOVE.W	(A0)+,D2	;X2
	MOVE.W	(A0)+,D3	;Y2
	BSR	CLIPPING_Y
	TST.W	D5
	BLT.S	.NEXT
	MOVE	#$4E71,MODIFIê
	SUB.W	D1,D3	;HAUTEUR-1 DU SEGMENT
	BEQ.S	.NEXT

	ADD.W	D1,D1
	ADDA.W	D1,A1

	ADDQ.W	#1,D3
	SUB.W	D0,D2
	BNE.S	.PAS_VERTICALE
.VERTICALE	SUBQ.W	#1,D3
.PUT	MOVE.W	D0,(A1)+
	DBRA	D3,.PUT
	BRA.S	.NEXT
.PAS_VERTICALE	EXT.L	D2
	MOVEQ	#8,D4
	ASL.L	D4,D2
	DIVS.W	D3,D2
	EXT.L	D2
	ASL.L	#8,D2
	SUBQ.W	#2,D3
	EXT.L	D0
	MOVEQ	#16,D4
	MOVE.W	D0,(A1)+
	ASL.L	D4,D0
.MK_X	ADD.L	D2,D0
	MOVE.L	D0,D1
	SWAP	D1
	MOVE.W	D1,(A1)+
	DBRA	D3,.MK_X
.NEXT	DBRA	D6,MAKE_REMP_GAUCHE

MODIFIê	RTS

	TST	VISION
	BEQ.S	.NO2
	MOVE.L	ADR_VISION,A0
	MOVE.B	#1,-1(A0)
.NO2

	LEA	BUF_DROIT,A0
MAKE_REMP_DROIT	LEA	REMP_DROIT,A1
	MOVE.W	(A0)+,D0	;X1
	MOVE.W	(A0)+,D1	;Y1
	MOVE.W	(A0)+,D2	;X2
	MOVE.W	(A0)+,D3	;Y2
	BSR	CLIPPING_Y
	TST.W	D5
	BLT.S	.NEXT
	SUB.W	D3,D1	;HAUTEUR-1 DU SEGMENT
	BEQ.S	.NEXT

	ADD.W	D3,D3
	ADDA.W	D3,A1

	ADDQ.W	#1,D1
	SUB.W	D2,D0
	BNE.S	.PAS_VERTICALE
.VERTICALE	SUBQ.W	#1,D1
.PUT	MOVE.W	D2,(A1)+
	DBRA	D1,.PUT
	BRA.S	.NEXT
.PAS_VERTICALE	EXT.L	D0
	MOVEQ	#8,D4
	ASL.L	D4,D0
	DIVS.W	D1,D0
	EXT.L	D0
	ASL.L	#8,D0
	SUBQ.W	#2,D1
	MOVE.W	D2,(A1)+
	EXT.L	D2
	MOVEQ	#16,D4
	ASL.L	D4,D2
.MK_X	ADD.L	D0,D2
	MOVE.L	D2,D3
	SWAP	D3
	MOVE.W	D3,(A1)+
	DBRA	D1,.MK_X
.NEXT	DBRA	D7,MAKE_REMP_DROIT

*****
ADR_DEPART= *+2
	LEA	$12345678,A0
	MOVE.W	(A0)+,D7
	SUBQ.W	#1,D7
	MOVE.W	#-1000,D0	;MAXIMUM
	MOVE.W	#20000,D1	;MINIMUM
.TEST_MAX	CMP.W	2(A0),D0
	BGE.S	.FUCK
	MOVE.W	2(A0),D0
.FUCK	CMP.W	2(A0),D1
	BLE.S	.FUCK_2
	MOVE.W	2(A0),D1
.FUCK_2	ADDQ.W	#4,A0
	DBRA	D7,.TEST_MAX
	;D0 = Y MAXIMUM
	;D1 = Y MINIMUM

	CMPI.W	#200,D0
	BLT.S	.OK_Y_MAX
	MOVE.W	#199,D0
.OK_Y_MAX	TST.W	D1
	BGE.S	.OK_Y_MIN
	MOVEQ	#0,D1
.OK_Y_MIN

INIT	LEA	REMP_GAUCHE,A0
	LEA	REMP_DROIT,A1
	ADDQ.W	#1,D0
	ADD.W	D0,D0
	MOVE	D1,D2
	MOVE.W	#15,(A1,D0.W)
	MOVE.W	#$9999,2(A1,D0.W)
	MOVE.W	#25,(A0,D0.W)

.F	ADD.W	D1,D1
	ADDA.W	D1,A0
	ADDA.W	D1,A1
	MULU.W	#80,D1       ;D1=Y_MIN*160 (POUR ADD ECRAN)

	SWAP	D1
	CLR	D1
	SWAP	D1

	;JSR	GERE_STRECH
	
MODIF	NOP
	NOP
	NOP
	LEA	TABLE_ADR_COD+40,A6
	MOVEQ	#-1,D7
	MOVE.L	SCREEN2,D6
MOD_PLAN	NOP
	ADD.L	D1,D6	;...+Y_MIN*160
	SUBI.L	#160,D6
	MOVE.L	#TABLE_A2+640*4,D4
	MOVE.L	#160,D5
	LEA	TABLE_A4+640*4,A3
	MOVEQ	#0,D2

	ADD.L	D5,D6	1  PROCHAINE LIGNE:+160
	MOVE.L	D6,A4	1  A3=ADR ECRAN EN .W, WARNING!
	MOVE.L	A4,A5	1  A6=ECRAN TOO (LE A5 DE FULBERT)
	MOVE.L	D4,A2	1  D4=A2=TABLE_A2
	MOVE.W	(A1)+,D1	2  X2
	ADD.W	D1,D1	1  
	ADD.W	D1,D1	1
	MOVE.L	(A3,D1.W),D3	5
	ADD	D3,A5	2
	SWAP	D3	1
	MOVE.W	(A0)+,D1	2  X1
	ADD	D1,D1	1
	ADD	D1,D1	1
	ADD	D1,A2	2  A2=TABLE_A2+X1*4
	ADD	(A2)+,A4	3  OFFSET. A3=>1ER MOT
	SUB	(A2),D3	2  (A2)=X1*2-LE DêCALAGE*1320... RUSê, HEIN?   ;D'OU D3=X2*2-(X1*2-DêCALAGE)=(X2-X1)*2+DêCALAGE*1320, ZOU.
	MOVE.L	(A6,D3.W),A2
	JMP	(A2)

RETOUR_POLY	RTS

CLIPPING_Y	MOVEM.L	D4/D6/A6,-(SP)
	MOVEQ	#0,D5
	LEA	TABLE_Y,A6
	ADD.W	D1,D1
	ADD.W	D3,D3
	MOVEQ	#0,D4
	ADD.W	(A6,D1.W),D4
	ADD.W	(A6,D3.W),D4
	ASR.W	#1,D1
	ASR.W	#1,D3
	TST.W	D4
	BEQ	FIN_NORMALE
	CMPI.W	#-2,D4
	BEQ	RIEN_DU_TOUT
	CMPI.W	#4,D4
	BEQ	RIEN_DU_TOUT
	CMPI.W	#-1,D4
	BEQ	CLIP_HAUT
	CMPI.W	#2,D4
	BEQ	CLIP_BAS

CLIP_HAUT_BAS	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	MOVE.W	D2,D5
	SUB.W	D0,D5	;D5=X2-X1
	MULS.W	#200,D5	;D5=200*(X2-X1)
	DIVS.W	D4,D5
	DIVS.W	D4,D6
	ADD.W	D5,D6	;D6=X2 CLIPPê
	CMPI.W	#200,D1
	BGE.S	.C_EST_Y1
.C_EST_Y2	MOVE.W	D6,D2
	MOVE.W	#199,D3
	BRA.S	SUIT
.C_EST_Y1	MOVE.W	D6,D0
	MOVE.W	#199,D1

SUIT	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	DIVS.W	D4,D6
	;D6=X CLIPPê
	TST.W	D1
	BGE.S	.C_EST_Y2
.C_EST_Y1	MOVE.W	D6,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE
.C_EST_Y2	MOVE.W	D6,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE

CLIP_BAS	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	MOVE.W	D2,D5
	SUB.W	D0,D5	;D5=X2-X1
	MULS.W	#200,D5	;D5=200*(X2-X1)
	DIVS.W	D4,D5
	DIVS.W	D4,D6
	ADD.W	D5,D6	;D6=X2 CLIPPê
	CMPI.W	#200,D1
	BGE.S	.C_EST_Y1
.C_EST_Y2	MOVE.W	D6,D2
	MOVE.W	#199,D3
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE
.C_EST_Y1	MOVE.W	D6,D0
	MOVE.W	#199,D1
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE

CLIP_HAUT	MOVE.W	D3,D4
	SUB.W	D1,D4	;D4=Y2-Y1
	MOVE.W	D2,D5
	MULS.W	D1,D5	;D5=Y1*X2
	MOVE.W	D3,D6
	MULS.W	D0,D6	;D6=X1*Y2
	SUB.L	D5,D6	;D6=X1*Y2-Y1*X2
	DIVS.W	D4,D6
	;D6=X CLIPPê
	TST.W	D1
	BGE.S	.C_EST_Y2
.C_EST_Y1	MOVE.W	D6,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE
.C_EST_Y2	MOVE.W	D6,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D5
	BRA.S	FIN_NORMALE

RIEN_DU_TOUT	MOVE.W	#-1,D5
FIN_NORMALE	MOVEM.L	(SP)+,D4/D6/A6
	RTS
********************************************************************
INIT_ROUT_POLY2	LEA	BUF_COD_GEN2,A0
	LEA	TABLE_ADR_COD2,A1

	MOVE.L	#RETOUR_POLY,(A1)+
	MOVEQ	#9-1,D3
.GO	MOVE.L	#RT_COOL2,(A1)+
	DBRA	D3,.GO

	MOVE.W	#$FFFF,D0	;1ER MOTIF
	MOVE.W	#$8000,D1	;DERNIER MOTIF
	MOVEQ	#0,D3	;DECALAGE

	MOVEQ	#16-1,D6
.DECAL
	MOVEQ	#16+1,D5
	ADD.W	#18*16,D5	;D5=LONGUEUR DE LA LIGNE
	ADD.W	D3,D5

	MOVE.W	#-144,D4
	MOVEQ	#18-1,D7
.COPY_MOVED7	BSR	POZ_ADRESSE
	MOVE.W	#$3B47,(A0)+	;MOVE.W D7,d16(A5)
	MOVE.W	D4,(A0)+
	ADDQ.W	#8,D4
	SUBI.W	#16,D5
	DBRA	D7,.COPY_MOVED7

	MOVE.W	#16+1,D5
	ADD.W	D3,D5
	BSR	POZ_ADRESSE
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_1
	MOVE.W	#$3887,(A0)+	;MOVE.W D7,(A4)
	BRA.S	.RETOUR_1
.PAS_D7_1
	TST	CHOICE
	BNE.S	.OR1
	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	BRA.S	.MOV1
.OR1	MOVE	#$0054,(A0)+	OR.W #$Imm,(A4)
.MOV1	MOVE.W	D0,(A0)+
.RETOUR_1	MOVE.W	#1,D5
	ADD.W	D3,D5
	BSR	POZ_ADRESSE
	CMPI.W	#-1,D1
	BNE.S	.PAS_D7_2
	MOVE.W	#$3A87,(A0)+	;MOVE.W D7,(A5)
	BRA.S	.RETOUR_2
.PAS_D7_2
	TST	CHOICE
	BNE.S	.OR2
	MOVE.W	#$3ABC,(A0)+	;MOVE.W #$Imm,(A5)
	BRA.S	.MOV2
.OR2	MOVE	#$0055,(A0)+	OR "             "
.MOV2	MOVE.W	D1,(A0)+
.RETOUR_2
	BSR	COPY_RT_COOL2

	ASR.W	#1,D1
	ADDQ.W	#1,D3	;LONGUEUR SUIVANT
	DBRA	D6,.DECAL

	LEA	TABLE_ADR_COD2+1320,A1

	MOVE.W	#$7FFF,D3	;1ER MOTIF
	MOVEQ	#14,D5

	MOVEQ	#14,D2
ALL_RT2
	MOVE.L	#RETOUR_POLY,(A1)+
	MOVEQ	#9-1,D0
.GO	MOVE.L	#RT_COOL2,(A1)+
	DBRA	D0,.GO

	MOVE.W	#1,A3

	MOVEQ	#0,D0
	MOVE.W	D5,D6
LITTLE_TWO	BSR	POZ_ADRESSE2
	BSET	D6,D0
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_LITTLE
	MOVE.W	#$3887,(A0)+
	BRA.S	.RETOUR_LITTLE
.PAS_D7_LITTLE
	TST	CHOICE
	BNE.S	.OR3
	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	BRA.S	.MOV3
.OR3	MOVE	#$0054,(A0)+
.MOV3	MOVE.W	D0,(A0)+

.RETOUR_LITTLE
	BSR	COPY_RT_COOL2

	ADDQ.W	#1,A3
	DBRA	D6,LITTLE_TWO

	MOVE.W	D3,D0
	MOVE.W	#$8000,D1	;DERNIER MOTIF

	MOVEQ	#16-1,D6
DECAL_TWO
	MOVE.W	#18*16,A3
	ADD.W	D5,A3
	ADDQ.W	#1,A3
	MOVEQ	#16,D4
	SUB.W	D6,D4
	ADDA.W	D4,A3

	MOVE.W	#-144,D4
	MOVEQ	#18-1,D7
COPY_MOVED7_	BSR	POZ_ADRESSE2
	MOVE.W	#$3B47,(A0)+	;MOVE.W D7,d16(A5)
	MOVE.W	D4,(A0)+
	ADDQ.W	#8,D4
	LEA	-16(A3),A3
	DBRA	D7,COPY_MOVED7_

	MOVE.W	D5,A3
	ADDQ.W	#1,A3
	MOVEQ	#16,D4
	SUB.W	D6,D4
	ADDA.W	D4,A3
	BSR	POZ_ADRESSE2
	CMPI.W	#-1,D0
	BNE.S	.PAS_D7_3
	MOVE.W	#$3887,(A0)+	;MOVE.W D7,(A4)
	BRA.S	.RETOUR_3
.PAS_D7_3
	TST	CHOICE
	BNE.S	.OR4
	MOVE.W	#$38BC,(A0)+	;MOVE.W #$Imm,(A4)
	BRA.S	.MOV4
.OR4	MOVE	#$0054,(A0)+
.MOV4	MOVE.W	D0,(A0)+
.RETOUR_3	CMPI.W	#-1,D1
	BNE.S	.PAS_D7_4
	MOVE.W	#$3A87,(A0)+	;MOVE.W D7,(A5)
	BRA.S	.RETOUR_4
.PAS_D7_4
	TST	CHOICE
	BNE.S	.OR5
	MOVE.W	#$3ABC,(A0)+	;MOVE.W #$Imm,(A5)
	BRA.S	.MOV5
.OR5	MOVE	#$0055,(A0)+
.MOV5	MOVE.W	D1,(A0)+
.RETOUR_4
	BSR	COPY_RT_COOL2

	ASR.W	#1,D1
	DBRA	D6,DECAL_TWO

	SUBQ.W	#1,D5
	LSR.W	#1,D3
	LEA	1280(A1),A1
	DBRA	D2,ALL_RT2

	RTS

COPY_RT_COOL2	LEA	RT_COOL2,A6
	MOVE.W	#LONG_RT_COOL2,D7
.COPY	MOVE.W	(A6)+,(A0)+
	DBRA	D7,.COPY
	RTS

RT_COOL2	ADD.L	D5,D6	1  PROCHAINE LIGNE:+160
	MOVE.L	D6,A4	1  A3=ADR ECRAN EN .W, WARNING!
	MOVE.L	A4,A5	1  A6=ECRAN TOO (LE A5 DE FULBERT)

	MOVE.B	(A3)+,D3	2
	ADD	D3,A5	2

	MOVE.B	(A3)+,D3	2
	ADD	D3,A4	2

	MOVE	(A3)+,D4	2
	MOVE.L	(A6,D4.W),A2	5
	JMP	(A2)	2

LONG_RT_COOL2 = ((*-RT_COOL2)/2)-1

RT_POLY2
	LEA	2(A0),A1	;A1 POINTE SUR LES POINTS
;	MOVE.W	(A1),D3
;	SUB.W	4(A1),D3
;	MOVE.W	2(A1),D4
;	SUB.W	6(A1),D4
;	MOVE.W	8(A1),D6
;	SUB.W	4(A1),D6
;	MOVE.W	$A(A1),D5
;	SUB.W	6(A1),D5
;	MULS.W	D3,D5
;	MULS.W	D6,D4
;	SUB.L	D4,D5
;	BGT.S	.VISIBLE
;	RTS
;.VISIBLE

	MOVE.L	ADR_VISION,A6
	TST.B	(A6)+
	BNE.S	.CONTN
	MOVE.L	A6,ADR_VISION
	RTS
.CONTN	MOVE.L	A6,ADR_VISION

	MOVEQ	#0,D1
	MOVE	(A3)+,D1
APPEL	;MOVE.L	SAVE_ADR_TAB,A3

	LEA	TABLE_ADR_COD2+40,A6
	MOVEQ	#-1,D7
	MOVE.L	SCREEN2,D6
;	MOVE	MOD_PLAN,KODE_DE_KRAD
MOD_PLAN2	NOP
	ADD.L	D1,D6	;...+Y_MIN*160
	SUBI.L	#160,D6
	MOVE.L	#160,D5
	MOVEQ	#0,D2
	MOVEQ	#0,D3

	ADD.L	D5,D6	1  PROCHAINE LIGNE:+160
	MOVE.L	D6,A4	1  A3=ADR ECRAN EN .W, WARNING!
	MOVE.L	A4,A5	1  A6=ECRAN TOO (LE A5 DE FULBERT)

	;MOVEQ	#0,D3	1
	MOVE.B	(A3)+,D3	2
	ADD	D3,A5	2

	;MOVEQ	#0,D3	1
	MOVE.B	(A3)+,D3	2
	ADD	D3,A4	2

	MOVE	(A3)+,D4	2
	MOVE.L	(A6,D4.W),A2	5
	JMP	(A2)	2

VISION	DC	0
CREE_TABLOX
	LEA	MODIF,A1
	MOVE	#$4EF9,(A1)+
	MOVE.L	#JUMP,(A1)
	MOVE	#1,VISION
	RTS
JUMP
PRêCALC
	MOVE.L	#TABLE_A2+640*4,D4
	LEA	TABLE_A4+640*4,A3

	MOVE.L	ADR_TABLOS,A4
	MOVE	D1,(A4)+
.LOOP_PRê
	MOVE.L	D4,A2	1  D4=A2=TABLE_A2
	MOVE.W	(A1)+,D1	2  X2
	CMPI	#$9999,D1
	BNE.S	.NOT_END
	MOVE.L	A4,ADR_TABLOS
	RTS
.NOT_END	ADD.W	D1,D1	1  
	ADD.W	D1,D1	1
	MOVE.L	(A3,D1.W),D3	5
	MOVE.B	D3,(A4)+
	SWAP	D3	1
	MOVE.W	(A0)+,D1	2  X1
	ADD	D1,D1	1
	ADD	D1,D1	1
	ADD	D1,A2	2  A2=TABLE_A2+X1*4
	MOVE	(A2)+,D1
	MOVE.B	D1,(A4)+

	SUB	(A2),D3	2  (A2)=X1*2-LE DêCALAGE*1320... RUSê, HEIN?   ;D'OU D3=X2*2-(X1*2-DêCALAGE)=(X2-X1)*2+DêCALAGE*1320, ZOU.
	MOVE	D3,(A4)+
	BRA.S	.LOOP_PRê

GERE_STRECH
	;D1=YMIN, D0=YMAX

	MOVEM.L	D0-D7/A0-A6,-(SP)
	LEA	STRECHED_XS+322*2*32+320,A4

	LEA	COEFFS_STR_X,A5
MOD_STR2	EQU	*+2
	LEA	0(A5),A5
	CMPI	#$1234,(A5)
	BNE.S	.EZ
	CLR	MOD_STR2
	LEA	COEFFS_STR_X,A5
.EZ	
	ADDA	(A5)+,A4

	LEA	COORD,A0
	;LEA	COORD2,A1
	MOVE	#NB_PTS_+NB_PTS_2-1,D7
.STRX	MOVE	(A0),D4
	SUB	#160,D4
	ADD	D4,D4
	MOVE	(A4,D4.W),(A0)
	;MOVE	(A1),D4
	;SUB	#160,D4
	;ADD	D4,D4
	;MOVE	(A4,D4.W),(A1)
	ADDQ	#4,A0
	;ADDQ	#4,A1
	DBF	D7,.STRX

	LEA	COEFFS_STR,A0
MOD_STR	EQU	*+2
	LEA	0(A0),A0
	MOVE	(A0),D4	D4=New y
	MOVE	#200,D7
	SUB	D4,D7
	MOVE	D7,D2
	
*
	LEA	COORD+2,A0
	;LEA	COORD2+2,A1
	MOVE	#NB_PTS_+NB_PTS_2-1,D7
.STRY	MOVE	(A0),D0
	;MOVE	(A1),D1
	
	MULS	D4,D0
	DIVS	#200,D0
	ADD	D2,D0
	;MULS	D4,D1
	;DIVS	#200,D1
	;ADD	D2,D1
	MOVE	D0,(A0)
	;MOVE	D1,(A1)
	ADDQ	#4,A0
	;ADDQ	#4,A1
	DBF	D7,.STRY
*
	MOVEM.L	(SP)+,D0-D7/A0-A6
	RTS

COEFFS_STR
	DS.W	256+20

COEFFS_STR_X
	DS.W	256
	DC	$1234

PREP_STRECH

	LEA	COEFFS_STR,A0
	LEA	PROF,A1
	MOVE	#256-1,D7
.PO
	MOVE	(A1)+,D0
	ADD	#128,D0
	MULS	#90,D0
	LSR	#8,D0
	ADD	#110,D0
	MOVE	D0,(A0)+
	DBF	D7,.PO
	LEA	PROF,A1
	MOVE	#20-1,D7
.PO2
	MOVE	(A1)+,D0
	ADD	#128,D0
	MULS	#90,D0
	LSR	#8,D0
	ADD	#110,D0
	MOVE	D0,(A0)+
	DBF	D7,.PO2

	LEA	COEFFS_STR_X,A0
	LEA	PROF,A1
	MOVE	#256-1,D7
.PO3
	MOVE	(A1)+,D0
	ADD	#128,D0
	MULS	#30,D0
	LSR	#8,D0
	MULS	#644,D0
	MOVE	D0,(A0)+
	DBF	D7,.PO3

	LEA	STRECHED_XS,A0
	MOVE	#64,D0	Coeff
	MOVEQ	#64-1,D6
.AGAIN	MOVE	#320-1,D7
	MOVE	#-160,D4	X
.LOOP_STRECH	MOVEQ	#0,D2	
	MOVE	D4,D2
	MULS	D0,D2
	DIVS	#256,D2
	ADD	#160,D2

	TST	D2
	BGE.S	.OK1
	MOVEQ	#0,D2
.OK1	CMPI	#320,D2
	BLT.S	.OK2
	MOVE	#319,D2
.OK2
	;ADD	D2,D2
	;ADD	D2,D2

	MOVE	D2,(A0)+
	ADDQ	#1,D4
	DBF	D7,.LOOP_STRECH
	MOVE	#15*4,(A0)+
	MOVE	#25*4,(A0)+
	ADDQ	#8,D0
	DBF	D6,.AGAIN
	RTS

	DCB.W	2*640,-1
TABLE_Y	DCB.W	200,0
	DCB.W	2*640,2

ADX	DC	8	Z
ADY	DC	0	X
ADZ	DC	8	Y

PROF	DC	0
	INCLUDE	SIN.TAB
	DC	$1234

POINTS
	DC	NB_PTS_
Z	SET	0

 DC 0,80,Z
 DC 12,78,Z
 DC 25,75,Z
 DC 37,70,Z
 DC 48,63,Z
 DC 57,55,Z
 DC 65,45,Z
 DC 72,34,Z
 DC 76,22,Z
 DC 79,9,Z
 DC 79,-4,Z
 DC 78,-17,Z
 DC 74,-29,Z
 DC 69,-40,Z
 DC 61,-51,Z
 DC 53,-60,Z
 DC 42,-68,Z
 DC 31,-74,Z
 DC 19,-78,Z
 DC 6,-80,Z
 DC -7,-80,Z
 DC -20,-78,Z
 DC -32,-74,Z
 DC -43,-68,Z
 DC -54,-60,Z
 DC -62,-51,Z
 DC -70,-40,Z
 DC -75,-29,Z
 DC -79,-17,Z
 DC -80,-4,Z
 DC -80,9,Z
 DC -77,22,Z
 DC -73,34,Z
 DC -66,45,Z
 DC -58,55,Z
 DC -49,63,Z
 DC -38,70,Z
 DC -26,75,Z
 DC -13,78,Z
 DC -1,80,Z


DONNêES_AFFICH	
	DC	NB_FACES-1

 DC $4E71,40,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X18,X19,X20
 DC X21,X22,X23,X24,X25,X26,X27,X28,X29,X30,X31,X32,X33,X34,X35,X36,X37,X38,X39,X40


POINTS2
	DC	NB_PTS_2

N	SET	100
N2	SET	8
 DC 0,19,-N
 DC 0,-50,-N+N2
 DC 18,5,-N
 DC -48,-16,-N+N2
 DC 11,-16,-N
 DC -30,40,-N+N2
 DC -12,-16,-N
 DC 29,40,-N+N2
 DC -19,5,-N
 DC 47,-16,-N+N2

 DC 0,19,N
 DC 0,-50,N-N2
 DC 18,5,N
 DC -48,-16,N-N2
 DC 11,-16,N
 DC -30,40,N-N2
 DC -12,-16,N
 DC 29,40,N-N2
 DC -19,5,N
 DC 47,-16,N-N2

 DC 0,N,19
 DC 0,N-N2,-50
 DC 18,N,5
 DC -48,N-N2,-16
 DC 11,N,-16
 DC -30,N-N2,40
 DC -12,N,-16
 DC 29,N-N2,40
 DC -19,N,5
 DC 47,N-N2,-16

 DC 0,-N,19
 DC 0,-N+N2,-50
 DC 18,-N,5
 DC -48,-N+N2,-16
 DC 11,-N,-16
 DC -30,-N+N2,40
 DC -12,-N,-16
 DC 29,-N+N2,40
 DC -19,-N,5
 DC 47,-N+N2,-16


 DC N,19,0
 DC N-N2,-50,0
 DC N,5,18
 DC N-N2,-16,-48
 DC N,-16,11
 DC N-N2,40,-30
 DC N,-16,-12
 DC N-N2,40,29
 DC N,5,-19
 DC N-N2,-16,47

 DC -N,19,0
 DC -N+N2,-50,0
 DC -N,5,18
 DC -N+N2,-16,-48
 DC -N,-16,11
 DC -N+N2,40,-30
 DC -N,-16,-12
 DC -N+N2,40,29
 DC -N,5,-19
 DC -N+N2,-16,47
	

DONNêES_AFFICH2

	DC	NB_FACES2-1
	DC	$5C46,3,X2,X7,X5
	DC	$5446,3,X4,X9,X7
	DC	$5846,3,X6,X1,X9
	DC	$5C46,3,X8,X3,X1
	DC	$5446,3,X10,X5,X3

	DC	$5C46,3,X12,X15,X17
	DC	$5446,3,X14,X17,X19
	DC	$5846,3,X16,X19,X11
	DC	$5C46,3,X18,X11,X13
	DC	$5446,3,X20,X13,X15

	DC	$5C46,3,X22,X27,X25
	DC	$5446,3,X24,X29,X27
	DC	$5846,3,X26,X21,X29
	DC	$5C46,3,X28,X23,X21
	DC	$5446,3,X30,X25,X23

	DC	$5C46,3,X32,X35,X37
	DC	$5446,3,X34,X37,X39
	DC	$5846,3,X36,X39,X31
	DC	$5C46,3,X38,X31,X33
	DC	$5446,3,X40,X33,X35

	DC	$5C46,3,X42,X47,X45
	DC	$5446,3,X44,X49,X47
	DC	$5846,3,X46,X41,X49
	DC	$5C46,3,X48,X43,X41
	DC	$5446,3,X50,X45,X43

	DC	$5C46,3,X52,X55,X57
	DC	$5446,3,X54,X57,X59
	DC	$5846,3,X56,X59,X51
	DC	$5C46,3,X58,X51,X53
	DC	$5446,3,X60,X53,X55


ANGLES	DC.W	0,0,0
ANGLES_NULS	DC.W	0,0,0
TRANS	DC.W	0,0,0

;REB
;	INCLUDE	REBOND.CRB
;	DC	$1234

	SECTION	BSS
;BSS gÇnÇrale
DEB_BSS
SCREEN1	DS.L	1
SCREEN2	DS.L	1

	DS.B	256+10000
BUFFER	DS.B	160*256
	DS.B	160*256
	DS.B	160*256
	DS.B	160*256
Z_BASE	DS.W	1
;Calcul des points
MATRICE	DS.W	9
BUF_EXP	DS.W	(LONG_EXP/4)*5
NB_VBL	DS.W	1
BUF_PTS	DS.W	NB_PTS_*3
BUF_PTS2	DS.W	NB_PTS_2*3
;Routines d'affichage
TABLE_A4	DS.L	320+640*2
TABLE_A2	DS.L	320+640*2
BUF_EXAM	DS.W	2*50
BUF_GAUCHE	DS.W	4*50
BUF_DROIT	DS.W	4*50
REMP_GAUCHE	DS.W	260
REMP_DROIT	DS.W	260
TABLE_ADR_COD	DS.B	(1280+40)*16
TABLE_ADR_COD2	DS.B	(1280+40)*16
BUF_COD_GEN	DS.B	39000
BUF_COD_GEN2	DS.B	39000
;Infos prÇcalc
ADR_INFO	DS.L	1
BUF_INFO	DS.B	TIME_F+100
ADR_TABLO	DS.L	1
BUF_INFO_TABLO	DS.B	TIME_F+100
;Delta-packing
SAVE_VALUES	DS.W	4
RETOUR_STR	DS.L	1
STRECHED_XS	DS.W	(320+2)*64
BUF_TEMP	DS.B	32000*2
TEMP1	DS.L	1
TEMP2	DS.L	1
ADR_VISION	DS.L	1
BUF_VISION	DS.B	20000
TABLE_ADR	DS.L	1000
BUF_COD	DS.B	400000
;PrÇcalcul des tableaux
ADR_TABLOS	DS.L	1
BUF_TABLOS	DS.B	500000
END_BSS