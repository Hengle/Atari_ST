SEG=10*5+4*5
NB_PTS_C=4*10+4*4
PAS=3
NB_POS_C=(360/PAS)

SEG_H=28
NB_PTS_H=4*SEG_H
PAS_H=2
NB_POS_H=360/PAS_H

TAILLE=5056
NB_PTS=64
NB_POS=79

	clr	x_angle
	clr	y_angle
	clr	z_angle
	CLR.L	POINTEUR
	LEA	DATAS2,A1
	move	#256,z_pt_fuite
	move.l	#NB_POS-1,d7
ici	MOVEQ	#0,D0
	MOVEQ	#0,D1
	jsr	trigo
	MOVE	#NB_PTS-1,D6
UN_PT	jsr	sp_to_plO
	jsr	ROUTINE2
	DBF	D6,UN_PT
	ADD	#6,z_angle
	dbf	d7,ici
	clr	x_angle
	clr	y_angle
	clr	z_angle
	CLR.L	POINTEUR
	LEA	DATAS3,A1
	move	#256,z_pt_fuite
	move.l	#NB_POS-1,d7
ici2	MOVEQ	#0,D1
	MOVEQ	#0,D0
	jsr	trigo
	MOVE	#NB_PTS-1,D6
UN_PT2	jsr	sp_to_plO
	jsr	ROUTINE2
	DBF	D6,UN_PT2
	ADD	#6,y_angle
	dbf	d7,ici2

	LEA	TABLE_X,A0
	LEA	TABLE_X2,A1
	MOVEQ	#0,D0
DO_TX	MOVE.L	D0,D7
	MOVEQ	#0,D2
	DIVU	#16,D0
	MOVE	D0,D2
	LSL	#3,D2
	MOVE	D2,(A0)
	SWAP	D0
	CMPI	#$7,D0
	BGT.S	PLUS_UN
	BRA.S	PLUS_LOIN
PLUS_UN	ADDQ	#1,(A0)
	SUBQ.L	#8,D0
PLUS_LOIN	
	LEA	DKK,A5
	LSL	#3,D0
	JSR	(A5,D0.W)
	MOVE.B	D0,(A1)+
	LEA	2(A0),A0
	MOVE.L	D7,D0
	ADDQ.L	#1,D0
	CMPI.L	#320,D0
	BNE	DO_TX
	MOVE.L	#BUFEFF,D0
	MOVE.L	D0,DATEFF
	ADD.L	#64*6,D0
	MOVE.L	D0,DATEFF2
	JMP	PROG

DKK	MOVE.B	#%10000000,D0
	NOP
	RTS
	MOVE.B	#%01000000,D0
	NOP
	RTS
	MOVE.B	#%00100000,D0
	NOP
	RTS	
	MOVE.B	#%00010000,D0
	NOP
	RTS	
	MOVE.B	#%00001000,D0
	NOP
	RTS	
	MOVE.B	#%00000100,D0
	NOP
	RTS
	MOVE.B	#%00000010,D0
	NOP
	RTS
	MOVE.B	#%00000001,D0
	NOP
	RTS

**

sp_to_plO	movem.l d0-d7/a1-a6,-(a7)
	lea	DATAS,a6
	ADDA.L	POINTEUR,A6
	move	(a6)+,d0
	move	(a6)+,d1
	moveq	#0,d2
	ADDQ.L	#4,POINTEUR

	sub	#160,d0
	sub	#100,d1

	MOVEQ	#0,D3
	MOVEQ	#0,D4
	MOVEQ	#0,D5
	JMP	EXT_GO

sp_to_plH	movem.l d0-d7/a1-a6,-(a7)
	lea 	pointsH,a6
	ADDA.L	POINTEUR,A6
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	moveq	#0,d2
	move (a6)+,d0
	move (a6)+,d1
	ADD.L	#4,POINTEUR
	SUB	#160,D0
	SUB	#100,D1
	
	lea depla,a3
	moveq	#0,d3
	moveq	#0,d4
	move	#120,d5
	JMP	EXT_GO
	
ROUTINE2
	MOVE	xp,(A1)+
	MOVE	yp,(A1)+
	RTS

trigo	movem.l d0-d7/a4-a6,-(a7)
	lea cos_tab,a4
	lea sin_tab,a5
	lea x_angle,a6
	move (a6)+,d2
	move (a6)+,d1
	move (a6)+,d0
	move 0(a5,d2.W),d5
	move 0(a4,d2.w),d4
	move 0(a5,d1.w),d3
	move 0(a4,d1.w),d2
	move 0(a5,d0.w),d1
	move 0(a4,d0.w),d0
	lea var_3d,a6
	moveq #9,d7
sp_c	move d3,d6
	neg d6
	move d6,(a6)+
sp_f	move d2,d6
	muls d5,d6
	asr.l d7,d6
	move d6,(a6)+
sp_i	move d2,d6
	muls d4,d6
	asr.l d7,d6
	move d6,(a6)+
sp_a	move d0,d6
	muls d2,d6
	asr.l d7,d6
	move d6,(a6)+
sp_d	move d1,d6
	muls d4,d6
	asr.l d7,d6
	movea d6,a4
	move d0,d6
	muls d3,d6
	asr.l d7,d6
	muls d5,d6
	asr.l d7,d6
	sub a4,d6
	move d6,(a6)+
sp_g	move d1,d6
	muls d5,d6
	asr.l d7,d6
	movea d6,a4
	move d0,d6
	muls d3,d6
	asr.l d7,d6
	muls d4,d6
	asr.l d7,d6
	add a4,d6
	move d6,(a6)+	
sp_b	move d1,d6
	muls d2,d6
	asr.l d7,d6
	move d6,(a6)+
sp_e	move d0,d6
	muls d4,d6
	asr.l d7,d6
	movea d6,a4
	move d1,d6
	muls d3,d6
	asr.l d7,d6
	muls d5,d6
	asr.l d7,d6
	add a4,d6
	move d6,(a6)+	
sp_h	move d0,d6
	muls d5,d6
	asr.l d7,d6
	movea d6,a4
	move d1,d6
	muls d3,d6
	asr.l d7,d6
	muls d4,d6
	asr.l d7,d6
	sub a4,d6
	move d6,(a6)+	
	movem.l (a7)+,d0-d7/a4-a6
	rts
**
cos_tab	incbin 'COSIN.DAT'
sin_tab	equ cos_tab+720
	EVEN

POINTEUR	DS.L	1
xe	ds 1
ye	ds 1
ze	ds 1
xdep	ds 1
ydep	ds 1
zdep	ds 1
xp	ds 1
yp	ds 1
new_xe	ds 1
new_ye	ds 1
new_ze	ds 1
x_angle	ds 1
y_angle	ds 1
z_angle	ds 1	
z_pt_fuite	ds 1
var_3d	ds 9
;***************************************************************************
; Unpacking source for Pack-Ice Version 2.1
; a0: Pointer on packed Data
; a1: Pointer on destination of unpacked data
decrunch:	movem.l d0-a6,-(sp)
	cmpi.l	#'Ice!',(a0)+
	bne.s	ice_03
	move.l	(a0)+,d0
	lea	-8(a0,d0.l),a5
	move.l	(a0)+,(sp)
	movea.l a1,a4
	movea.l a1,a6
	adda.l	(sp),a6
	movea.l a6,a3
	bsr.s	ice_08
	bsr.s	ice_04
	bsr	ice_0c
	bcc.s	ice_03
	move	#$0f9f,d7
ice_00:	moveq	#3,d6
ice_01:	move	-(a3),d4
	moveq	#3,d5
ice_02:	add	d4,d4
	addx	d0,d0
	add	d4,d4
	addx	d1,d1
	add	d4,d4
	addx	d2,d2
	add	d4,d4
	addx	d3,d3
	dbra	d5,ice_02
	dbra	d6,ice_01
	movem d0-d3,(a3)
	dbra	d7,ice_00
ice_03:	movem.l (sp)+,d0-a6
	rts
ice_04:	bsr.s	ice_0c
	bcc.s	ice_07
	moveq	#0,d1
	bsr.s	ice_0c
	bcc.s	ice_06
	lea	ice_1a(pc),a1
	moveq	#4,d3
ice_05:	move.l	-(a1),d0
	bsr.s	ice_0f
	swap	d0
	cmp	d0,d1
	dbne	d3,ice_05
	add.l	20(a1),d1
ice_06:	move.b	-(a5),-(a6)
	dbra	d1,ice_06
ice_07:	cmpa.l	a4,a6
	bgt.s	ice_12
	rts
ice_08:	moveq	#3,d0
ice_09:	move.b	-(a5),d7
	ror.l	#8,d7
	dbra	d0,ice_09
	rts
ice_0a:	move	a5,d7
	btst	#0,d7
	bne.s	ice_0b
	move.l	-(a5),d7
	addx.l	d7,d7
	bra.s	ice_11
ice_0b:	move.l	-5(a5),d7
	lsl.l	#8,d7
	move.b	-(a5),d7
	subq.l	#3,a5
	add.l	d7,d7
	bset	#0,d7
	bra.s	ice_11
ice_0c:	add.l	d7,d7
	beq.s	ice_0d
	rts
ice_0d:	move	a5,d7
	btst	#0,d7
	bne.s	ice_0e
	move.l	-(a5),d7
	addx.l	d7,d7
	rts
ice_0e:	move.l	-5(a5),d7
	lsl.l	#8,d7
	move.b	-(a5),d7
	subq.l	#3,a5
	add.l	d7,d7
	bset	#0,d7
	rts
ice_0f:	moveq	#0,d1
ice_10:	add.l	d7,d7
	beq.s	ice_0a
ice_11:	addx	d1,d1
	dbra	d0,ice_10
	rts
ice_12:	lea	ice_1b(pc),a1
	moveq	#3,d2
ice_13:	bsr.s	ice_0c
	dbcc	d2,ice_13
	moveq	#0,d4
	moveq	#0,d1
	move.b	1(a1,d2.w),d0
	ext	d0
	bmi.s	ice_14
	bsr.s	ice_0f
ice_14:	move.b	6(a1,d2.w),d4
	add	d1,d4
	beq.s	ice_16
	lea	ice_1c(pc),a1
	moveq	#1,d2
ice_15:	bsr.s	ice_0c
	dbcc	d2,ice_15
	moveq	#0,d1
	move.b	1(a1,d2.w),d0
	ext	d0
	bsr.s	ice_0f
	add	d2,d2
	add	6(a1,d2.w),d1
	bra.s	ice_18
ice_16:	moveq	#0,d1
	moveq	#5,d0
	moveq	#0,d2
	bsr.s	ice_0c
	bcc.s	ice_17
	moveq	#8,d0
	moveq	#$40,d2
ice_17:	bsr.s	ice_0f
	add	d2,d1
ice_18:	lea	2(a6,d4.w),a1
	adda	d1,a1
	move.b	-(a1),-(a6)
ice_19:	move.b	-(a1),-(a6)
	dbra	d4,ice_19
	bra	ice_04
	DC.B $7f,$ff,$00,$0e,$00,$ff,$00,$07
	DC.B $00,$07,$00,$02,$00,$03,$00,$01
	DC.B $00,$03,$00,$01
ice_1a:	DC.B $00,$00,$01,$0d,$00,$00,$00,$0e
	DC.B $00,$00,$00,$07,$00,$00,$00,$04
	DC.B $00,$00,$00,$01
ice_1b:	DC.B $09,$01,$00,$ff,$ff,$08,$04,$02
	DC.B $01,$00
ice_1c:	DC.B $0b,$04,$07,$00,$01,$20,$00,$00
	DC.B $00,$20
	EVEN
Z_LOG	INCBIN	ZAPPY.PI1
	EVEN
FAD_Z	
	DC $001,$001,$777,$000,$444,$000,$000,$000
	DCB	8,0
	
	DC $001,$666,$666,$000,$333
	DCB	11,0

	DC $001,$555,$555,$000,$222
	DCB	11,0

	DC $001,$444,$444,$000,$111
	DCB	11,0

	DC $001,$333,$333,$000,$001
	DCB	11,0

	DC $001,$222,$222,$000,$001
	DCB	11,0
	DC $001,$111,$111,$000,$001
	DCB	11,0
	DC $001,$001,$001,$000,$001
	DCB	11,0
	
	DCB	16,1
	
	DC.L	-1
	
FAD_Z2	DC $000,$001,$002,$002,$002,$002,$002,$001
	DC $002,$002,$002,$002,$002,$002,$002,$002

	DC $000,$001,$002,$003,$003,$003,$002,$001
	DC $003,$002,$003,$003,$003,$002,$003,$003

	DC $000,$001,$002,$003,$004,$004,$002,$001
	DC $003,$002,$004,$004,$004,$002,$003,$004

	DC $000,$001,$002,$003,$005,$005,$002,$001
	DC $003,$002,$005,$005,$005,$002,$003,$005

	DC $000,$001,$002,$003,$005,$006,$002,$001
	DC $003,$002,$006,$006,$006,$002,$003,$006

	DC $000,$001,$002,$003,$005,$007,$002,$001
	DC $003,$002,$007,$007,$007,$002,$003,$007

	DC $000,$001,$012,$013,$015,$017,$012,$001
	DC $013,$012,$017,$017,$007,$012,$013,$017

	DC $000,$001,$012,$023,$025,$027,$012,$001
	DC $023,$022,$027,$027,$007,$022,$023,$027

	DC $000,$001,$012,$023,$035,$037,$012,$001
	DC $033,$022,$037,$037,$007,$022,$033,$037

	DC $000,$001,$012,$023,$045,$047,$012,$001
	DC $043,$022,$047,$047,$007,$022,$033,$047

	DC $000,$001,$012,$023,$045,$057,$012,$001
	DC $043,$022,$057,$047,$007,$022,$033,$057

	DC $000,$001,$012,$023,$045,$067,$012,$001
	DC $043,$022,$067,$047,$007,$022,$033,$067

	DC $000,$001,$012,$023,$045,$067,$012,$001
	DC $043,$022,$077,$047,$007,$022,$033,$077

	DC $000,$101,$112,$123,$145,$167,$112,$001
	DC $143,$022,$177,$147,$007,$122,$133,$177

	DC $000,$101,$212,$223,$245,$267,$112,$001
	DC $143,$022,$277,$247,$007,$222,$233,$277

	DC $000,$101,$212,$323,$345,$367,$112,$001
	DC $143,$022,$377,$347,$007,$222,$333,$377

	DC $000,$101,$212,$323,$445,$467,$112,$001
	DC $143,$022,$477,$347,$007,$222,$333,$477

	DC $000,$101,$212,$323,$545,$567,$112,$001
	DC $143,$022,$577,$347,$007,$222,$333,$577

	DC $000,$101,$212,$323,$545,$667,$112,$001
	DC $143,$022,$677,$347,$007,$222,$333,$677
	
	DC $000,$101,$212,$323,$545,$767,$112,$001
	DC $143,$022,$677,$347,$007,$222,$333,$777
	DC.L	-1
FAD_Z3	DC $000,$000,$101,$212,$434,$656,$001,$000
	DC $032,$011,$566,$236,$006,$111,$222,$666
	DC $000,$000,$000,$101,$323,$545,$000,$000
	DC $021,$000,$455,$125,$005,$000,$111,$555
	DC $000,$000,$000,$000,$212,$434,$000,$000
	DC $010,$000,$344,$014,$004,$000,$000,$444
	DC $000,$000,$000,$000,$101,$323,$000,$000
	DC $000,$000,$233,$003,$003,$000,$000,$333
	DC $000,$000,$000,$000,$000,$212,$000,$000
	DC $000,$000,$122,$002,$002,$000,$000,$222
	DC $000,$000,$000,$000,$000,$101,$000,$000
	DC $000,$000,$011,$001,$001,$000,$000,$111
	DCB	16,0
	DC.L	-1

ANC_VBL	DS.L	1
FORCE_DEMO	DS.L	1
PNT_FAD	DS.L	1
PNT_FAD2	DS.L	1
*************

PROG
	PEA	0.W
	MOVE	#$20,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP

	CLR	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP

	MOVE.L	$70.W,ANC_VBL
	MOVE.L	#FINI,$8.W
	MOVE.L	#FINI,$C.W
	MOVE.L	#FINI,$10.W

*INITIALISATION
	JSR	LINE_A_INIT
	MOVE	#1,24(A0)
	CLR	26(A0)
	CLR	28(A0)
	CLR	30(A0)
	CLR	36(A0)
	MOVE.L	#FILL,46(A0)
	MOVE	#1,50(A0)
	CLR	52(A0)
	MOVE	#1,54(A0)
	move	#1,56(A0)
	move	#1,58(A0)
	move	#319,60(A0)
	move	#199,62(A0)
**
	
	LEA	ZIK+2688,A0
	LEA	ZIK+12,A1
	MOVE.L	A0,(A1)
	MOVEQ	#6,D0
	JSR	ZIK
	
	MOVE.L	#BUF,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	MOVE.L	D0,SCREEN1B
	ADD.L	#32000,D0
	MOVE.L	D0,SCREEN2
	MOVE.L	#END_BUFCOD,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN3

	JSR	INIT_TXT

	LEA	_IMG,A0
	LEA	IMG,A1
	MOVE	#13316,D0
CI1	MOVE.B	(A0)+,(A1)+
	DBF	D0,CI1

	LEA	ADR_ROUTS,A0
	LEA	TABLE_ADR,A1
	MOVE.L	A0,(A1)+
	MOVEQ	#0,D0
	MOVE	#255,D7
GENERATION	CLR	OFFSET
	MOVEQ	#7,D1
TEST_X	BTST	D1,D0
	BNE	BIT_A_UN
CONTINUE	ADDQ	#4,OFFSET
	DBF	D1,TEST_X
	MOVE	#$4E75,(A0)+
	MOVE.L	A0,(A1)+
	ADDQ.L	#1,D0
	DBF	D7,GENERATION
	MOVE	#$444,$FFFF8248.W
	MOVE	#$777,$FFFF824C.W
	MOVE	#$777,$FFFF8244.W
	MOVE	#$001,$FFFF8240.W
	MOVE.L	#VBL,$70.W
ON_COMMENCE
	LEA	BUFCOD,A0
	MOVE.L	A0,SAVEA0
	LEA	TABLE,A4
	MOVE.L	A4,SAVEA4

	MOVEM.L	D0-A6,INIT

	clr	x_angle
	clr	y_angle
	clr	z_angle
	CLR.L	POINTEUR
	CLR.L	POINTA
	CLR.L	POINTB
	move	#256,z_pt_fuite
	LEA	DATA_X,A1
	LEA	MINI5,A2
	LEA	MINI,A3
	LEA	MINI2,A4
	LEA	MINI3,A5
	LEA	MINI4,A6
	MOVEM.L	D0-A6,REG_GEN
	
	MOVE	#18,D7
LABEL	JSR	GENERATING	19
	DBF	D7,LABEL

	LEA	Z_LOG,A0
	MOVE.L	SCREEN3,A1
	JSR	decrunch
*
WET
	TST.L	FORCE_DEMO
	BEQ.S	WET

FAD1	LEA	FAD_Z,A0
	ADDA.L	PNT_FAD,A0
	CMPI.B	#-1,(A0)
	BEQ.S	OKAYGO
	MOVEM.L	(A0),D0-D6/A1
	MOVEM.L	D0-D6/A1,$FFFF8240.W
	ADD.L	#16*2,PNT_FAD
XETY	ADDQ.L	#1,PNT_FAD2
	CMPI.L	#10000,PNT_FAD2
	BNE.S	XETY
	CLR.L	PNT_FAD2
	BRA.S	FAD1
OKAYGO	MOVE.L	#VBL_ZIK,$70.W
	MOVE.L	SCREEN1,A0
	LEA	48*160(A0),A0
	MOVE.L	SCREEN2,A1
	LEA	48*160(A1),A1
	MOVE.L	SCREEN3,A2
	LEA	34(A2),A2
	MOVE	#((96*160)/4)-1,D0
AFF_Z	MOVE.L	(A2),(A0)+
	MOVE.L	(A2)+,(A1)+
	DBF	D0,AFF_Z
	JSR	GENERATING	20
	JSR	EFF_SCR3
	CLR.L	PNT_FAD
	CLR.L	PNT_FAD2
FAD2	LEA	FAD_Z2,A0
	ADDA.L	PNT_FAD,A0
	CMPI.B	#-1,(A0)
	BEQ.S	OKAYGO2
	MOVEM.L	(A0),D0-D6/A1
	MOVEM.L	D0-D6/A1,$FFFF8240.W
	ADD.L	#16*2,PNT_FAD
XETY2	ADDQ.L	#1,PNT_FAD2
	CMPI.L	#10000,PNT_FAD2
	BNE.S	XETY2
	CLR.L	PNT_FAD2
	BRA.S	FAD2
OKAYGO2	JSR	GENERATING	21
	JSR	GENERATING	22
	CLR.L	PNT_FAD
	CLR.L	PNT_FAD2
FAD3	LEA	FAD_Z3,A0
	ADDA.L	PNT_FAD,A0
	CMPI.B	#-1,(A0)
	BEQ.S	OKAYGO3
	MOVEM.L	(A0),D0-D6/A1
	MOVEM.L	D0-D6/A1,$FFFF8240.W
	ADD.L	#16*2,PNT_FAD
XETY3	ADDQ.L	#1,PNT_FAD2
	CMPI.L	#5000,PNT_FAD2
	BNE.S	XETY3
	CLR.L	PNT_FAD2
	BRA.S	FAD3
OKAYGO3	JSR	INIT_TXT
	CLR.L	COMPTEUR
	CLR.L	FORCE_DEMO
	JSR	EFF_SCR
	MOVE.L	#TEXTE2,MODIF
	MOVE	#$444,$FFFF8248.W
	MOVE	#$777,$FFFF8244.W
	MOVE	#$777,$FFFF824C.W
	MOVE	#$001,$FFFF8240.W
	MOVE.L	#VBL,$70.W

	MOVE	#11,D7
LABEL2	JSR	GENERATING	33=+ DE 104318
	DBF	D7,LABEL2
	MOVE.L	#VBL_ZIK,$70.W
	
	JSR	EFF_SCR3
	CLR.L	PNT_FAD
	CLR.L	PNT_FAD2
FAD2B	LEA	FAD_Z,A0
	ADDA.L	PNT_FAD,A0
	CMPI.B	#-1,(A0)
	BEQ.S	OKAYGO2B
	MOVEM.L	(A0),D0-D6/A1
	MOVEM.L	D0-D6/A1,$FFFF8240.W
	ADD.L	#16*2,PNT_FAD
XETY2B	ADDQ.L	#1,PNT_FAD2
	CMPI.L	#10000,PNT_FAD2
	BNE.S	XETY2B
	CLR.L	PNT_FAD2
	BRA.S	FAD2B
OKAYGO2B	JSR	EFF_SCR
	LEA	IMG2,A0
	MOVE.L	SCREEN3,A1
	JSR	decrunch
	
	MOVE.L	SCREEN3,A0
	LEA	2(A0),A0
	MOVEM.L	(A0),D0-D7
	MOVEM.L	D0-D7,$FFFF8240.W
	MOVE	#$001,$FFFF8240.W
	
	MOVE.L	SCREEN3,A1
	LEA	34(A1),A1
	LEA	END_BUFCOD,A0
	LEA	-32000(A0),A0
	LEA	-32000(A0),A0
	MOVE	#7999,D0
AFFIMG1	MOVE.L	(A1)+,(A0)+
	DBF	D0,AFFIMG1

	LEA	IMG,A0
	MOVE.L	SCREEN3,A1
	JSR	decrunch
	MOVE.L	SCREEN3,A1
	LEA	34(A1),A1
	LEA	END_BUFCOD,A0
	LEA	-32000(A0),A0
	LEA	-32000(A0),A0
	LEA	-32000(A0),A0
	MOVE	#7999,D0
AFFIMG2	MOVE.L	(A1)+,(A0)+
	DBF	D0,AFFIMG2

	LEA	END_BUFCOD,A0
	LEA	-32000(A0),A0
	MOVE	#(20*200)-1,D0
PV	MOVE	#$FFFF,4(A0)
	LEA	8(A0),A0
	DBF	D0,PV
	
	CLR.L	FORCE_DEMO
	MOVE.L	#VBL_JAP,$70.W
WET2	TST.L	FORCE_DEMO
	BEQ.S	WET2
	MOVE.L	#VBL_ZIK,$70.W
	CLR.L	FORCE_DEMO
	JSR	EFF_SCR
	JSR	EFF_SCR3
	MOVE	#-16,MOD1
	MOVE	#-16,MOD2
	MOVE	#-16,MOD3
	MOVE	#-16,MOD4
	MOVE	#-16,MOD5
	MOVE	#-16,MOD6
	JSR	INIT_TXT
	CLR.L	COMPTEUR
	MOVE.L	#TEXTE3,MODIF
	MOVE	#$444,$FFFF8248.W
	MOVE	#$777,$FFFF8244.W
	MOVE	#$777,$FFFF824C.W
	MOVE	#$001,$FFFF8240.W
	MOVE.L	#VBL,$70.W
	MOVE	#34,D7
LABEL3	JSR	GENERATING 35+33=68
	DBF	D7,LABEL3

	CLR.L	PNT_FAD
	CLR.L	PNT_FAD2
FAD2C	LEA	FAD_Z,A0
	ADDA.L	PNT_FAD,A0
	CMPI.B	#-1,(A0)
	BEQ.S	OKAYGO2C
	MOVEM.L	(A0),D0-D6/A1
	MOVEM.L	D0-D6/A1,$FFFF8240.W
	ADD.L	#16*2,PNT_FAD
XETY2C	ADDQ.L	#1,PNT_FAD2
	CMPI.L	#10000,PNT_FAD2
	BNE.S	XETY2C
	CLR.L	PNT_FAD2
	BRA.S	FAD2C
OKAYGO2C	
	MOVE.L	#VBL_ZIK,$70.W
	CLR.L	FORCE_DEMO
	JSR	EFF_SCR
	MOVE	#-8,MOD1
	MOVE	#-8,MOD2
	MOVE	#-8,MOD3
	MOVE	#-8,MOD4
	MOVE	#-8,MOD5
	MOVE	#-8,MOD6
	JSR	INIT_TXT
	CLR.L	COMPTEUR
	MOVE.L	#TEXTE4,MODIF
	MOVE	#$444,$FFFF8248.W
	MOVE	#$777,$FFFF8244.W
	MOVE	#$777,$FFFF824C.W
	MOVE	#$001,$FFFF8240.W
	MOVE.L	#VBL,$70.W

	MOVE	#(120-68-33)-1,D7
LABEL4	JSR	GENERATING
	DBF	D7,LABEL4
	MOVE.L	#$00010001,$FFFF8240.W
	MOVE.L	#$07770777,$FFFF8244.W
	MOVE.L	#$04440444,$FFFF8248.W
	MOVE.L	#$07770777,$FFFF824C.W
	MOVE.L	#$00010001,$FFFF8250.W
	MOVE.L	#$07770777,$FFFF8254.W
	MOVE.L	#$04440444,$FFFF8258.W
	MOVE.L	#$07770777,$FFFF825C.W

	MOVE.L	#SCREEN1B,MODECR1
	MOVE.L	#SCREEN1B,MODECR2
	MOVE.L	#EFF_SCR4,MODEFF1
	MOVE	#33-1-1,D7
LABEL5	JSR	GENERATING
	DBF	D7,LABEL5

	JMP	ALAFIN
VBL_ZIK	
	MOVEM.L	D0-A6,-(SP)
	JSR	ZIK+8
	MOVEM.L	(SP)+,D0-A6
	CMPI.B	#$1,$FFFFFC02.W
	BEQ	FINI
	RTE
	
VBL_JAP	CMPI.B	#$39,$FFFFFC02.W
	BNE.S	NO_FORCE
	MOVE.L	#1,FORCE_DEMO
NO_FORCE	MOVEM.L	D0-A6,-(SP)
	JSR	ZIK+8

	MOVE.L	SCREEN1,A1
	LEA	END_BUFCOD,A0
	LEA	-32000(A0),A0
	LEA	-32000(A0),A0
	LEA	-32000(A0),A0
JPNT	EQU	*+2
	ADDA.L	#64000,A0
N	SET	0
	REPT	200
	MOVEM.L	N(A0),D0-D7/A2-A6
	MOVEM.L	D0-D7/A2-A6,N(A1)
	MOVEM.L	N+13*4(A0),D0-D7/A2-A6
	MOVEM.L	D0-D7/A2-A6,N+13*4(A1)
	MOVEM.L	N+13*4*2(A0),D0-D7/A2-A6
	MOVEM.L	D0-D7/A2-A6,N+13*4*2(A1)
	MOVE.L	N+13*4*3(A0),N+13*4*3(A1)
N	SET	N+160
	ENDR

	ADDQ.L	#1,GARGL2
	CMPI.L	#50,GARGL2
	BLE.S	JJ3
	TST.L	JPNT
	BEQ.S	JJ2
	SUB.L	#160,JPNT
	BRA.S	JJ3
JJ2	ADDQ.L	#1,GARGL
	CMPI.L	#250,GARGL
	BNE.S	JJ3
	MOVE.L	#1,FORCE_DEMO
JJ3	move.l	SCREEN1,d0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	lsr.l	#8,d0
	move.l	#$ffff8201,a0
	movep	d0,(a0)

	MOVEM.L	(SP)+,D0-A6
	CMPI.B	#$1,$FFFFFC02.W
	BEQ	FINI
	RTE
GARGL	DC.L	0
GARGL2	DC.L	0
VBL	CLR.B	$FFFF8260.W
	MOVEM.L	D0-A6,-(SP)
MODIF_CUBE	NOP
	NOP
	NOP

	JSR	ZIK+8
	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	NO_COLOR
	ST	$FFFF8240.W
NO_COLOR	
	JSR	GERE_EFF
	MOVE.L	DATEFF,A6

	MOVEM.L	REGS1,D0-A5
	MOVE.L	SAVEPNTPLAN,PNT_PLAN
	MOVE.L	SAVEPNTTXT,PNT_TXT
	MOVE.L	SAVEPNTDATAS,PNT_DATAS
	MOVE	SAVEXDEP,X_DEP
	MOVE	SAVEYDEP,Y_DEP
	MOVE.L	NB_LETTERS,NBLET
	MOVE.L	SAVEDAT,DAT_PNT
	JSR	BIG_ROUTY
	MOVE.L	DAT_PNT,SAVEDAT
	MOVE.L	NBLET,NB_LETTERS
	MOVE.L	PNT_PLAN,SAVEPNTPLAN
	MOVE.L	PNT_TXT,SAVEPNTTXT
	MOVE.L	PNT_DATAS,SAVEPNTDATAS
	MOVE	Y_DEP,SAVEYDEP
	MOVE	X_DEP,SAVEXDEP
	MOVEM.L	D0-A5,REGS1

	CMPI.L	#81,COMPTEUR
	BEQ.S	NO_ADD
	ADDQ.L	#1,COMPTEUR
NO_ADD	CMPI.L	#13,COMPTEUR
	BLE	NO_SECOND	

	MOVEM.L	REGS2,D0-A5
	MOVE.L	SAVEPNTPLAN2,PNT_PLAN
	MOVE.L	SAVEPNTTXT2,PNT_TXT
	MOVE.L	SAVEPNTDATAS2,PNT_DATAS
	MOVE	SAVEXDEP2,X_DEP
	MOVE	SAVEYDEP2,Y_DEP
	MOVE.L	NB_LETTERS2,NBLET
	MOVE.L	SAVEDAT2,DAT_PNT
	
	JSR	BIG_ROUTY
	
	MOVE.L	DAT_PNT,SAVEDAT2
	MOVE.L	NBLET,NB_LETTERS2
	MOVE.L	PNT_PLAN,SAVEPNTPLAN2
	MOVE.L	PNT_TXT,SAVEPNTTXT2
	MOVE.L	PNT_DATAS,SAVEPNTDATAS2
	MOVE	X_DEP,SAVEXDEP2
	MOVE	Y_DEP,SAVEYDEP2
	MOVEM.L	D0-A5,REGS2
NO_SECOND
	CMPI.L	#26,COMPTEUR
	BLE	NO_THIRD
	MOVEM.L	REGS3,D0-A5
	MOVE.L	SAVEPNTPLAN3,PNT_PLAN
	MOVE.L	SAVEPNTTXT3,PNT_TXT
	MOVE.L	SAVEPNTDATAS3,PNT_DATAS
	MOVE	SAVEXDEP3,X_DEP
	MOVE	SAVEYDEP3,Y_DEP
	MOVE.L	NB_LETTERS3,NBLET
	MOVE.L	SAVEDAT3,DAT_PNT

	JSR	BIG_ROUTY

	MOVE.L	DAT_PNT,SAVEDAT3
	MOVE.L	NBLET,NB_LETTERS3
	MOVE.L	PNT_PLAN,SAVEPNTPLAN3
	MOVE.L	PNT_TXT,SAVEPNTTXT3
	MOVE.L	PNT_DATAS,SAVEPNTDATAS3
	MOVE	X_DEP,SAVEXDEP3
	MOVE	Y_DEP,SAVEYDEP3
	MOVEM.L	D0-A5,REGS3
NO_THIRD
	CMPI.L	#39,COMPTEUR
	BLE	NO_FOURTH
	MOVEM.L	REGS4,D0-A5
	MOVE.L	SAVEPNTPLAN4,PNT_PLAN
	MOVE.L	SAVEPNTTXT4,PNT_TXT
	MOVE.L	SAVEPNTDATAS4,PNT_DATAS
	MOVE	SAVEXDEP4,X_DEP
	MOVE	SAVEYDEP4,Y_DEP
	MOVE.L	NB_LETTERS4,NBLET
	MOVE.L	SAVEDAT4,DAT_PNT

	JSR	BIG_ROUTY

	MOVE.L	DAT_PNT,SAVEDAT4
	MOVE.L	NBLET,NB_LETTERS4
	MOVE.L	PNT_PLAN,SAVEPNTPLAN4
	MOVE.L	PNT_TXT,SAVEPNTTXT4
	MOVE.L	PNT_DATAS,SAVEPNTDATAS4
	MOVE	X_DEP,SAVEXDEP4
	MOVE	Y_DEP,SAVEYDEP4
	MOVEM.L	D0-A5,REGS4
NO_FOURTH	CMPI.L	#52,COMPTEUR
	BLE	NO_FIFTH
	MOVEM.L	REGS5,D0-A5
	MOVE.L	SAVEPNTPLAN5,PNT_PLAN
	MOVE.L	SAVEPNTTXT5,PNT_TXT
	MOVE.L	SAVEPNTDATAS5,PNT_DATAS
	MOVE	SAVEXDEP5,X_DEP
	MOVE	SAVEYDEP5,Y_DEP
	MOVE.L	NB_LETTERS5,NBLET
	MOVE.L	SAVEDAT5,DAT_PNT

	JSR	BIG_ROUTY

	MOVE.L	DAT_PNT,SAVEDAT5
	MOVE.L	NBLET,NB_LETTERS5
	MOVE.L	PNT_PLAN,SAVEPNTPLAN5
	MOVE.L	PNT_TXT,SAVEPNTTXT5
	MOVE.L	PNT_DATAS,SAVEPNTDATAS5
	MOVE	X_DEP,SAVEXDEP5
	MOVE	Y_DEP,SAVEYDEP5
	MOVEM.L	D0-A5,REGS5
NO_FIFTH	CMPI.L	#65,COMPTEUR
	BLE	NO_SIX
	MOVEM.L	REGS6,D0-A5
	MOVE.L	SAVEPNTPLAN6,PNT_PLAN
	MOVE.L	SAVEPNTTXT6,PNT_TXT
	MOVE.L	SAVEPNTDATAS6,PNT_DATAS
	MOVE	SAVEXDEP6,X_DEP
	MOVE	SAVEYDEP6,Y_DEP
	MOVE.L	NB_LETTERS6,NBLET
	MOVE.L	SAVEDAT6,DAT_PNT

	JSR	BIG_ROUTY

	MOVE.L	DAT_PNT,SAVEDAT6
	MOVE.L	NBLET,NB_LETTERS6
	MOVE.L	PNT_PLAN,SAVEPNTPLAN6
	MOVE.L	PNT_TXT,SAVEPNTTXT6
	MOVE.L	PNT_DATAS,SAVEPNTDATAS6
	MOVE	X_DEP,SAVEXDEP6
	MOVE	Y_DEP,SAVEYDEP6
	MOVEM.L	D0-A5,REGS6
NO_SIX
	MOVE.L	SCREEN1,A4
	clr.l	(a4)
	move.l	DATEFF,d0	
	MOVE.L	DATEFF2,DATEFF
	MOVE.L	D0,DATEFF2
	
	move.l	SCREEN1,d0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2
	CMPI.B	#$3B,$FFFFFC02.W
	BNE.S	SAUT
	move.l	SCREEN3,d0
SAUT	lsr.l	#8,d0
	move.l	#$ffff8201,a0
	movep	d0,(a0)
	MOVEM.L	(SP)+,D0-A6
	
	MOVE	#$001,$FFFF8240.W
	CMPI.B	#$1,$FFFFFC02.W
	BEQ.S	FINI
	RTE
	
FINI	MOVE.L	ANC_VBL,$70.W
	MOVE	#$004,$FFFF8240.W
	MOVE	#$777,$FFFF8242.W
	JSR	ZIK+4
	PEA	0.W
	TRAP	#1

EFF_SCR	MOVE.L	SCREEN1,A0
	MOVE.L	SCREEN2,A1
	MOVE	#7999,D0
LKJH	CLR.L	(A0)+
	CLR.L	(A1)+
	DBF	D0,LKJH
	RTS

EFF_SCR3	MOVE.L	SCREEN3,A0
	MOVE	#7999,D0
LKJH2	CLR.L	(A0)+
	DBF	D0,LKJH2
	RTS

EFF_SCR4	MOVE.L	SCREEN1B,A0
	MOVE	#(20*200)-1,D0
LKJH3	CLR	(A0)
	LEA	8(A0),A0
	DBF	D0,LKJH3
	RTS

BIG_ROUTY
	MOVE.L	SCREEN1,A4
	ADDA.L	PNT_PLAN,A4
	LEA	TABLE_X,A5
	MOVE.L	DAT_PNT,A0
	ADDA.L	PNT_DATAS,A0
MODIF	EQU	*+2
	LEA	TEXTE,A3
	ADDA.L	PNT_TXT,A3
	CMPI.B	#-1,(A3)	
	BEQ	FINITO2
	LEA	FONT8_8,A1
	MOVEQ	#7,D4
	MOVEQ	#0,D3
	MOVE.B	(A3),D3
	SUBI.B	#32,D3
	LSL	#3,D3
	ADDA.L	D3,A1
	LEA	TABLE_Y,A3
DO_LINE	MOVEQ	#0,D3
	MOVE.B	(A1)+,D3
	LSL	#2,D3
	LEA	TABLE_ADR,A2
	ADDA.L	D3,A2
	MOVE.L	(A2),A2
	JSR	(A2)
	LEA	8*4(A0),A0
	DBF	D4,DO_LINE

	CMPI.L	#1,NBLET
	BNE.S	NON_RT
	CLR.L	NBLET
	BRA.S	GO
	
NON_RT	SUB.L	#64*4,PNT_DATAS
	TST.L	PNT_DATAS
	BEQ.S	PLAN_2
	BRA.S	PLAN_1
PLAN_2	MOVE.L	#4,PNT_PLAN
	MOVE.L	#1,NBLET
	BRA.S	GO
PLAN_1	MOVE.L	#2,PNT_PLAN
GO	CMPI.L	#-64*4,PNT_DATAS
	BNE.S	FINITO
	MOVE.L	#TAILLE*4-64*4,PNT_DATAS
	ADDQ.L	#6,PNT_TXT

;	LEA	TEXTE,A3	*
;	ADDA.L	PNT_TXT,A3	*	
;	CMPI.B	#$20,(A3)	*
;	BNE.S	LET_US_GO	*
;	MOVE.L	#64*4,PNT_DATAS	*
LET_US_GO	
	ADD	#8*6,X_DEP
	CMP	#160,X_DEP
	BLT.S	FINITO
	SUB	#160+152,X_DEP
	ADDQ	#8,Y_DEP
FINITO	RTS
FINITO2	MOVE.L	#1,FORCE_DEMO	
	RTS
NBLET	DS.L	1

REGS1	DS.L	16
DAT_PNT	DS.L	1
SAVEPNTTXT	DS.L	1
SAVEPNTPLAN	DS.L	1
SAVEPNTDATAS	DS.L	1
NB_LETTERS	DS.L	1
SAVEDAT	DS.L	1

REGS2	DS.L	16
SAVEPNTTXT2	DS.L	1
SAVEPNTPLAN2	DS.L	1
SAVEPNTDATAS2	DS.L	1
NB_LETTERS2	DS.L	1
SAVEDAT2	DS.L	1

REGS3	DS.L	16
SAVEPNTTXT3	DS.L	1
SAVEPNTPLAN3	DS.L	1
SAVEPNTDATAS3	DS.L	1
NB_LETTERS3	DS.L	1
SAVEDAT3	DS.L	1
SAVEXDEP	DS	1
SAVEYDEP	DS	1
SAVEXDEP2	DS	1
SAVEYDEP2	DS	1
SAVEXDEP3	DS	1
SAVEYDEP3	DS	1

REGS4	DS.L	16
DAT_PNT4	DS.L	1
SAVEPNTTXT4	DS.L	1
SAVEPNTPLAN4	DS.L	1
SAVEPNTDATAS4	DS.L	1
NB_LETTERS4	DS.L	1
SAVEDAT4	DS.L	1

REGS5	DS.L	16
SAVEPNTTXT5	DS.L	1
SAVEPNTPLAN5	DS.L	1
SAVEPNTDATAS5	DS.L	1
NB_LETTERS5	DS.L	1
SAVEDAT5	DS.L	1

REGS6	DS.L	16
SAVEPNTTXT6	DS.L	1
SAVEPNTPLAN6	DS.L	1
SAVEPNTDATAS6	DS.L	1
NB_LETTERS6	DS.L	1
SAVEDAT6	DS.L	1
SAVEXDEP4	DS	1
SAVEYDEP4	DS	1
SAVEXDEP5	DS	1
SAVEYDEP5	DS	1
SAVEXDEP6	DS	1
SAVEYDEP6	DS	1

PNT_DATAS	DS.L	1
PNT_TXT	DS.L	1
PNT_PLAN	DS.L	1
BIT_A_UN	MOVE	#$3028,(A0)+	MOVE OFFSET(A0),D0
	MOVE	OFFSET,(A0)+
	MOVE	#$3228,(A0)+	MOVE OFFSET+2(A0),D1
	MOVE	OFFSET,(A0)
	ADD	#2,(A0)+
	MOVE	#$4EB9,(A0)+	JSR AFF_PNT
	MOVE.L	#AFF_PNT,(A0)+
	BRA	CONTINUE
AFF_PNT	
; D0=X    D1=Y
ROUTINE	ADD	X_DEP,D0
	ADD	Y_DEP,D1
	MOVEQ	#0,D2
	CMPI	#199,D1
	BLE.S	NO_CLIP
	MOVEQ	#0,D0
	MOVEQ	#0,D1
NO_CLIP	TST	D1
	BGT.S	TOUTOK
	MOVEQ	#0,D0
	MOVEQ	#0,D1
TOUTOK	CMPI	#319,D0
	BLE.S	PASGRR
	MOVEQ	#0,D1
	MOVEQ	#0,D0
PASGRR	TST	D0
	BGT.S	ENFIN
	MOVEQ	#0,D0
	MOVEQ	#0,D1
ENFIN	*ST	$FFFF8240.W
	ADD	D1,D1	*
	MOVE	(A3,d1.w),D1	*

	MOVE.L	D0,D2
	ADD	D0,D0
	ADD	(A5,D0.W),D1
	ADD	#640,D2
	MOVE.B	(A5,D2.W),D0

	OR.B	D0,(A4,D1.W)
	MOVE	D1,(A6)+
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	RTS
GERE_EFF	MOVE.L	DATEFF,A6
	MOVEQ	#0,D1
	MOVE.L	SCREEN1,A4
	REPT	64*6
	MOVE	(A6)+,D1
	CLR.B	2(A4,D1.W)
	ENDR
	RTS

INIT_TXT
	MOVE.L	#TAILLE*4-64*4,SAVEPNTDATAS
	MOVE	#-152,SAVEXDEP
MOD1	EQU	*+2
	MOVE	#-8,SAVEYDEP
	CLR.L	SAVEPNTTXT
	MOVE.L	#DATAS,SAVEDAT
	MOVE.L	#2,SAVEPNTPLAN
	
	MOVE.L	#TAILLE*4-64*4,SAVEPNTDATAS2
	MOVE	#-144,SAVEXDEP2
	MOVE.L	#1,SAVEPNTTXT2
MOD2	EQU	*+2
	MOVE	#-8,SAVEYDEP2
	MOVE.L	#DATAS2,SAVEDAT2
	MOVE.L	#2,SAVEPNTPLAN2

	MOVE.L	#TAILLE*4-64*4,SAVEPNTDATAS3
	MOVE	#-136,SAVEXDEP3
	MOVE.L	#2,SAVEPNTTXT3
MOD3	EQU	*+2
	MOVE	#-8,SAVEYDEP3
	MOVE.L	#DATAS3,SAVEDAT3
	MOVE.L	#2,SAVEPNTPLAN3

	MOVE.L	#TAILLE*4-64*4,SAVEPNTDATAS4
	MOVE	#-128,SAVEXDEP4
	MOVE.L	#3,SAVEPNTTXT4
MOD4	EQU	*+2
	MOVE	#-8,SAVEYDEP4
	MOVE.L	#DATAS,SAVEDAT4
	MOVE.L	#2,SAVEPNTPLAN4
	
	MOVE.L	#TAILLE*4-64*4,SAVEPNTDATAS5
	MOVE	#-120,SAVEXDEP5
	MOVE.L	#4,SAVEPNTTXT5
MOD5	EQU	*+2
	MOVE	#-8,SAVEYDEP5
	MOVE.L	#DATAS2,SAVEDAT5
	MOVE.L	#2,SAVEPNTPLAN5

	MOVE.L	#TAILLE*4-64*4,SAVEPNTDATAS6
	MOVE	#-112,SAVEXDEP6
	MOVE.L	#5,SAVEPNTTXT6
MOD6	EQU	*+2
	MOVE	#-8,SAVEYDEP6
	MOVE.L	#DATAS3,SAVEDAT6
	MOVE.L	#2,SAVEPNTPLAN6

	RTS

GENERATING2
	MOVE.L	D7,-(SP)
	MOVEM.L	REG_GEN,D0-A6
	CLR.L	POINTEUR
	LEA	DATA_X,A1
	jsr	trigo
	ADD.L	#2,POINTEUR2
	
	MOVE	#NB_PTS_H-1,D6
BVS	jsr	sp_to_plH
	jsr	ROUTINE2
	DBF	D6,BVS
	MOVE	#$9999,(A1)
	ADD	#2*PAS_H,y_angle
	ADD	#2*PAS_H,x_angle
	movem.l	d0-a6,-(sp)
	MOVEM.L	INIT,D0-A6
	JMP	GEN

GENERATING	MOVE.L	D7,-(SP)
	MOVEM.L	REG_GEN,D0-A6
	CLR.L	POINTEUR
	CLR.L	POINTEURED
	MOVE.L	POINTA,POINTEUR
	ADD.L	#10*4*4,POINTA
	CLR.L	PNT
	LEA	DATA_X,A1
	jsr	trigo
	ADD.L	#2,POINTEUR2
	
	TST.B	(A3)+
	BEQ	K2
	MOVE	#NB_PTS_C-1,D6
BV	jsr	sp_to_pl
	jsr	ROUTINE_C
	DBF	D6,BV
	SUB.L	#4*40,POINTEUR
	CLR.L	POINTB
	CLR.L	POINTEURED
	BRA	K
K2	MOVE	#NB_PTS_C-1,D6
JH	MOVE.L	#-1,(A1)+
	DBF	D6,JH
K	
	TST.B	(A4)+
	BEQ	K2B
	MOVE	#NB_PTS_C-1,D6
BV2	jsr	sp_to_pl2
	jsr	ROUTINE_C
	DBF	D6,BV2

	SUB.L	#4*40,POINTEUR
	CLR.L	POINTB
	CLR.L	POINTEURED
	BRA	KB
K2B	MOVE	#NB_PTS_C-1,D6
QQS	MOVE.L	#-1,(A1)+
	DBF	D6,QQS
KB	TST.B	(A5)+
	BEQ	K2C
	MOVE	#NB_PTS_C-1,D6
BV3	jsr	sp_to_pl3
	jsr	ROUTINE_C
	DBF	D6,BV3

	SUB.L	#4*40,POINTEUR
	CLR.L	POINTB
	CLR.L	POINTEURED
	BRA	KC
K2C	MOVE	#NB_PTS_C-1,D6
TG	MOVE.L	#-1,(A1)+
	DBF	D6,TG
KC
	TST.B	(A6)+
	BEQ	K2D
	MOVE	#NB_PTS_C-1,D6
BV4	jsr	sp_to_pl4
	jsr	ROUTINE_C
	DBF	D6,BV4

	SUB.L	#4*40,POINTEUR
	CLR.L	POINTB
	CLR.L	POINTEURED
	BRA	KD
K2D	MOVE	#NB_PTS_C-1,D6
TC	MOVE.L	#-1,(A1)+
	DBF	D6,TC
KD
	TST.B	(A2)+
	BEQ	K2E
	MOVE	#NB_PTS_C-1,D6
BV5	jsr	sp_to_pl5
	jsr	ROUTINE_C
	DBF	D6,BV5

	CLR.L	POINTB
	CLR.L	POINTEURED
	BRA	KE
K2E	MOVE	#NB_PTS_C-1,D6
TD	MOVE.L	#-1,(A1)+
	DBF	D6,TD
KE
	ADD	#2*PAS,x_angle
	ADD	#2*PAS,y_angle
;	ADD	#2*PAS,z_angle

	movem.l	d0-a6,-(sp)
	MOVEM.L	INIT,D0-A6

GEN
MODEFF1	EQU	*+2
	JSR	EFF_SCR3
A_MODIFIER_1	EQU	*+2
	MOVE	#SEG-1,D0
GGGT	MOVE.L	D0,-(SP)
	bsr	poly
	MOVE.L	(SP)+,D0
	DBF	D0,GGGT

	MOVE	#3999,D0
MODECR1	EQU	*+2
	MOVE.L	SCREEN3,A0
	LEA	BUF2,A1
	LEA	BUF1,A2
KL	MOVE	(A1),(A2)+
	MOVE	(A0),(A1)+
	LEA	8(A0),A0
	dbf	d0,KL

	JSR	GENERE1
	MOVEQ	#0,D0
	MOVEQ	#0,D3
	LEA	DATAS_C,A0
	LEA	FINAL,A1
	LEA	-8(A0),A0
LOOPED	LEA	8(A0),A0
	MOVE.L	(A0),D2
	MOVE.L	4(A0),D1
	TST.L	(A0)
	BEQ.S	OKVAZY
	CMP.L	D0,D1
	BLE.S	LOOPED
	MOVE.L	D1,D0
	MOVE.L	D2,D4
	BRA.S	LOOPED
	
OKVAZY	
	LEA	DATAS_C,A0	;
	LEA	-8(A0),A0	;
BOUI	LEA	8(A0),A0	;
	CMP.L	#BUFCOD,A0
	BEQ	LP
	CMP.L	(A0),D4	;
	BNE.S	BOUI	;
	CLR.L	4(A0)	;

	MOVE.L	D4,(A1)+
	MOVE.L	D0,(A1)+
	CMPI.L	#7,D3
	BEQ.S	LP
	ADDQ.L	#1,D3
	MOVEQ	#0,D0
	LEA	DATAS_C,A0
	LEA	-8(A0),A0
	BRA.S	LOOPED
	
LP	LEA	DATAS_C,A0
	MOVE	#1999,D0
P	CLR.L	(A0)+
	DBF	D0,P
	JSR	GENERE2

	MOVEM.L	D0-A6,INIT
	movem.l	(sp)+,d0-a6
	MOVEM.L	D0-A6,REG_GEN
	MOVE.L	(SP)+,D7
	RTS
	
ALAFIN	MOVEM.L	REG_GEN,D0-A6
	CLR.L	POINTA
	CLR.L	POINTB
	clr	x_angle
	clr	y_angle
	clr	z_angle
	LEA	DATA_X,A1
	LEA	MINI5,A2
	LEA	MINI,A3
	LEA	MINI2,A4
	LEA	MINI3,A5
	LEA	MINI4,A6
	MOVEM.L	D0-A6,REG_GEN
	JSR	GENERATING
	MOVE.L	#VBL_ZIK,$70.W
	JSR	EFF_SCR
	JSR	EFF_SCR4
	
	LEA	TABLE,A1
	MOVE.L	(A1),A1
	MOVEM.L	(A1),D0-D7
	MOVE.L	SCREEN1,A0
	JSR	8*4(A1)
	MOVE.L	SCREEN2,A0
	JSR	8*4(A1)
	
	LEA	TABLE+4,A1
	MOVE.L	A1,VBC
	LEA	MODIF_CUBE,A0
	MOVE	#$4EB9,(A0)+
	MOVE.L	#VBL_CUBE,(A0)
	CLR.L	FORCE_DEMO
	MOVE	#-48,MOD1
	MOVE	#-48,MOD2
	MOVE	#-48,MOD3
	MOVE	#-48,MOD4
	MOVE	#-48,MOD5
	MOVE	#-48,MOD6
	JSR	INIT_TXT
	CLR.L	COMPTEUR
	MOVE.L	#TEXTEF,MODIF

	MOVE.L	#$00010556,$FFFF8240.W
	MOVE.L	#$07770777,$FFFF8244.W
	MOVE.L	#$04440444,$FFFF8248.W
	MOVE.L	#$07770777,$FFFF824C.W
	MOVE.L	#$05560556,$FFFF8250.W
	MOVE.L	#$07770777,$FFFF8254.W
	MOVE.L	#$04440444,$FFFF8258.W
	MOVE.L	#$07770777,$FFFF825C.W

	MOVE.L	#VBL,$70.W
DZ	CMPI.B	#$39,$FFFFFC02.W
	BEQ.S	OKAY_GO
	TST.L	FORCE_DEMO
	BEQ.S	DZ
OKAY_GO	MOVE.L	#VBL_ZIK,$70.W
	JSR	EFF_SCR
	CLR.L	FORCE_DEMO
	MOVE	#-24,MOD1
	MOVE	#-24,MOD2
	MOVE	#-24,MOD3
	MOVE	#-24,MOD4
	MOVE	#-24,MOD5
	MOVE	#-24,MOD6
	JSR	INIT_TXT
	CLR.L	COMPTEUR
	MOVE.L	#TEXTEF2,MODIF
	LEA	MODIF_CUBE,A0
	MOVE	#$4E71,(A0)+
	MOVE.L	#$4E714E71,(A0)

	MOVE.L	#VBL,$70.W
	MOVE	#SEG_H,A_MODIFIER_1

	MOVE.L	#$00010001,$FFFF8240.W
	MOVE.L	#$07770777,$FFFF8244.W
	MOVE.L	#$04440444,$FFFF8248.W
	MOVE.L	#$07770777,$FFFF824C.W
	MOVE.L	#$00010001,$FFFF8250.W
	MOVE.L	#$07770777,$FFFF8254.W
	MOVE.L	#$04440444,$FFFF8258.W
	MOVE.L	#$07770777,$FFFF825C.W

	CLR.L	PNT
	LEA	BUFCOD,A0
	MOVE.L	A0,SAVEA0
	LEA	TABLE,A4
	MOVE.L	A4,SAVEA4

	MOVEM.L	D0-A6,INIT

	clr	x_angle
	clr	y_angle
	clr	z_angle
	CLR.L	POINTEUR
	move	#256,z_pt_fuite
	LEA	DATA_X,A1
	MOVEM.L	D0-A6,REG_GEN
	
	MOVE	#NB_POS_H-1,D7
LABELED	JSR	GENERATING2
	DBF	D7,LABELED
	MOVEM.L	REG_GEN,D0-A6
	clr	x_angle
	clr	y_angle
	clr	z_angle
	LEA	DATA_X,A1
	MOVEM.L	D0-A6,REG_GEN
	JSR	GENERATING2
	JSR	EFF_SCR4
	MOVE.L	#VBL_ZIK,$70.W
	
	
	LEA	TABLE+4,A1
	MOVE.L	A1,VBC
	LEA	MODIF_CUBE,A0
	MOVE	#$4EB9,(A0)+
	MOVE.L	#VBL_CUBE,(A0)
	JSR	EFF_SCR

	LEA	TABLE,A1
	MOVE.L	(A1),A1
	MOVEM.L	(A1),D0-D7
	MOVE.L	SCREEN1,A0
	JSR	8*4(A1)
	MOVE.L	SCREEN2,A0
	JSR	8*4(A1)
	
	CLR.L	FORCE_DEMO
	MOVE	#-20,MOD1
	MOVE	#-20,MOD2
	MOVE	#-20,MOD3
	MOVE	#-20,MOD4
	MOVE	#-20,MOD5
	MOVE	#-20,MOD6
	JSR	INIT_TXT
	CLR.L	COMPTEUR
	MOVE.L	#TEXTEFF,MODIF
	MOVE.L	#VBL,$70.W
	MOVE.L	#$00010556,$FFFF8240.W
	MOVE.L	#$05560556,$FFFF8250.W
J	JMP	J

VBC	DC.L	0
VBL_CUBE	MOVEM.L	D0-A6,-(SP)
	MOVE.L	VBC,A1
	MOVE.L	(A1)+,A2
	TST.L	-4(A1)
	BNE.S	ROUL
	LEA	TABLE+4,A1
	MOVE.L	(A1)+,A2
ROUL	MOVEM.L	(A2),D0-D7
	MOVE.L	SCREEN1,A0
	JSR	8*4(A2)
	MOVE.L	SCREEN2,A0
	JSR	8*4(A2)
	MOVE.L	A1,VBC
	MOVEM.L	(SP)+,D0-A6
	RTS

SAVED0	DS.L	1
SAVEA0	DS.L	1
SAVEA4	DS.L	1
GENERE1
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVE.L	#-16+6,D7	OFFSET
	LEA	BUF1,A1
	LEA	BUF2,A2
	LEA	DATAS_C,A6
	
LOOP	ADD.L	#16,D7
	CMPI	#32000,D7
	BGT	FINI2
	MOVE	(A1)+,D0
	MOVE	(A1)+,D1
	MOVE	(A2)+,D2
	MOVE	(A2)+,D3

	CMP	D0,D2
	BEQ.S	LOOP
	CMP	D1,D3
	BEQ.S	LOOP
	TST	D3
	BEQ.S	PLAN2_VIDE
MOVEL	MOVE	D2,D5
	SWAP	D5
	MOVE	D3,D5
	JSR	DO_IT
	BRA.S	LOOP
PLAN2_VIDE	TST	D2
	BNE.S	MOVEL
	BRA.S	LOOP
FINI2	RTS

GENERE2
	MOVEQ	#0,D0
	MOVEQ	#0,D1
	MOVEQ	#0,D2
	MOVEQ	#0,D3
	MOVEQ	#0,D6
	MOVE.L	#-16+6,D7	OFFSET
	LEA	BUF1,A1
	LEA	BUF2,A2
	LEA	FINAL,A6
	MOVE.L	SAVEA0,A0
	MOVE.L	SAVEA4,A4
	MOVE.L	A0,(A4)+
	MOVE.L	A4,SAVEA4
	REPT	8
	MOVE.L	(A6)+,(A0)+
	MOVE.L	(A6)+,D0
	ENDR
	
WLOOPED	MOVEQ	#0,D0
WLOOP	ADD.L	#16,D7
	CMPI	#32000,D7
	BGT	WFINI
	MOVE	(A1)+,D0
	MOVE	(A1)+,D1
	MOVE	(A2)+,D2
	MOVE	(A2)+,D3

	CMP	D0,D2
	BEQ	WSAME_MOT1
	CMP	D1,D3
	BEQ.S	WSAME_MOT2
	TST	D3
	BEQ.S	WPLAN2_VIDE
WMOVEL	

	MOVE.B	#$40,D6
	LEA	FINAL,A6
	MOVE	D2,D5
	SWAP	D5
	MOVE	D3,D5
	LEA	-8(A6),A6
TROUVE	LEA	8(A6),A6
	CMP.L	(A6),D5
	BEQ.S	C_LE_MEME
	ADDQ.B	#1,D6
	CMPI.B	#$48,D6
	BEQ.S	PADFRQ
	BRA.S	TROUVE
C_LE_MEME	MOVE.B	#$21,(A0)+
	MOVE.B	D6,(A0)+
	MOVE	D7,(A0)+
	BRA.S	WLOOP
PADFRQ	
	MOVE	#$217C,(A0)+
	MOVE	D2,(A0)+
	MOVE	D3,(A0)+
	MOVE	D7,(A0)+
	BRA.S	WLOOP
WPLAN2_VIDE	TST	D2
	BNE.S	WMOVEL
	MOVE	#$42A8,(A0)+
	MOVE	D7,(A0)+
	BRA.S	WLOOP

WSAME_MOT2	TST	D2
	BNE.S	WMOVE_PLAN1
WCLR_PLAN1	MOVE	#$4268,(A0)+
	MOVE	D7,(A0)+
	BRA.S	WLOOP
WMOVE_PLAN1	
	MOVE.B	#$40,D6
	LEA	FINAL,A6
	MOVE	D2,D5
	LEA	-8(A6),A6
TROUVE2	LEA	8(A6),A6
	CMP	2(A6),D5
	BEQ.S	C_LE_MEME2
	ADDQ.B	#1,D6
	CMPI.B	#$48,D6
	BEQ.S	PADFRQ2
	BRA.S	TROUVE2
C_LE_MEME2	MOVE.B	#$31,(A0)+
	MOVE.B	D6,(A0)+
	MOVE	D7,(A0)+
	BRA	WLOOP
PADFRQ2

	MOVE	#$317C,(A0)+
	MOVE	D2,(A0)+
	MOVE	D7,(A0)+
	BRA	WLOOP

WSAME_MOT1	CMP	D1,D3
	BEQ	WLOOP
	TST	D3
	BNE.S	WMOVE_PLAN2
WCLR_PLAN2	MOVE	#$4268,(A0)+
	MOVE	D7,(A0)
	ADDQ	#2,(A0)+
	BRA	WLOOP
WMOVE_PLAN2	
	MOVE.B	#$40,D6
	LEA	FINAL,A6
	MOVE	D3,D5
	LEA	-8(A6),A6
TROUVE3	LEA	8(A6),A6
	CMP	2(A6),D5
	BEQ.S	C_LE_MEME3
	ADDQ.B	#1,D6
	CMPI.B	#$48,D6
	BEQ.S	PADFRQ3
	BRA.S	TROUVE3
C_LE_MEME3	MOVE.B	#$31,(A0)+
	MOVE.B	D6,(A0)+
	MOVE	D7,(A0)
	ADDQ	#2,(A0)+
	BRA	WLOOP
PADFRQ3


	MOVE	#$317C,(A0)+
	MOVE	D3,(A0)+
	MOVE	D7,(A0)
	ADDQ	#2,(A0)+
	BRA	WLOOP
	
		
WFINI	MOVE	#$4E75,(A0)+
	MOVE.L	A0,SAVEA0
	RTS

DO_IT	MOVEM.L	D0-A6,-(SP)
	LEA	DATAS_C,A0
HERE	TST.L	(A0)
	BEQ.S	OKEY
	CMP.L	(A0),D5
	BEQ.S	IDEM
	LEA	8(A0),A0
	BRA.S	HERE
IDEM	LEA	4(A0),A0
	ADDQ.L	#1,(A0)+
	BRA.S	HER
	
OKEY	MOVE.L	D5,(A0)+
	MOVE.L	#1,(A0)+
HER	MOVEM.L	(SP)+,D0-A6
	RTS


sp_to_pl5 movem.l d0-d7/a1-a6,-(a7)
	CMPI.L	#4*10*4,POINTB
	BEQ.S	TUR
	lea 	points,a6
	ADDA.L	POINTEUR,A6
	ADD.L	#4,POINTEUR
	ADD.L	#4,POINTB
	
	BRA.S	TUR2
TUR	LEA	points2,a6
	adda.l	POINTEURED,A6
	ADD.L	#4,POINTEURED
TUR2
	move.w (a6)+,d0	;d0=xe
	move.w (a6)+,d2	;d1=ye
	move	#-50,d1

	SUB	#160,D0
	SUB	#100,D2
	JMP	GAZ

sp_to_pl4 movem.l d0-d7/a1-a6,-(a7)
	CMPI.L	#4*10*4,POINTB
	BEQ.S	TURB
	lea 	points,a6
	ADDA.L	POINTEUR,A6
	ADD.L	#4,POINTEUR
	ADD.L	#4,POINTB

	BRA.S	TUR2B
TURB	LEA	points2,a6
	adda.l	POINTEURED,A6
	ADD.L	#4,POINTEURED
TUR2B
	move.w (a6)+,d0	;d0=xe
	move.w (a6)+,d2	;d1=ye
	move	#50,d1

	SUB	#160,D0
	SUB	#100,D2
	JMP	GAZ

sp_to_pl3 movem.l d0-d7/a1-a6,-(a7)
	CMPI.L	#4*10*4,POINTB
	BEQ.S	TURC
	lea 	points,a6
	ADDA.L	POINTEUR,A6
	ADD.L	#4,POINTEUR
	ADD.L	#4,POINTB
;	ADD.L	#4,POINTA
	BRA.S	TUR2C
TURC	LEA	points2,a6
	adda.l	POINTEURED,A6
	ADD.L	#4,POINTEURED
TUR2C
	move.w (a6)+,d2	;d0=xe
	move.w (a6)+,d1	;d1=ye
	move	#50,d0

	SUB	#160,D2
	SUB	#100,D1
	JMP	GAZ

sp_to_pl2 movem.l d0-d7/a1-a6,-(a7)
	CMPI.L	#4*10*4,POINTB
	BEQ.S	TURD
	lea 	points,a6
	ADDA.L	POINTEUR,A6
	ADD.L	#4,POINTEUR
	ADD.L	#4,POINTB
;	ADD.L	#4,POINTA
	BRA.S	TUR2D
TURD	LEA	points2,a6
	adda.l	POINTEURED,A6
	ADD.L	#4,POINTEURED
TUR2D
	move.w (a6)+,d2	;d0=xe
	move.w (a6)+,d1	;d1=ye
	move	#-50,d0

	SUB	#160,D2
	SUB	#100,D1
	JMP	GAZ

sp_to_pl movem.l d0-d7/a1-a6,-(a7)
	CMPI.L	#4*10*4,POINTB
	BEQ.S	TURE
	lea 	points,a6
	ADDA.L	POINTEUR,A6
;	ADD.L	#4,POINTA
	ADD.L	#4,POINTB
	ADD.L	#4,POINTEUR
	BRA.S	TUR2E
TURE	LEA	points2,a6
	adda.l	POINTEURED,A6
	ADD.L	#4,POINTEURED
TUR2E
	move.w (a6)+,d0	;d0=xe
	move.w (a6)+,d1	;d1=ye
	move	#50,d2

	SUB	#160,D0
	SUB	#100,D1
GAZ	
	lea depla,a3
	adda.l	POINTEUR2,A3
	MOVEQ	#0,d3
	MOVEQ	#0,d4
	move.w (a3)+,d5
	
EXT_GO	ext.l d3
	ext.l d4
	ext.l d5
	moveq #9,d6
	asl.l d6,d3
	asl.l d6,d4
	asl.l d6,d5
	movea.l d3,a1	
	movea.l d4,a2
	movea.l d5,a3
	
	lea var_3d,a6
	move.w d0,d3
	move.w d1,d4
	move.w d2,d5
	muls (a6)+,d3
	muls (a6)+,d4
	muls (a6)+,d5
	add.l d4,d5
	add.l d3,d5
	add.l a3,d5
	move.l d5,a5
	divs z_pt_fuite,d5

	move.w #512,d7
	sub.w d5,d7
	move.w d0,d3
	move.w d1,d4
	move.w d2,d5
		
	muls (a6)+,d3
	muls (a6)+,d4
	muls (a6)+,d5
	add.l d4,d5
	add.l d3,d5
	add.l a1,d5
	move.l d5,a4
	divs d7,d5
	muls (a6)+,d0
	muls (a6)+,d1
	muls (a6)+,d2
	add.l d0,d1
	add.l d1,d2
	add.l a2,d2
	move.l d2,d6
	divs d7,d2
	
	lea xp,a6
	add.w #160,d5
	move.w d5,(a6)+
	
	add.w #100,d2
	move.w d2,(a6)+

	move.l a4,d5
	move.l a5,d7
	moveq #9,d0
	asr.l d0,d5
	asr.l d0,d6
	asr.l d0,d7
			
	move.w d5,(a6)+
	move.w d6,(a6)+
	move.w d7,(a6)+
	movem.l (a7)+,d0-d7/a1-a6
	rts

ROUTINE_C
	MOVE	xp,D0
	MOVE	D0,(A1)+

	MOVE	yp,D0
	MOVE	D0,(A1)+

	RTS

poly:
	JSR	LINE_A_INIT
	
	LEA	DATA_X,A5
	ADDA.L	PNT,A5
	CMPI	#$9999,(A5)
	BNE.S	OKAY
	CLR.L	PNT
	LEA	DATA_X,A5
	BRA.S	OKAY2
OKAY	ADD.L	#4*4,PNT
OKAY2	
	moveq	#0,d3

	moveq	#0,d4
	moveq	#0,d5
	moveq	#0,d6
	moveq	#0,d7
	move	2(a5),d4
	move	6(a5),d5
	move	10(a5),d6
	move	14(a5),d7

	cmp	d4,d5
	bgt	d5_pg
	move	d4,d5
d5_pg	
	cmp	d6,d5
	bgt	d5_pg2
	move	d6,d5
d5_pg2	
	cmp	d7,d5
	bgt	d5_pg3
	move	d7,d5
d5_pg3	addq	#1,d5
	move	d5,ymax

	moveq	#0,d3

	moveq	#0,d4
	moveq	#0,d5
	moveq	#0,d6
	moveq	#0,d7
	move	2(a5),d4
	move	6(a5),d5
	move	10(a5),d6
	move	14(a5),d7

	cmp	d4,d5
	blt	d5_pgh
	move	d4,d5
d5_pgh
	cmp	d6,d5
	blt	d5_pg2h
	move	d6,d5
d5_pg2h	
	cmp	d7,d5
	blt	d5_pg3h
	move	d7,d5
d5_pg3h	subq	#1,d5
	move	d5,ymin
	
	LEA	_PTSIN,A6
	MOVE.L	(A5)+,(A6)+
	MOVE.L	(A5)+,(A6)+
	MOVE.L	(A5)+,(A6)+
	MOVE.L	(A5)+,(A6)+
	LEA	-4*4(A5),A5
	MOVE.L	(A5)+,(A6)+
	
	MOVE	ymin,D3
LOOP1	MOVE	D3,40(A0)
	MOVE.L	A0,-(SP)
	TST	d3
	blt.s	saut
	cmp	#200,d3
	bge.s	saut
	JSR	LINE_A_POLYGON
saut	
	MOVE.L	(SP)+,A0
	ADDQ	#1,D3
	CMP	ymax,D3
	BNE	LOOP1

	RTS
ymin	ds	1
ymax	ds	1
LINE_A_INIT
	LEA	EMUL_LINEA,A0
	MOVE.L	A0,D0
	RTS

LINE_A_POLYGON
	MOVEM.L	D3-D7/A3-A5,-(SP)
	JSR	_FCA0D6
	MOVEM.L	(SP)+,D3-D7/A3-A5
	RTS
_FCA0D6	MOVEQ	#3,D0      NB DE POINTS-1
	LEA	_PTSIN,A0
	LEA	BUF16DA,A1
	CLR.W	PNT_261E
	
LFCA0F4	MOVE.W	6(A0),D1
	MOVE.W	2(A0),D2
	SUB.W	D2,D1
	BEQ.S	LFCA13E
	MOVE.W	EMUL_LINEA-$299A+$29C2,D3
	MOVE.W	D3,D4
	SUB.W	D2,D4
	SUB.W	6(A0),D3
	MOVE.W	D4,D2
	EOR.W	D3,D2
	BPL.S	LFCA13E
	MOVE.W	4(A0),D2
	SUB.W	0(A0),D2
	ADD.W	D2,D2
	MULS.W	D2,D4
	DIVS.W	D1,D4
	BPL.S	LFCA12E
	NEG.W	D4
	ADDQ.W	#1,D4
	ASR.W	#1,D4
	NEG.W	D4
	BRA.S	LFCA132
LFCA12E	ADDQ.W	#1,D4
	ASR.W	#1,D4
LFCA132	ADD.W	0(A0),D4
	MOVE.W	D4,(A1)+
	ADDQ.W	#1,PNT_261E
	
LFCA13E	LEA	4(A0),A0
	DBF	D0,LFCA0F4
	MOVE.W	PNT_261E,D0
	BNE.S	LFCA150
	RTS
LFCA150	
	LEA	BUF16DA,A0
	BSR	LFCA1DC
	MOVE.W	PNT_261E,D0
	ASR.W	#1,D0
	SUBQ.W	#1,D0
	TST.W	EMUL_LINEA+$29D0-$299A
	BNE.S	LFCA18A
LFCA16C	
	MOVE.W	(A1)+,EMUL_LINEA+$29C0-$299A
	MOVE.W	(A1)+,EMUL_LINEA+$29C4-$299A
	MOVE.W	D0,-(A7)
	MOVE.L	A1,-(A7)
	BSR	_FCA5F6
	MOVEA.L	(A7)+,A1
	MOVE.W	(A7)+,D0
	DBF	D0,LFCA16C
	RTS
LFCA18A	
	MOVE.W	(A1)+,EMUL_LINEA+$29C0-$299A
	MOVE.W	(A1)+,EMUL_LINEA+$29C4-$299A

	MOVE	EMUL_LINEA+$29D2-$299A,D1
	MOVE	EMUL_LINEA+$29C0-$299A,D2
	MOVE	EMUL_LINEA+$29C4-$299A,D3
	CMP.W	D1,D2
	BGE.S	LFCA1B6
	CMP.W	D1,D3
	BLT.S	LFCA1D6
	MOVE.W	D1,EMUL_LINEA+$29C0-$299A
LFCA1B6	
	MOVE.W	EMUL_LINEA+$29D6-$299A,D1
	CMP.W	D1,D3
	BLE.S	LFCA1CA
	CMP.W	D1,D2
	BGT.S	LFCA1D6
	MOVE.W	D1,EMUL_LINEA+$29C4-$299A
LFCA1CA	MOVE.W	D0,-(A7)
	MOVE.L	A1,-(A7)
	BSR	_FCA5F6
	MOVEA.L	(A7)+,A1
	MOVE.W	(A7)+,D0
LFCA1D6	DBF	D0,LFCA18A
	RTS
LFCA1DC	SUBQ.W	#2,D0
	BCS.S	LFCA1FC
	MOVE.W	D0,D1
	MOVEA.L	A0,A1
LFCA1E4	MOVE.W	D1,D0
	MOVEA.L	A1,A0
LFCA1E8	MOVE.W	(A0)+,D2
	CMP.W	(A0),D2
	BLE.S	LFCA1F4
	MOVE.W	(A0),-2(A0)
	MOVE.W	D2,(A0)
LFCA1F4	DBF	D0,LFCA1E8
	DBF	D1,LFCA1E4
LFCA1FC	RTS
	MOVEQ	#1,D1
	MOVE.W	6(A7),D0
	MULS.W	4(A7),D0
	BGE.S	LFCA20C
	NEG.W	D1
LFCA20C	MOVE.W	8(A7),D2
	DIVS.W	D2,D0
	TST.W	D2
	BGE.S	LFCA21A
	NEG.W	D1
	NEG.W	D2
LFCA21A	MOVE.L	D3,-(A7)
	MOVE.L	D0,D3
	BGE.S	LFCA222
	NEG.L	D3
LFCA222	SWAP	D3
	ADD.W	D3,D3
	CMP.W	D2,D3
	BLT.S	LFCA22C
	ADD.W	D1,D0
LFCA22C	MOVE.L	(A7)+,D3
	RTS
	MOVE.W	D2,-(A7)
	MOVE.W	D3,-(A7)
	MULS.W	#160,D1

	MOVE.W	EMUL_LINEA,D3
	MOVE.B	_FCA259(PC,D3.W),D3
	MOVE.W	D0,D2
	EXT.L	D2
	AND.W	#$FFF0,D2
	ASR.W	D3,D2
	ADD.L	D2,D1
	AND.W	#$F,D0
	MOVE.W	(A7)+,D3
	MOVE.W	(A7)+,D2
	RTS
_FCA259	DC.L	$03020001
	DC.L	$00000000

_FCA5D4	DC	$FFFF
_FCA5D6	DC.L	$7FFF3FFF
	DC.L	$1FFF0FFF
	DC.L	$07FF03FF
	DC.L	$01FF00FF
	DC.L	$007F003F
	DC.L	$001F000F
	DC.L	$00070003
	DC.L	$00010000
_FCA5F6
	LEA	EMUL_LINEA,A4
	MOVEM.W	$26(A4),D4-D6
	MOVE.W	D5,D0
	AND.W	$32(A4),D0
	ADD.W	D0,D0
	MOVEA.L	$2E(A4),A0
	ADDA.W	D0,A0
	TST.W	$34(A4)
	SNE	D0
	AND.W	#$20,D0
	MOVE.W	D4,D1
	ASR.W	#4,D1
	MOVE.W	D6,D2
	ASR.W	#4,D2
	MOVEQ	#$F,D3
	AND.W	D3,D4
	ADD.W	D4,D4
	MOVE.W	_FCA5D4(PC,D4.W),D4
	AND.W	D3,D6
	ADD.W	D6,D6
	MOVE.W	_FCA5D6(PC,D6.W),D6
	NOT.W	D6
	SUB.W	D1,D2
	BNE.S	LFCA63C
	AND.W	D6,D4
LFCA63C	MOVEA.L	$9A(A4),A5
	
LFD1B58
MODECR2	EQU	*+2
	MOVEA.L	SCREEN3,A1
	MULS.W	#160,D5
	
	ADDA.L	D5,A1
	MOVEA.W	D0,A2

	MOVE.W	#4,D7
	
	MOVE.W	D7,D0
	ADD.W	D0,D0
	MULS.W	D0,D1
	ADDA.L	D1,A1

	moveq	#0,D7

	LEA	$18(A4),A3
	MOVE.W	$24(A4),D1
	ADD.W	D1,D1
TST	LEA	_FD1B86(PC,D1.W),A5
	ADDA.W	(A5),A5
	JMP	LFD1C52
	
_FD1B86	DC.L	$00CC0130
	DC.L	$009C014A
	DC.L	$4E56FFEC

LFD1C52

	NOT.W	D4
	NOT.W	D6
LFD1C56	MOVEA.L	A1,A4
	MOVE.W	D2,D5
	MOVE.W	(A0),D3
	ADDA.W	A2,A0
	TST.W	(A3)+
	BNE.S	LFD1C88
	MOVE.W	D4,D1
	AND.W	D1,(A1)
	ADDQ.L	#8,A1
	SUBQ.W	#1,D5
	BCS.S	LFD1C7E
	SUBQ.W	#1,D5
	BCS.S	LFD1C78
	CLR.W	D1
LFD1C70	ADDA.W	D0,A4
	MOVE.W	D1,(A4)
	DBF	D5,LFD1C70
LFD1C78	MOVE.W	D6,D1
	ADDA.W	D0,A4
	AND.W	D1,(A4)
LFD1C7E	DBF	D7,LFD1C56
	NOT.W	D4
	NOT.W	D6
	RTS
LFD1C88	MOVE.W	(A4),D1
	EOR.W	D3,D1
	AND.W	D4,D1
	EOR.W	D3,D1
	MOVE.W	D1,(A1)
	ADDQ.L	#8,A1
	SUBQ.W	#1,D5
	BCS.S	LFD1CAE
	SUBQ.W	#1,D5
	BCS.S	LFD1CA2
LFD1C9A	ADDA.W	D0,A4
	MOVE.W	D3,(A4)
	DBF	D5,LFD1C9A
LFD1CA2	ADDA.W	D0,A4
	MOVE.W	(A4),D1
	EOR.W	D3,D1
	AND.W	D6,D1
	EOR.W	D3,D1
	MOVE.W	D1,(A4)
LFD1CAE	DBF	D7,LFD1C56
	NOT.W	D4
	NOT.W	D6
	RTS

FILL	
	DC.L	-1
	DC.L	-1
	DC.L	-1
	DC.L	-1
	
TAB	
	DC	50,70
	DC	12,175
	DC	120,190
	DC	410,150

	DC	50,70

MINI	INCBIN	MINI.FAC
MINI2	INCBIN	MINI.GAU
MINI3	INCBIN	MINI.DRO
MINI4	INCBIN	MINI.BAS
MINI5	INCBIN	MINI.HAU

points2
 DC 210,50
 DC 110,50
 DC 110,51
 DC 210,51
 DC 110,50
 DC 110,150
 DC 111,150
 DC 111,50
 DC 110,149
 DC 110,150
 DC 210,150
 DC 210,149
 DC 210,150
 DC 210,50
 DC 209,50
 DC 209,150
points
	INCBIN	HOLO.DAT
depla
 dc -117
 dc -110
 dc -103
 dc -96
 dc -89
 dc -82
 dc -75
 dc -68
 dc -62
 dc -55
 dc -49
 dc -43
 dc -37
 dc -31
 dc -26
 dc -21
 dc -16
 dc -11
 dc -7
 dc -3
 dc 1
 dc 5
 dc 8
 dc 10
 dc 13
 dc 15
 dc 17
 dc 18
 dc 19
 dc 19
 dc 20
 dc 19
 dc 19
 dc 18
 dc 17
 dc 15
 dc 13
 dc 10
 dc 8
 dc 5
 dc 1
 dc -3
 dc -7
 dc -11
 dc -16
 dc -21
 dc -26
 dc -31
 dc -37
 dc -43
 dc -49
 dc -55
 dc -62
 dc -68
 dc -75
 dc -82
 dc -89
 dc -96
 dc -103
 dc -110
 dc -117
 dc -125
 dc -132
 dc -139
 dc -146
 dc -153
 dc -160
 dc -167
 dc -173
 dc -180
 dc -186
 dc -192
 dc -198
 dc -204
 dc -209
 dc -214
 dc -219
 dc -224
 dc -228
 dc -232
 dc -236
 dc -240
 dc -243
 dc -245
 dc -248
 dc -250
 dc -252
 dc -253
 dc -254
 dc -254
 dc -254
 dc -254
 dc -254
 dc -253
 dc -252
 dc -250
 dc -248
 dc -245
 dc -243
 dc -240
 dc -236
 dc -232
 dc -228
 dc -224
 dc -219
 dc -214
 dc -209
 dc -204
 dc -198
 dc -192
 dc -186
 dc -180
 dc -173
 dc -167
 dc -160
 dc -153
 dc -146
 dc -139
 dc -132
 dc -125
 
 dc -117
 dc -110
	
PART1	DC.W	%1111111111111111
	DC.W	%0111111111111111
	DC.W	%0011111111111111
	DC.W	%0001111111111111
	DC.W	%0000111111111111
	DC.W	%0000011111111111
	DC.W	%0000001111111111
	DC.W	%0000000111111111
	DC.W	%0000000011111111
	DC.W	%0000000001111111
	DC.W	%0000000000111111
	DC.W	%0000000000011111
	DC.W	%0000000000001111
	DC.W	%0000000000000111
	DC.W	%0000000000000011
	DC.W	%0000000000000001

PART2	DC.W	%1000000000000000
	DC.W	%1100000000000000
	DC.W	%1110000000000000
	DC.W	%1111000000000000
	DC.W	%1111100000000000
	DC.W	%1111110000000000
	DC.W	%1111111000000000
	DC.W	%1111111100000000
	DC.W	%1111111110000000
	DC.W	%1111111111000000
	DC.W	%1111111111100000
	DC.W	%1111111111110000
	DC.W	%1111111111111000
	DC.W	%1111111111111100
	DC.W	%1111111111111110
	DC.W	%1111111111111111

PNTS
N	SET	32768
	REPT	16
	DC.W	N
N	SET	N/2
	ENDR

	section bss
DATA_X
	DS	NB_PTS_C*5*2
	DATA
	DC	$9999
	section bss
	EVEN
CNT	DS.L	1
CNT2	DS.L	1
PNT_X	DS.L	1
PNT_Y	DS.L	1
PNT	DS.L	1
PNTMINI	DS.L	1
INIT	DS.L	16
REG_GEN	DS.L	16
POINTA	DS.L	1
POINTB	DS.L	1
POINTEURED	DS.L	1
POINTEUR2	DS.L	1
*LINE_A_EMUL

PNT_261E	DS	1
EMUL_LINEA	DS.B	100
BUF16DA	DS.B	512
BUF299A	DS.B	512

_PTSIN	DS.B	100
MEGABUF	DS.B	303120

;TABLE	DS.L	200
;BUF1	DS.B	8000
;BUF2	DS.B	8000
;FINAL	DS.L	16
;DATAS_C	DS.B	8000
;BUFCOD	DS.B	120000
;IMG
;BUFCOD_	DS.B	6918
;IMG2	DS.B	278000-32066+256-120000-6918
;END_BUFCOD	DS.B	32066
;;278000
TABLE	EQU	MEGABUF
BUF1	EQU	MEGABUF+200*4
BUF2	EQU	MEGABUF+200*4+8000
FINAL	EQU	MEGABUF+200*4+16000
DATAS_C	EQU	MEGABUF+200*4+16000+16*4
BUFCOD	EQU	MEGABUF+200*4+16000+16*4+8000
IMG	EQU	MEGABUF+200*4+16000+16*4+8000+120000
BUFCOD_	EQU	MEGABUF+200*4+16000+16*4+8000+120000
IMG2	EQU	MEGABUF+200*4+16000+16*4+8000+120000+6918
END_BUFCOD	EQU	MEGABUF+200*4+16000+16*4+8000+120000+6918+278000-32066+256-120000-6918
;278000

*****
	DATA
	even
;IMG	INCBIN	P1C.PI1	6918
;IMG2	INCBIN	P2C.PI1	+6399=13317
ZIK	INCBIN	FRAG.MUS

TEXTE	
 ;dc.b"                                       "
 DC.B " HERE COMES A NEW SCREEN FROM THE MOST "
 DC.B "ACTIVE MEMBER OF **H O L O C A U S T** "
; dc.b "                                       "
 dc.L	-1,-1
	EVEN
TEXTE2
 ;dc.b"                                       "
 DC.B " LET'S BEGIN WITH A NICE PICTURE....   "
 dc.b "                                       "
 dc.L	-1,-1
	EVEN
TEXTE3
 ;dc.b"                                       "
 DC.B "   THE PICTURE WAS DRAWN IN TWO DAYS   "
 DC.B "   DURING A COOL WEEK-END AT ELRIC'S   "
 DC.B "   HEADQUARTER...  IT'S DEDICATED TO   "
 DC.B "         *SKAVEN* OF -MASTERS-         "
 dc.b "                                       "
 dc.L	-1,-1
	EVEN
TEXTE4
 ;dc.b"                                       "
 DC.B "I'M A GRAPHIST, BUT I'M ALSO A CODER..."
 DC.B "   **SO LET'S HAVE SOME HEAVY CODE**   "
 dc.b "                                       "
 dc.L	-1,-1
	EVEN
TEXTEF
 ;dc.b"                                       "
 dc.b "                                       "
 DC.B "        T H E    C R E D I T S :       "
 DC.B "  ALL CODING AND GFXS...........ZAPPY  "
 DC.B "  MUSIC.........JESS OF *OVERLANDERS*  "
 DC.B "                                       "
 DC.B "      T H E   G R E E T I N G S :      "
 DC.B "  OVERLANDERS - LEGACY - ST CONNEXION  "
 DC.B "  NAOS - VEGETABLES - MASTERS - MCODER "
 DC.B "    AWG - PULSION - SECTOR 1 - 1984    "
 DC.B "       and all foreign crews....       "
 dc.b "                                       "
 dc.L	-1,-1
	EVEN

TEXTEF2
 ;dc.b"                                       "
 DC.B " - - - MEMBERS OF HOLOCAUST ARE: - - - "
 DC.B "   ELRIC....................CODER/ST   "
 DC.B "   ZERIOUL..................CODER/ST   "
 DC.B "   DAN NATO.................CODER/ST   "
 DC.B "   ZAPPY...............CODER/GFXS/ST   "
 DC.B "   NONE..................CODER/AMIGA   "
 DC.B "   BLYZZARD............GFXS/AMIGA/ST   "
 DC.B "   NEWTEK..............GFXS/AMIGA/ST   "
 dc.b "                                       "
 dc.L	-1,-1
	EVEN
TEXTEFF
 ;dc.b"                                       "
 dc.b "                                       "
 DC.B " ************************************* "
 DC.B " ***   T   H   E       E   N   D   *** "
 DC.B " ************************************* "
 dc.b "                                       "
 dc.b "                                       "
 dc.b "                                       "
 dc.b "                                       "
 dc.L	-1,-1
	EVEN
 
FONT8_8	
;	DCB.L	(50-13)*6,$FFFFFFFF
font:   	dc.l	$00000000,$00000000,$00181818,$18001800,$00666666 
	dc.l	$00000000,$0066FF66,$66FF6600,$183E603C,$067C1800 
	dc.l	$00666C18,$30664600,$1C361C38,$6F663B00,$00181818 
	dc.l	$00000000,$000E1C18,$181C0E00,$00703818,$18387000 
	dc.l	$00663CFF,$3C660000,$0018187E,$18180000,$00000000 
	dc.l	$00181830,$0000007E,$00000000,$00000000,$00181800 
	dc.l	$00060C18,$30604000,$003C666E,$76663C00,$00183818 
	dc.l	$18187E00,$003C660C,$18307E00,$007E0C18,$0C663C00 
	dc.l	$000C1C3C,$6C7E0C00,$007E607C,$06663C00,$003C607C 
	dc.l	$66663C00,$007E060C,$18303000,$003C663C,$66663C00 
	dc.l	$003C663E,$060C3800,$00001818,$00181800,$00001818 
	dc.l	$00181830,$060C1830,$180C0600,$00007E00,$007E0000 
	dc.l	$6030180C,$18306000,$003C660C,$18001800,$003C666E 
	dc.l	$6E603E00,$00183C66,$667E6600,$007C667C,$66667C00 
	dc.l	$003C6660,$60663C00,$00786C66,$666C7800,$007E607C 
	dc.l	$60607E00,$007E607C,$60606000,$003E6060,$6E663E00 
	dc.l	$0066667E,$66666600,$007E1818,$18187E00,$00060606 
	dc.l	$06663C00,$00666C78,$786C6600,$00606060,$60607E00 
	dc.l	$0063777F,$6B636300,$0066767E,$7E6E6600,$003C6666 
	dc.l	$66663C00,$007C6666,$7C606000,$003C6666,$666C3600 
	dc.l	$007C6666,$7C6C6600,$003C603C,$06063C00,$007E1818 
	dc.l	$18181800,$00666666,$66667E00,$00666666,$663C1800 
	dc.l	$0063636B,$7F776300,$0066663C,$3C666600,$0066663C 
	dc.l	$18181800,$007E0C18,$30607E00,$001E1818,$18181E00 
	dc.l	$00406030,$180C0600,$00781818,$18187800,$00081C36 
	dc.l	$63000000,$00000000,$0000FF00,$00183C7E,$7E3C1800 
	dc.l	$00003C06,$3E663E00,$0060607C,$66667C00,$00003C60 
	dc.l	$60603C00,$0006063E,$66663E00,$00003C66,$7E603C00 
	dc.l	$000E183E,$18181800,$00003E66,$663E067C,$0060607C 
	dc.l	$66666600,$00180038,$18183C00,$00060006,$0606063C 
	dc.l	$0060606C,$786C6600,$00381818,$18183C00,$0000667F 
	dc.l	$7F6B6300,$00007C66,$66666600,$00003C66,$66663C00 
	dc.l	$00007C66,$667C6060,$00003E66,$663E0606,$00007C66 
	dc.l	$60606000,$00003E60,$3C067C00,$00187E18,$18180E00 
	dc.l	$00006666,$66663E00,$00006666,$663C1800,$0000636B 
	dc.l	$7F3E3600,$0000663C,$183C6600,$00006666,$663E0C78 
	dc.l	$00007E0C,$18307E00,$00183C7E,$7E183C00,$18181818 
	dc.l	$18181818,$007E787C,$6E660600,$08183878,$38180800 
	even

pointsH
 DC 168,88
 DC 152,88
 DC 152,96
 DC 168,96
 DC 168,104
 DC 152,104
 DC 152,112
 DC 168,112
 DC 156,88
 DC 152,88
 DC 152,112
 DC 156,112
 DC 176,88
 DC 172,88
 DC 172,112
 DC 176,112
 DC 188,88
 DC 172,88
 DC 172,96
 DC 188,96
 DC 188,88
 DC 184,88
 DC 184,112
 DC 188,112
 DC 186,100
 DC 174,100
 DC 174,104
 DC 186,104
 DC 196,88
 DC 192,88
 DC 192,112
 DC 196,112
 DC 208,88
 DC 204,88
 DC 204,112
 DC 208,112
 DC 208,104
 DC 192,104
 DC 192,112
 DC 208,112
 DC 148,88
 DC 144,88
 DC 144,112
 DC 148,112
 DC 136,88
 DC 132,88
 DC 132,112
 DC 136,112
 DC 148,88
 DC 132,88
 DC 132,96
 DC 148,96
 DC 148,104
 DC 132,104
 DC 132,112
 DC 148,112
 DC 128,104
 DC 112,104
 DC 112,112
 DC 128,112
 DC 116,88
 DC 108+4,88
 DC 112,112
 DC 116,112
 DC 108,88
 DC 104,88
 DC 104,112
 DC 108,112
 DC 96,88
 DC 92,88
 DC 92,112
 DC 96,112
 DC 108,88
 DC 92,88
 DC 92,96
 DC 108,96
 DC 108,104
 DC 92,104
 DC 92,112
 DC 108,112
 DC 88,88
 DC 84,88
 DC 84,112
 DC 88,112
 DC 76,88
 DC 72,88
 DC 72,112
 DC 76,112
 DC 86,96
 DC 74,96
 DC 74,104
 DC 86,104
 DC 228,88
 DC 216,88
 DC 216,96
 DC 224+4,96
 DC 220,96
 DC 216,96
 DC 216,104
 DC 220,104
 DC 220,104
 DC 212,104
 DC 212,112
 DC 220,112
 DC 248,88
 DC 232,88
 DC 232,96
 DC 248,96
 DC 242,94
 DC 238,94
 DC 238,112
 DC 242,112

TABLE_Y
N	SET	0
	REPT	200
	DC	N
N	SET	N+160
	ENDR
	EVEN

DATAS	INCBIN	TXTDAT
ADR_ROUTS	;DS.B	15000
_IMG	INCBIN	P1C.PI1
_IMG2	INCBIN	P2C.PI1
	DS.B	15000-13317

X_DEP	DC	0
Y_DEP	DC	0
	BSS
OFFSET	DS	1
	EVEN
DATEFF	DS.L	1
DATEFF2	DS.L	1
BUFEFF	DS	64*6*2
COMPTEUR	DS.L	1
SCREEN1	DS.L	1
SCREEN1B	DS.L	1
SCREEN2	DS.L	1
SCREEN3	DS.L	1
	DS.B	256
BUF	DS.B	64000
;	DS.B	32066
TABLE_ADR	DS.L	258
DATAS2	DS.B	TAILLE*4
DATAS3	DS.B	TAILLE*4
TABLE_X
	DS	320	*!TABLE_X2 JUSTE
	EVEN		*DERRIERE
TABLE_X2			*OBLIGATOIREMENT
	DS.B	320
	EVEN
