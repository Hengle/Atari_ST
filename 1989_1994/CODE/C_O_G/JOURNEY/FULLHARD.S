; KARL: 60 12 44 01
;
; FULSCREEN A TEMPS VARIABLE ET HARDSCROLLER
; ½ VULCAN / LEGACY 1991
;
; 230 OCTETS PAR LIGNE ET 256 LIGNES
;
; 288 CYCLES MAXIMUM PAR LIGNE
; 124 CYCLES DE VARIATION MAXIMUM
;



OFFLINE	EQU	230

	SECTION	TEXT

	BSR	PREPARE_SCREEN
	CLR.L	-(SP)		; SUPERVISEUR
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP
	MOVE.L	D0,SAUVE_USP
	
	MOVE.W	#$2700,SR		; ARRET DE TOUTES LE ITs
	
	LEA	MUSIX(PC),A0		; INITIALISATION DE LA MUSIQUE
	MOVEQ	#1,D0
	BSR	PLAYER

	MOVEM.L	$FFFF8240.W,D0-D7	; SAUVEGARDE DE LA PALETTE
	MOVEM.L	D0-D7,SAUVE_PAL
	MOVEM.L	IMAGE+2(PC),D0-D7	; INITIALISATION DE LA NOUVELLE
	MOVEM.L	D0-D7,PALETTE		; PALETTE
	
	MOVE.L	#SCREEN0,PHYBASE	; ADRESSAGE DES ECRANS
	MOVE.L	#SCREEN1,LOGBASE	; PHYSIQUE ET LOGIQUE
	CLR.W	KEY		; INITIALISATION DU BUFFER CLAVIER
	
	BSR	KILL_YM		; VOLUME YAMAHA A ZERO
	BSR.S	INIT_INT		; MISE EN PLACE DES NOUVELLES ITs
	MOVE.W	#$2300,SR		; ON AUTORISE A NOUVEAU LES ITs
	
TEST_KEY:	CMPI.W	#$39+$80,KEY		; ON ATTENDS LA BARRE D'ESPACE
	BNE.S	TEST_KEY
	
	BSR	RSTR_INT		; RESTORATION DES ANCIENNES ITs
	BSR	KILL_YM		; VOLUME YAMAHA A ZERO

	MOVEM.L	SAUVE_PAL,D0-D7		; RESTORATION LA PALETTE
	MOVEM.L	D0-D7,$FFFF8240.W
	
	MOVE.L	SAUVE_USP,-(SP)		; UTILISATEUR
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP

	ILLEGAL

;
; SUBS...
;

INIT_INT:	MOVE.W	SR,-(SP)		; INITIALISATION DES ITs
	MOVE.W	#$2700,SR
	MOVE.L	$FFFF8200.W,SAUVE_PHY
	MOVE.B	$FFFFFA07.W,SAUVE_MFP
	MOVE.B	$FFFFFA09.W,SAUVE_MFP+1
	MOVE.B	$FFFFFA13.W,SAUVE_MFP+2
	MOVE.B	$FFFFFA15.W,SAUVE_MFP+3
	MOVE.B	$FFFFFA17.W,SAUVE_MFP+4
	MOVE.B	$FFFFFA19.W,SAUVE_MFP+5
	MOVE.B	$FFFFFA1F.W,SAUVE_MFP+6
	MOVE.L	$68.W,SAUVE_HBL
	MOVE.L	$70.W,SAUVE_VBL
	MOVE.L	$134.W,SAUVE_TMA
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	CLR.B	$FFFFFA13.W
	CLR.B	$FFFFFA15.W
	MOVE.L	#INTER_RTE,$68.W
	MOVE.L	#INTER_VBL,$70.W
	MOVE.L	PHYBASE,SHIFTER
	RTE

RSTR_INT:	MOVE.W	SR,-(SP)		; RESTORATION DES ITs
	MOVE.W	#$2700,SR
	MOVE.L	SAUVE_PHY,$FFFF8200.W
	MOVE.L	SAUVE_VBL,$70.W
	MOVE.L	SAUVE_TMA,$134.W
	MOVE.L	SAUVE_HBL,$68.W
	MOVE.B	SAUVE_MFP,$FFFFFA07.W
	MOVE.B	SAUVE_MFP+1,$FFFFFA09.W
	MOVE.B	SAUVE_MFP+2,$FFFFFA13.W
	MOVE.B	SAUVE_MFP+3,$FFFFFA15.W
	MOVE.B	SAUVE_MFP+4,$FFFFFA17.W
	MOVE.B	SAUVE_MFP+5,$FFFFFA19.W
	MOVE.B	SAUVE_MFP+6,$FFFFFA1F.W
	RTE

KILL_YM:	MOVE.L	#$08080000,$FFFF8800.W	; VOLUME YAMAHA A ZERO
	MOVE.L	#$09090000,$FFFF8800.W
	MOVE.L	#$0A0A0000,$FFFF8800.W
	RTS

PREPARE_SCREEN:	LEA	IMAGE+34(PC),A0
	LEA	SCREEN0,A1
	MOVE.W	#199,D0
NXT_LINE:	MOVEA.L	A1,A2
	MOVE.W	#39,D1
NXT_REAL_AFF:	MOVE.L	(A0)+,(A2)+
	DBF	D1,NXT_REAL_AFF
	ADDA.L	#230,A1
	DBF	D0,NXT_LINE
	RTS

;
; ROUTINES HARDSCROLLER
;

MAKE_HARD:	LEA	HARD_TBL(PC),A0		; PREPARATION DES COMBINAISONS
	LEA	LINE0+2(PC),A2
	LEA	LINE_TBL(PC),A3
	MOVE.L	SHIFTER,D0
	SUBI.L	#160*7+8*17-2+230,D0
	MOVE.L	D0,D1
	ANDI.W	#$00FE,D0
	ANDI.W	#$FF00,D1
	ASL.W	#3,D0
	ADDA.W	D0,A0
	MOVE.W	(A0)+,D2
	EXT.L	D2
	ADD.L	D2,D1
	LSR.W	#8,D1
	MOVE.L	D1,$FFFF8200.W

OFFSET	SET	0
	REPT	7
	MOVE.W	(A0)+,D0
	ADD.W	D0,D0
	ADD.W	D0,D0
	MOVE.L	0(A3,D0.W),OFFSET(A2)
OFFSET	SET	OFFSET+6
	ENDR

	RTS

MOVINGBACK:	MOVE.L	SHIFTER,D0		; DEPLACEMENT DE L'ADRESSE VIDEO
	MOVEQ	#0,D7		; AVEC LES FLECHES DU CURSEUR
	MOVE.B	$FFFFFC02.W,D7
	MOVE.W	D7,KEY

	CMP.B	#$4D,D7
 	BNE.S	NO_LEFT
	SUBI.L	#8,D0
NO_LEFT:	CMP.B	#$48,D7
	BNE.S	NO_UP
	ADDI.L	#OFFLINE,D0
NO_UP:	CMP.B	#$4B,D7
	BNE.S	NO_RIGHT
	ADDI.L	#8,D0
NO_RIGHT:	CMP.B	#$50,D7
	BNE.S	NO_DOWN
	SUBI.L	#OFFLINE,D0
NO_DOWN:	CMP.B	#$52,D7
	BNE.S	NO_HALFL
	ADDI.L	#2,D0
NO_HALFL:	CMP.B	#$47,D7
	BNE.S	NO_HALFR
	SUBI.L	#2,D0
NO_HALFR:	MOVE.L	D0,SHIFTER
	RTS

;
; ROUTINES FULLSCREEN...
;

INTER_RTE:	RTE			; POUR LA HBL (ENTRE AUTRES)

INTER_VBL:	CLR.B	$FFFF8260.W		; TOUJOURS BASSE RESOLUTION

	MOVE.B	#0,$FFFFFA19.W		; PREPARATION DU MFP POUR LE
	MOVE.B	#99,$FFFFFA1F.W		; BORDER HAUT
	MOVE.B	#4,$FFFFFA19.W
	BCLR	#3,$FFFFFA17.W
	MOVE.L	#INTER_TMA,$134.W
	ORI.B	#$20,$FFFFFA13.W
	ORI.B	#$20,$FFFFFA07.W

	MOVEQ	#0,D0		; TOUTE LA PALETTE A ZERO POUR
	LEA	$FFFF8240.W,A0		; NE PAS VOIR LE HARDSCROLLER
	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A0)+
	MOVE.L	D0,(A0)+

	BSR	PLAYER+4		; ON DISPOSE ICI D'ENVIRONS 31
				; RASTER LINES
	RTE

INTER_TMA:	CLR.B	$FFFFFA07.W		; ARRET DU MFP POUR NE PAS
	CLR.B	$FFFFFA09.W		; ETRE GENE
	MOVE.W	#$2100,SR		; ON AUTORISE LA HBL

	LEA	$FFFF8209.W,A2		; INITIALISATION DES REGISTRES
	LEA	$FFFF8260.W,A1		; POUR LES FREQUENCES
	LEA	$FFFF820A.W,A0
	MOVEQ	#0,D0
	MOVEQ	#2,D1

	STOP	#$2100		; ATTENTE DE LA PROCHAINE HBL
				; (FIXE A 16 CYCLES PRES ENVIRONS)
	MOVE.W	#$2700,SR		; ON COUPE TOUTE LES ITs
	MOVE.W	#$2300,(SP)		; AU RETOUR LE VBL SERA AUTORISEE

	MOVEQ	#29,D2		; ON ATTEND LE BON MOMENT
SYNCHRO:	DBF	D2,SYNCHRO
	NOP

	MOVE.B	D0,(A0)		; ET HOP! PLUS DE BORDER HAUT
	REPT	6
	NOP
	ENDR
	MOVE.B	D1,(A0)

	MOVE.W	#146,$140.W		; VALEUR DE DEPART POUR LA
				; SYNCHRO A CHAQUE LIGNE
	MOVE.W	#63,D2		; VAMEUR SPECIFIQUE A CETTE
	MOVEQ	#0,D3		; SYNCHRO CI
SYNCHRO1:	MOVE.B	(A2),D3
	BEQ.S	SYNCHRO1
	SUB.W	D3,D2		; ON SE SYNCHRONISE A 4 CYCLES PRES
	LSL.B	D2,D3
	MOVE.W	#8,D3
WAIT_A_BIT:	DBF	D3,WAIT_A_BIT

LINE0:	JSR	L160		; LIGNES DE HARDSCROLLER
LINE1:	JSR	L160		; (AUTOMODIFIEES)
LINE2:	JSR	L160
LINE3:	JSR	L160
LINE4:	JSR	L160
LINE5:	JSR	L160
LINE6:	JSR	L160

	MOVE.B	#2,(A1)		; STABILISATEUR SUPLEMENTAIRE
	MOVE.B	#0,(A1)		; POUR ASSURER LE RETABLISSEMENT
	MOVE.B	#1,(A1)		; DU SHIFTER
	MOVE.B	#0,(A1)

	LEA	PALETTE,A3		; LIGNE DE FULL SPECIALE
	LEA	$FFFF8240.W,A4		; AFIN DE RETABLIR LA PALETTE
	REPT	66		; 76  NOPs MINIMUM
	NOP			; 107 NOPs MAXIMUM
	ENDR
	MOVE.L	(A3)+,D2
	MOVE.L	(A3)+,D3
	MOVE.L	(A3)+,D4
	MOVE.L	(A3)+,D5
	MOVE.L	(A3)+,D6
	MOVE.L	(A3)+,D7
	MOVE.L	(A3)+,A2
	MOVE.L	(A3),A5

	ADDI.W	#160,$140.W		; PETITE ROUTINE DE SYNCHRO
	MOVE.W	$140.W,D0		; QUE L'ON RETROUVERA A CHAQUE
	SUB.B	$FFFF8209.W,D0		; LIGNE.
	LSL.B	D0,D0

	MOVEQ	#0,D0
	MOVE.B	D0,(A0)
	MOVE.B	D1,(A0)
	REPT	13
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	MOVE.L	D2,(A4)+
	MOVE.L	D3,(A4)+
	MOVE.L	D4,(A4)+
	MOVE.L	D5,(A4)+
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	MOVE.L	D6,(A4)+
	MOVE.L	D7,(A4)+
	MOVE.L	A2,(A4)+
	MOVE.L	A5,(A4)+

	;
	; A PARTIR D'ICI, LE REGISTRE A0 EST UTILISE
	;                 LE REGISTRE D0 EST MODIFIE
	;

	REPT	36		; 5 NOPs MIMIMUM
	NOP			; 45 NOPs MAXIMUM
	ENDR
	ADDI.W	#230,$140.W		; LA SYNCHRO DE CETTE LIGNE
	MOVE.W	$140.W,D0
	SUB.B	$FFFF8209.W,D0
	LSR.B	D0,D0

           	REPT	219
           	MOVEQ	#0,D0
	MOVE.B	D0,(A0)
	MOVE.W	A0,(A0)
	ADDI.W	#230,$140.W
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	MOVE.W	A0,$FFFF8260.W
	MOVE.B	D0,$FFFF8260.W
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	MOVE.W	A0,$FFFF8260.W
	MOVE.B	D0,$FFFF8260.W
	JSR	LITTLE		; ROUTINE A TEMPS VARIABLE
	MOVE.W	$140.W,D0
	SUB.B	$FFFF8209.W,D0
	LSR.W	D0,D0
	ENDR

	MOVEQ	#0,D0
	MOVE.B	D0,(A0)
	MOVE.W	A0,(A0)
	ADDI.W	#230,$140.W
	REPT	7
	NOP
	ENDR
	MOVE.W	A0,$FFFF8260.W
	MOVE.B	D0,$FFFF8260.W
	MOVE.B	D0,(A0)
	REPT	9
	NOP
	ENDR
	MOVE.W	A0,$FFFF8260.W
	MOVE.B	D0,$FFFF8260.W
	REPT	3
	NOP
	ENDR
	MOVE.W	A0,(A0)

	REPT	45		; 45 NOPs MINIMUM
	NOP			; 76 NOPs MAXIMUM
	ENDR
	MOVE.W	$140.W,D0
	SUB.B	$FFFF8209.W,D0
	LSR.W	D0,D0

	REPT	44		; ET ON REFAIT 44 LIGNES
           	MOVEQ	#0,D0
	MOVE.B	D0,(A0)
	MOVE.W	A0,(A0)
	ADDI.W	#230,$140.W
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	MOVE.W	A0,$FFFF8260.W
	MOVE.B	D0,$FFFF8260.W
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	NOP
	MOVE.W	A0,$FFFF8260.W
	MOVE.B	D0,$FFFF8260.W
	JSR	LITTLE		; ROUTINE A TEMPS VARIABLE
	MOVE.W	$140.W,D0
	SUB.B	$FFFF8209.W,D0
	LSR.W	D0,D0
	ENDR

	REPT	9		; ON REPLACE LE SHIFTER SUR
	NOP			; LE BON PLAN
	ENDR
	MOVE.B	D0,(A0)
	MOVE.W	A0,(A0)
	REPT	12
	NOP
	ENDR
	MOVE.W	A0,$FFFF8260.W
	MOVE.B	D0,$FFFF8260.W
	
	BSR	MOVINGBACK		; ON TEST LE CLAVIER

	BSR	MAKE_HARD		; ON PREPARE LA COMBINAISON DE
				; HARDSCROLLER POUR LA PROCHAINE
				; VBL

	MOVE.B	$FFFFFA13.W,$FFFFFA07.W	; ON REAUTORISE LES ITs UTILISEES
	MOVE.B	$FFFFFA15.W,$FFFFFA09.W	; DU MFP

	RTE			; FIN DU FULL

LITTLE:	REPT	41		; 41 NOPs MINIMUM
	NOP
	ENDR
	RTS

LFULL:	REPT	4
	NOP
	ENDR
	MOVEQ	#0,D0
	MOVE.B	D0,(A0)
	MOVE.W	A0,(A0)
	ADDI.W	#230,$140.W
	REPT	7
	NOP
	ENDR
	MOVE.W	A0,$FFFF8260.W
	MOVE.B	D0,$FFFF8260.W
	REPT	11
	NOP
	ENDR
	MOVE.W	A0,$FFFF8260.W
	MOVE.B	D0,$FFFF8260.W
	REPT	75
	NOP
	ENDR
	RTS

;
; DIFFERENTES TAILLES DE LIGNE...
;

L230:	ADDI.W	#230,$140.W
	MOVE.B	D0,(A0)
	MOVE.B	D1,(A0)
	REPT	13
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	12
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	75
	NOP
	ENDR
	RTS

L204:	ADDI.W	#204,$140.W
	MOVE.B	D0,(A0)
	MOVE.B	D1,(A0)
	REPT	13
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	12
	NOP
	ENDR
	MOVE.B	D0,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	75
	NOP
	ENDR
	RTS

L184:	REPT	3
	NOP
	ENDR
	MOVE.B	D0,(A0)
	MOVE.B	D1,(A0)
	ADDI.W	#184,$140.W
	REPT	10
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	12
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	75
	NOP
	ENDR
	RTS

L158:	REPT	4
	NOP
	ENDR
	MOVE.B	D0,(A0)
	MOVE.B	D1,(A0)
	ADDI.W	#158,$140.W
	REPT	9
	NOP
	ENDR
	MOVE.B	D0,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	12
	NOP
	ENDR
	MOVE.B	D0,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	75
	NOP
	ENDR
	RTS

L186:	ADDI.W	#186,$140.W
	MOVE.B	D1,(A0)
	MOVE.B	D1,(A0)
	REPT	13
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	12
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	75
	NOP
	ENDR
	RTS

L160:	ADDI.W	#160,$140.W
	REPT	114
	NOP
	ENDR
	RTS

L80:	ADDI.W	#80,$140.W
	REPT	34
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	35
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	35
	NOP
	ENDR
	RTS

L54:	REPT	79
	NOP
	ENDR
	MOVE.B	D1,(A1)
	NOP
	MOVE.B	D0,(A1)
	REPT	20
	NOP
	ENDR
	RTS

	SECTION	DATA

HARD_TBL:	INCBIN	A:\TETRIS.FUL\HARDTBL7.DTA

LINE_TBL:	DC.L	L160
	DC.L	L80
	DC.L	L230
	DC.L	L204
	DC.L	L158
	DC.L	L184

	DC.L	L186
	DC.L	L54
	
PLAYER:	INCBIN	A:\TETRIS.FUL\PLAYER.BIN
MUSIX:	INCBIN	A:\TETRIS.FUL\MUSIX01.MSX

IMAGE:	INCBIN	A:\TETRIS.FUL\TETRIS.PI1

	SECTION	BSS

SAUVE_VBL:	DS.L	1
SAUVE_TMA:	DS.L	1
SAUVE_USP:	DS.L	1
SAUVE_MFP:	DS.L	2
SAUVE_HBL:	DS.L	1
SAUVE_484:	DS.W	1
SAUVE_PHY:	DS.L	1
SAUVE_PAL:	DS.L	8

PALETTE:	DS.L	8

LOGBASE:	DS.L	1
PHYBASE:	DS.L	1

SHIFTER:	DS.L	1

KEY:	DS.W	1

SCREEN0:	DS.W	115*266
SCREEN1:	DS.W	115*266

	END
